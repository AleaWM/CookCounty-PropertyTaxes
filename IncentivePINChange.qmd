---
title: "Incentive PINs Over Time"
format: 
  html:
    code-fold: true
    toc: true
    df-print: paged
---

# Data Preparation

```{r setup, warning = FALSE, output = FALSE}

library(tidyverse)
library(DT)

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

```

# Loading Incentive PIN Data

Data on incentive-class PINs was pulled from the PTAXSIM DB through the "helper_tc_muninames.R" helper file and the incentive data frame written to ".Output/7_output_incentive_classes.csv"

```{r}
# file created in helper_pull_incentivepins_allyears.R
ptax_pins <- read_csv("./Output/incentivePINs_allyears.csv") 
class_dict <- read_csv("./Necessary_Files/class_dict_expanded.csv") 

```

## Trends in Incentive PINs Over Time

Only 1,527 PINs were incentive property classes in 2006.\
4,383 PINs had incentive classification by 2022.

```{r}
#| column: page
#| layout-ncol: 2


#ptax_pins %>% filter(between(class, 600,900) ) %>% group_by(pin) %>% summarize(count = n()) %>% filter(count > 16)
# 632 PINs have existed AND been incentive properties for all years in database.

# ptax_pins %>% mutate(parcel = str_sub(pin, 1, 10) ) %>%
#  group_by(parcel) %>% summarize(count = n())

# ptax_pins %>% mutate(block = str_sub(pin, 1, 7) ) %>%
#  group_by(block) %>% summarize(count = n())

ptax_pins %>% filter(between(class, 600,899) ) %>% group_by(year) %>% summarize(incentive_count = n())
# 4383 existed in 2022. 
# 3652 existed in 2021, etc.


ptax_pins %>% filter(between(class, 600,899) ) %>% group_by(year) %>% summarize(incentive_count = n()) %>% ggplot() +geom_col(aes(y = incentive_count, x = year)) +   labs(
    title = "Incentive PIN Count by Year", x = "", y = "# Incentive PINs") + theme_classic()



```

```{r}
#| include: false
#| label: tbl-pinclass-changes
#| tbl-cap: "PINs that change property class - Delete later, lagged Class method used elsewhere works better for identifying class changes"
#| tbl-subcap:  
#|     - "More exhaustive list of PINs that changed property classes"
#|     - "Too narrow of a filter. Only PINs that existed every year, Classes 600-899"
#| layout-ncol: 2
#| column: screen


ptax_pivot_changed <- ptax_pins %>% 
  pivot_wider(id_cols = c(pin), names_from = "year", values_from =  "class") %>%
  mutate(change = ifelse(as.numeric(`2022`)-as.numeric(`2006`) != 0, 1, 0))%>% 
  filter(change !=0)

ptax_pivot_changed

ptax_pivot_changed_wNAs <- ptax_pins %>% 
  filter(between(class, 600,899)) %>%
  pivot_wider(id_cols = c(pin), names_from = "year", values_from =  "class") %>%
  mutate(change = ifelse(as.numeric(`2022`)-as.numeric(`2006`) != 0,
                         1, 0))%>% 
  filter(change !=0)

ptax_pivot_changed_wNAs
```

-   632 PINs have had an incentive class that has not changed since 2006 (i.e. the earliest tax year in PTAXSIM)

-   4,654 PINs existed during every year (doesn't matter what property class they were)
-   implies the division, splitting, or creation of PINs over time

```{r}
#| layout-ncol: 2
#| label: tbl-years-pin-existed
#| tbl-cap: "Identifying if a PIN existed all years in the database"
#| tbl-subcap: ["Grouped by PIN and  Class", "Grouped by PIN"]

ptax_pins %>% 
  filter(class > 599 & class < 900) %>% 
  group_by(pin, class) %>% 
  summarize(count = n(),
            first_year = first(year),
            last_year = last(year)) %>% 
  arrange(-count)
# 5869 incentive PINs have existed at some point in time.
# 6,178 groups exist when grouping by pin and class
# implying that some incentive PINs change property classes over time


ptax_pins %>% 
  filter(class > 599 & class < 900) %>% 
  group_by(pin) %>% summarize(count = n()) %>% filter(count > 16)
# 632 PINs have existed AND been incentive properties for all years in database.
# 4,654 PINs existed during every year (doesn't matter what property class)
# 5869-4654 = around 1200 PINs created since 2006
```

```{r}
#| label: tbl-pinchange-byMajorClass
#| tbl-cap: "PINs (by Major Class) that had an Incentive Class at some Point in Time" 

unique_ptax_MC <- ptax_pins %>% 
  left_join(class_dict, by = c("class" = "class_code")) %>%
 # mutate(majorclass = str_sub(class, 1, 1)) %>%
  group_by(pin, major_class_code) %>% 
  summarize(count = n(),
            first_year = first(year),
            last_year = last(year)) %>% ungroup() %>%
  arrange(pin, first_year)

unique_ptax_w_MC <- unique_ptax_MC %>% 
  group_by(pin) %>%
  mutate(var2 = cumsum(row_number() == 1 | (major_class_code != dplyr::lag(major_class_code)))) %>% 
  ungroup()


unique_ptax_wide_MC <- unique_ptax_w_MC %>%
  pivot_wider(id_cols = "pin",
              names_from = var2,
              values_from = c(major_class_code, count, first_year, last_year))

unique_ptax_wide_MC
#write_csv(unique_ptax_wide_MC)

```

```{r}
#| label: tbl-pinchange
#| tbl-cap: "PINs that had an Incentive Class at some Point in Time" 

incentpins_2021 <- ptax_pins %>% filter(year == 2021) %>%
          filter(class > 599 & class < 900)

unique_ptax_w_class <- ptax_pins %>% 
  group_by(pin, class) %>% 
  summarize(count = n(), # number of years the PIN shows up in the data set
            first_year = first(year),
            last_year = last(year)) %>% 
  ungroup() %>%
  arrange(pin, first_year)

# make a variable that goes up by 1 every time the property class changes 
unique_ptax_w_class <- unique_ptax_w_class %>% group_by(pin) %>%
  mutate(var2 = cumsum(row_number() == 1 | (class != dplyr::lag(class))))


# some PINs change properties 4 or even 5 times over the years
unique_ptax_wide <- unique_ptax_w_class %>%
  pivot_wider(id_cols = "pin",
              names_from = var2,
              values_from = c(class, count, first_year, last_year)) %>%  
  select( pin, 
          class_1, first_year_1, last_year_1, yrs_existed_1 = count_1,
          class_2, first_year_2, last_year_2, yrs_existed_2 = count_2,
          class_3, first_year_3, last_year_3, yrs_existed_3 = count_3,
          class_4, first_year_4, last_year_4, yrs_existed_4 = count_4,
          class_5, first_year_5, last_year_5, yrs_existed_5 = count_5,
          class_6, first_year_6, last_year_6, yrs_existed_6 = count_6)

unique_ptax_wide


```

```{r}
#| label: tbl-comval-keypins
#| tbl-cap: "Number of PINs Associated with each KeyPIN"

# read in the cleaned file with keypins and pins from the commercial valuation dataset
comval_pins <- read.csv("./Output/manually_cleaned_incentive_pins_AWM.csv") %>%
  mutate(keypin_concat = as.character(keypin_concat)) %>%
  mutate(keypin_concat2 = str_pad(keypin_concat, 14, "left", pad = "0"),
         pins_add = keypin_concat2) %>%
    mutate(pin_cleaned = str_remove_all(pins3, "-")) 
# 3201 obs

# not sure if all KeyPINs exist as their own PIN variable  (i.e. the keypin = pin)
# so adding these step just in case
# will create redundant rows but that is fine, we only keep unique occurrences later
addinkeypin_PINs <- comval_pins %>% 
  select(keypin_concat = keypin_concat2, # need matching variable names for row bind
         pin_cleaned = pins_add)

pins_pivot_cleaned <- comval_pins %>% 
  select(keypin_concat, pin_cleaned)

pins_pivot_cleaned <- rbind(pins_pivot_cleaned, addinkeypin_PINs)
# 6402 obs but we know some are duplicates

pins_pivot_cleaned <- pins_pivot_cleaned %>% unique()
# 3659 obs! That's better


# Get rid of non-incentive properties that came from the comval_pins dataset 
pins_pivot_cleaned <- pins_pivot_cleaned %>%
  filter(pin_cleaned %in% unique_ptax_wide$pin)    # get rid of non-incentive properties included from the keypin cleaning
#3438 obs

pins_pivot_cleaned <- pins_pivot_cleaned  %>%
  mutate(keypin_concat = as.character(keypin_concat),
         keypin_concat = str_pad(keypin_concat, 14, side = "left", pad = "0")) %>%
  mutate(check_me = ifelse(str_length(pin_cleaned) < 14, 1, 0)) %>% 
  filter(check_me == 0)
# 3438 obs
# still has duplicate pins



unique_comval <- pins_pivot_cleaned %>% 
  select(pin_cleaned, keypin_concat) %>% 
  distinct() 
# 2973 pin-keypin combinations 

# number of pins associated with the key pin
unique_comval %>% group_by(keypin_concat) %>% summarize(n = n()) %>% arrange(-n)
# 1831 key pins (aka projects) from the commercial valuation data set from assessors/cook data portal 
```

After unnesting the data downloaded, there were 2976 unique keypin and pin combinations from the commercial valuation data. 1,826 Project IDs came from the preliminary commercial valuation dataset online. 



# PIN to Project Crosswalk

```{r}
#| column: page
#| label: tbl-unique-ptax-wide
#| tbl-cap: "Unique PINs and their Property Class, Number of Years as Class Type, and Years that it was Each Class Type"


head(unique_ptax_wide)

head(unique_comval)
```

```{r}

# Combine unique incentive PINs that have existed ever, The CONTROL variable from CMAP,
# and the keypin from the experimental commercial valuation dataset 

cleanjoin <- full_join(unique_ptax_wide, unique_comval, by = c("pin" = "pin_cleaned"))
# 5871 obs

clean_join <- cleanjoin %>% mutate(parcel = str_sub(pin, 1, 10),
                     block = str_sub(pin, 1, 7))


# now take the ones that didn't merge with the comval data and bring in the CMAP data?
nokeypins <- cleanjoin %>% filter(is.na(keypin_concat))
# nokeypins # 2898 pins do not have key pins 
#(probably expired before 2021 when comval dataset begins recording data)


cleanjoin <- cleanjoin %>% filter(!is.na(keypin_concat)) %>% mutate(needs_keypin = 0)
# 2973 pins joined nicely between ptaxsim and comval 


```

# Projects in 2022

There were 4,385 incentive PINs in tax year 2022 (after merging PTAXSIM incentive pins with the commercial valuation dataset keypins cleaned above). Of those, 1,149 were still missing key pins. Time to see if we can get any more project IDs from the database passed on from CMAP. 

```{r}
incentpins_2022 <- unique_ptax_w_class %>%
        filter(class > 599 & class < 900) %>%
  filter(last_year == 2022) %>%  # implies still existed in 2022
  left_join(unique_comval, by = c("pin" = "pin_cleaned") ) %>%
  mutate(parcel = str_sub(pin, 1, 10),
         block = str_sub(pin, 1, 7),
         township = str_sub(pin, 1, 2)) %>%
  mutate(keypin_concat = ifelse(block >= 2824201 & block <= 2824211, "Amazon", keypin_concat)) %>%
  mutate(
         keypin_concat = ifelse(block >= 2919100 & block <= 2919120, "Amazon", keypin_concat ),

        # keypin_concat = as.character(keypin_concat),
        # keypin_concat = ifelse(keypin_concat >= "2919100010000" & keypin_concat <= "29191050560000", "Amazon", keypin_concat)
          )
# 4385 obs

incentpins_2022 %>% 
      filter(class > 599 & class < 900) %>%
  filter(is.na(keypin_concat)) 
# 1483 missing keypin - less now, 3/20/2024
# 1,149 missing as of 3/21/2024
# 881 missing after even more pins cleaned, 3/21/2024

```

```{r include = FALSE}
incentpins_2022 %>% 
  group_by(block) %>% 
  arrange((pin)) %>%
  summarize(first_key = first(keypin_concat),
            last_key = last(keypin_concat),
            first_pin = first(pin),
            last_pin = last(pin),
            pin_count = n()
            ) %>% arrange(desc(pin_count))
```

```{r include = FALSE}
incentpins_2022 %>% 
 

  filter(block >= 2919107 & block <= 2919120) %>%        # 335 obs, 1 keypin, all in Thornton township
  
 # filter(block >= 2824202 & block <= 2824207) %>%        # 66 PINs, probably the ones in Harvey Muni / Bremen Township
  
  # range of remdiation parcels included in 2022 Notice from Clerks office
  # common address: 160th Western-Hamilton, Markham IL
  # filter( parcel >= 2919107058 & parcel <= 2919120075 ) %>%     # 286 pins, 1 keypin
   # 
   # filter((parcel >= 2824201015 & parcel <= 2824211032) |   ## 66 PINs in Bloom
   #        (parcel >= 2919100001 & parcel <= 2919105056)     ## 202 PINs in Thornton
   #        ) %>%      # 268 obs, no keypins
   # 
   # range of PINs associated with Scannell Prop 420 LLC agreement from 12/27/2021
  #  filter(parcel > 2919107001 & parcel < 2919120018) %>%         # 333 pins in this range
  
  group_by(keypin_concat) %>% summarize(n = n())


```


```{r}
#| label: tbl-pinsinblocks-andparcels
#| tbl-cap: "Number of PINs in 10-Digit Parcels and 7-Digit Blocks"
#| layout-ncol: 2

incentpins_2022 %>% 
      group_by(parcel) %>% 
  summarize(pins_in_parcel = n()) %>% arrange(desc(pins_in_parcel))

incentpins_2022 %>% 
      group_by(block) %>% 
  summarize(pins_in_block = n()) %>% arrange(desc(pins_in_block))
```


```{r eval=FALSE, include = FALSE}
# best guess at creating project-IDs: group by the block or parcel number.
incentpins_2022 %>% 
      filter(class > 599 & class < 900) %>%
  group_by(block, keypin_concat) %>% summarize(n = n()) %>%
  filter(is.na(keypin_concat)) # 400+ blocks missing keypins

incentpins_2022 %>% 
      filter(class > 599 & class < 900) %>%
  group_by(pin, keypin_concat) %>% summarize(n = n()) %>%
  filter(is.na(keypin_concat)) # 1149 pins missing keypins

incentpins_2022 %>% 
      filter(class > 599 & class < 900) %>%
  group_by(parcel, keypin_concat) %>% summarize(n = n()) %>%
  filter(is.na(keypin_concat)) 
# 1119 parcels missing keypins.
# 1149 pins with 1119 parcels implies that some PINs can be grouped at the parcel level at the bare minimum. 
```



```{r}
comval_projects_2022 <- incentpins_2022 %>%   
  filter(class > 599 & class < 900) %>%
  filter(!is.na(keypin_concat)) %>% 
  mutate(needs_keypin = 0 ) %>% 
  select(pin, keypin_concat, needs_keypin)

```

We could attempt to make project IDs that were based only on the idea of incentive PINs in close proximity to other incentive PINs by grouping by Parcel (first 10-digits of PIN) or Block (first 7-digits of PIN)

Lets try seeing if the access file passed on to use from CMAP has project identifiers we can match to some pins.

```{r eval=FALSE, include=FALSE}
# create a keypin variable based on smallest PIN to compare to keypin used by assessor
# ideally, each CONTROL variable would have its own Key PIN.
access_db <- access_db %>% 
  arrange(Status_cleaned, `Concat PIN`) %>% # `Status Cleaned` was manually created in Excel & based off of the `Status` variable.
  group_by(CONTROL, Status_cleaned) %>% 
  mutate(keypin = first(`Concat PIN`), # ideally grabs lowest PIN since that appears to mostly be how the assessor does it. But not always. 
         n_PINs_inControlGroup = n(),  
         keypin_class = first(Class)) %>%
  ungroup() %>% 
  mutate(pin = `Concat PIN`,
         parcel = str_sub(pin, 1, 10),
         block = str_sub(pin, 1, 7)
         ) %>% 
  select(pin, keypin, CONTROL, n_PINs_inControlGroup, keypin_class, Status_cleaned, parcel, block,  everything()) %>% 
  arrange(CONTROL, keypin, pin)

access_db %>% distinct(block) %>% summarize(n = n())
# 2172 unique blocks

access_db %>% ungroup() %>% distinct(pin) %>% summarize(n = n())
# 9205 unique pins

unique_cmap <- access_db %>% 
  ungroup() %>%
  reframe(pin, CONTROL, Class, Status_cleaned, startyear_clean, .by = pin) %>%
  distinct() %>% 
  arrange(pin)

# identify if a PIN in the access DB is associated with more than one project
unique_access <- access_db %>% 
  group_by(pin) %>%
  mutate(var2 = cumsum(row_number() == 1 | 
                         (CONTROL != dplyr::lag(CONTROL)))) %>% 
  arrange(pin, startyear_clean) %>% 
  ungroup() %>% 
  filter(!is.na(var2)) 


unique_access_wide <- unique_access %>%
  pivot_wider(id_cols = "pin",
              names_from = var2,
              values_from = c(CONTROL, Class, Status_cleaned, startyear_clean))

unique_access %>% filter(is.na(var2)) %>% summarize(n=n())

```

```{r}
access_db <- readxl::read_excel("./Necessary_Files/incentivePINs_accessDB_2.xlsx")


missing <- c("n/a", "N/A", "NA")

access_db <- access_db %>% 
  mutate(startyear_clean = ifelse(`Start Year` %in% missing, NA, `Start Year`))

#table(access_db$Status_cleaned)
#access_db_filtered <- access_db %>% filter(Status_cleaned != c("Void", "Excluded", "Divided", "Not Incentive Property", "No Matching Record"))

needs_keypin<- incentpins_2022 %>% 
      filter(class > 599 & class < 900) %>%
  filter(is.na(keypin_concat))
# 1483 obs from PTAXSIM in 2022 need a project ID
# 881 after dealing with Amazon pins. 

keypinless_join <- needs_keypin %>% 
  left_join(access_db, by = c("pin" = "Concat PIN")) %>% 
  select(CONTROL, pin, everything()) %>%
  rename(keypin = CONTROL, yrs_exist_inPTAX = count)

keypinless_join # 1600  # 1266
# 998 3/21/24


keypinless_join %>% arrange(pin, keypin) %>%
  group_by(pin) %>% 
  summarize(n=n(), # number of times the PIN shows up in the access database
            first_project = first(keypin),
            last_project = last(keypin))  %>% 
  arrange(first_project)
# 1483 unique PINs still 
# 1149 3/21/2024 12pm AWM
# 881 3/21/2024 2pm AWM

```


```{r}
project_pins_accessDB <- keypinless_join %>% 
  arrange(pin, keypin) %>%
  group_by(pin) %>% 
  summarize(n=n(), # number of times the PIN shows up in the access database
            #first_project = first(keypin),
            keypin_concat = last(keypin)) %>% 
  mutate(needs_keypin = ifelse(is.na(keypin_concat),1,0)) %>%
  select(pin, keypin_concat, needs_keypin) %>% 
  distinct() 
# there are 1149 distinct PINs that needed projects
# and 716 that now have identifiers
# 165 still need a project ID

project_pins_accessDB


```

```{r}
# there are 346 project identifiers for the 811 pins that
project_pins_accessDB %>% group_by(keypin_concat) %>% summarize(pincount = n()) %>% arrange(desc(pincount))
project_pins_accessDB %>% group_by(pin) %>% distinct()

```


```{r}
both_groups <- rbind(comval_projects_2022, project_pins_accessDB)


source("helper_tc_muninames_2022.R")


projects <- both_groups %>% 
  select(keypin=keypin_concat, pin, needs_keypin) %>% distinct() %>% 
  mutate(keypin = ifelse(is.na(keypin), as.character(pin), as.character(keypin)))

incentpins_2022 <- ptax_pins %>% 
    filter(class > 599 & class < 900) %>%
  filter(year == 2022) %>%
  left_join(projects, by = "pin") %>% 
  mutate(tax_code_num = as.character(tax_code_num)) %>%
    left_join(tc_muninames) %>% 
  select(keypin, pin, class, tax_code_num, everything()) %>% 
  select(-c(exe_homeowner:exe_vet_dis_ge70)) %>%
  left_join(tc_muninames) %>%
  mutate(clean_name = ifelse(is.na(clean_name), "Unincorporated", clean_name))


incentpins_2022 %>% arrange(-tax_bill_total)

```


```{r}
#| label: tbl-incentivepins
#| tbl-cap: "Incentive PIN Values"
#| column: page

incentpins_2022
```

```{r}
#| label: tbl-incentiveprojects
#| tbl-cap: "Totals for Project within a Tax Code - Note some have multiple tax codes"
#| column: page


incent_projects_2022 <- incentpins_2022 %>%
  group_by(keypin, tax_code_num) %>%
  summarize(class = first(class), 
            tax_code_num = as.character(first(tax_code_num)),
            tax_code_rate = mean(tax_code_rate),
            tax_bill_total = sum(tax_bill_total), 
           av_mailed = sum(av_mailed), 
           av_certified = sum(av_certified), 
           av_board = sum(av_board), 
           av_clerk = sum(av_clerk), 
           exe_abate = sum(exe_abate), 
           pins_inproject = n() ) %>% 
  left_join(tc_muninames) %>%
  mutate(clean_name = ifelse(is.na(clean_name), "Unincorporated", clean_name))


datatable(incent_projects_2022, rownames= FALSE, colnames = c('Keypin' = 'keypin', 'Class' = 'class', 'Tax Code' = 'tax_code_num', 'Project Tax Bill' = 'tax_bill_total', 'AV Mailed' = 'av_mailed', 'AV Certified' = 'av_certified', 'AV Board' = 'av_board', 'AV Clerk' = 'av_clerk', 'Abatements' = 'exe_abate', 'PIN Count per Project' = 'pins_inproject', 'Tax Code Rate' = 'tax_code_rate')) %>%
 # formatRound(c(3), digits = 0) %>%
  formatCurrency(c('Project Tax Bill', 'AV Mailed', 'AV Certified', 'AV Board', 'AV Clerk'), digits = 0)
```

```{r}
#| label: tbl-projectsummary
#| column: screen-inset
#| tbl-cap: "Project Level: Summed AV and Taxbills of PINs within a Project"

projectlevelsummary <- incentpins_2022 %>% 
  filter(class > 599 & class < 900) %>%
  
  group_by(keypin, tax_code_num) %>%   
  summarize(clean_name = first(clean_name), 
            class = first(class),
            tax_code_num = as.character(first(tax_code_num)), 
            project_taxbill = sum(tax_bill_total),
            proj_av_mailed = sum(av_mailed), 
            proj_av_certified = sum(av_certified), 
            proj_av_board = sum(av_board), 
            proj_av_clerk = sum(av_clerk), 
            proj_exe_abate = sum(exe_abate),
            pins_inproject = n() ) %>% 
            #   pins_inproject = sum(pins_inproject) ) %>% 
  select(clean_name, keypin, pins_inproject, project_taxbill, proj_av_mailed, proj_av_clerk, everything()) %>% 
  #select(-c(agency_name, agency_num, year,shpfile_name)) %>% 
  arrange(-proj_av_clerk)


datatable(projectlevelsummary,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name', 'Class'='class', 'Keypin' = 'keypin', 'Tax Code' = 'tax_code_num', 'Project Tax Bill' = 'project_taxbill', 'AV Mailed' = 'proj_av_mailed', 'AV Certified' = 'proj_av_certified', 'AV Board' = 'proj_av_board', 'AV Clerk' = 'proj_av_clerk', 'Abatements' = 'proj_exe_abate', 'PIN Count per Project' = 'pins_inproject')) %>%
 # formatRound(c(3), digits = 0) %>%
  formatCurrency(c('Project Tax Bill', 'AV Mailed', 'AV Certified', 'AV Board', 'AV Clerk'), digits = 0)
```

```{r}
#| label: tbl-munilevel-projects
#| column: screen-inset
#| tbl-cap: "Incentive Projects in Municipalities"

muni_projects <- incent_projects_2022 %>% 
  filter(class > 599 & class < 900) %>%
  group_by(clean_name) %>%   
  summarize(# tax_code_num = as.character(first(tax_code_num)), 
          muni_incentive_taxes_collected = sum(tax_bill_total),
           muni_av_mailed = sum(av_mailed),
          muni_av_certified = sum(av_certified), 
          muni_av_board = sum(av_board), 
          muni_av_clerk = sum(av_clerk),
          muni_exe_abate = sum(exe_abate),
          projects_inMuni = n(),
          pins_inMuni = sum(pins_inproject) ) %>% 
  select(clean_name, muni_incentive_taxes_collected, muni_av_mailed, muni_av_clerk, everything())

datatable(muni_projects,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name', 'Incentive Projects Taxes Collected' = 'muni_incentive_taxes_collected', 'AV Mailed' = 'muni_av_mailed', 'AV Certified' = 'muni_av_certified', 'AV Board' = 'muni_av_board', 'AV Clerk' = 'muni_av_clerk', 'Abatements' = 'muni_exe_abate', '# Incent. Projects in Muni' = 'projects_inMuni', '# PINs in Muni with Incentives' = 'pins_inMuni')) %>%
 # formatRound(c(3), digits = 0) %>%
  formatCurrency(c('Incentive Projects Taxes Collected', 'AV Mailed', 'AV Certified', 'AV Board', 'AV Clerk'), digits = 0)
```


# Map unmatched Parcels 

First, map the Amazon parcels
```{r}

library(sf)
library(ggspatial)


incentpins_2022<- incentpins_2022 %>%
  filter(keypin == "Amazon") %>%
  mutate(parcel = str_sub(pin, 1, 10))

amazon <- unique(substr(incentpins_2022$pin, 1, 10))

amazon_geo <- lookup_pin10_geometry(year = 2022, pin10 = amazon) %>%
  st_as_sf(wkt = "geometry", crs = 4326)

amazon_geo <- amazon_geo %>%
  left_join(incentpins_2022, by = c("pin10" = "parcel"))



amazon_map <- ggplot() +
  annotation_map_tile(type = "cartolight", zoomin = -1) +
  geom_sf(
    data = amazon_geo,
    aes(fill = clean_name),
    alpha = 0.5,
    linewidth = 0.1
  ) +
  annotation_scale(location = "br") +
  theme_void() +
  theme(
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 10),
    legend.key.size = unit(18, "points"),
    legend.position = "bottom"
  )

amazon_map

```



# Projects in 2021

3652 incentive pins existed in 2021. 

After merging in the commercial valuation dataset, there are still 788 PINs missing key pins. Time to see if we can get any more project IDs from the database passed on from CMAP. 

```{r}

incentpins_2021 <- incentpins_2021 %>%
        filter(class > 599 & class < 900) %>%
 # filter(last_year == 2021) %>%  # implies still existed in 2022
  left_join(unique_comval, by = c("pin" = "pin_cleaned") ) %>%
  mutate(parcel = str_sub(pin, 1, 10),
         block = str_sub(pin, 1, 7),
         township = str_sub(pin, 1, 2),
         tax_bill_total = round(tax_bill_total)) 

incentpins_2021 %>% 
      filter(class > 599 & class < 900) %>%
  filter(is.na(keypin_concat)) 


```



```{r}
#| label: tbl-pinsinblocks-andparcels2021
#| tbl-cap: "Number of PINs in 10-Digit Parcels and 7-Digit Blocks"
#| layout-ncol: 2

incentpins_2021 %>% 
      group_by(parcel) %>% 
  summarize(pins_in_parcel = n()) %>% arrange(desc(pins_in_parcel))

incentpins_2021 %>% 
      group_by(block) %>% 
  summarize(pins_in_block = n()) %>% arrange(desc(pins_in_block))
```



```{r}
comval_projects_2021 <- incentpins_2021 %>%   
  filter(class > 599 & class < 900) %>%
  filter(!is.na(keypin_concat)) %>% 
  mutate(needs_keypin = 0 ) %>% 
  select(pin, keypin_concat, needs_keypin)

```

We could attempt to make project IDs that were based only on the idea of incentive PINs in close proximity to other incentive PINs by grouping by Parcel (first 10-digits of PIN) or Block (first 7-digits of PIN)

Lets try seeing if the access file passed on to use from CMAP has project identifiers we can match to some pins.


```{r}

needs_keypin<- incentpins_2021%>% 
      filter(class > 599 & class < 900) %>%
  filter(is.na(keypin_concat))

keypinless_join <- needs_keypin %>% 
  left_join(access_db, by = c("pin" = "Concat PIN")) %>% 
  select(CONTROL, pin, everything()) %>%
  rename(keypin = CONTROL)

keypinless_join

keypinless_join %>% arrange(pin, keypin) %>%
  group_by(pin) %>% 
  summarize(n=n(), # number of times the PIN shows up in the access database
            first_project = first(keypin),
            last_project = last(keypin))  %>% 
  arrange(first_project)

```


```{r}
project_pins_accessDB <- keypinless_join %>% 
  arrange(pin, keypin) %>%
  group_by(pin) %>% 
  summarize(n=n(), # number of times the PIN shows up in the access database
            #first_project = first(keypin),
            keypin_concat = last(keypin)) %>% 
  mutate(needs_keypin = ifelse(is.na(keypin_concat),1,0)) %>%
  select(pin, keypin_concat, needs_keypin) %>% 
  distinct() 

project_pins_accessDB


```

```{r}
#| layout-ncol: 2


# there are 346 project identifiers for the 811 pins that
project_pins_accessDB %>% group_by(keypin_concat) %>% summarize(pincount = n()) %>% arrange(desc(pincount))
project_pins_accessDB %>% group_by(pin) %>% distinct()

```

> 82 PINs still need a keypin after merging in the project codes from CMAP's older files.

```{r}
both_groups <- rbind(comval_projects_2021, project_pins_accessDB)


source("helper_tc_muninames.R")


projects <- both_groups %>% 
  select(keypin=keypin_concat, pin, needs_keypin) %>% 
  distinct()  # %>% mutate(keypin = ifelse(is.na(keypin), as.character(pin), as.character(keypin)))

incentpins_2021 <- ptax_pins %>% 
  filter(class > 599 & class < 900) %>%
  filter(year == 2021) %>%
  left_join(projects, by = "pin") %>% 
  mutate(tax_code_num = as.character(tax_code_num)) %>%
  left_join(tc_muninames) %>% 
  select(keypin, pin, class, tax_code_num, everything()) %>% select(-c(exe_homeowner:exe_vet_dis_ge70)) %>%
  left_join(tc_muninames) %>%
  mutate(clean_name = ifelse(is.na(clean_name), "Unincorporated", clean_name))


incentpins_2021 %>% arrange(-tax_bill_total)

```


```{r}
#| label: tbl-incentivepins2021
#| tbl-cap: "Incentive PIN Values"
#| column: page

incentpins_2021
```

```{r}
#| label: tbl-incentiveprojects2021
#| tbl-cap: "Totals for Project within a Tax Code - Note some have multiple tax codes"
#| column: page


incent_projects_2021 <- incentpins_2021 %>%
  group_by(keypin, tax_code_num) %>%
  summarize(class = first(class), 
            tax_code_num = as.character(first(tax_code_num)),
            tax_code_rate = mean(tax_code_rate),
            tax_bill_total = round(sum(tax_bill_total)), 
           av_mailed = sum(av_mailed), 
           av_certified = sum(av_certified), 
           av_board = sum(av_board), 
           av_clerk = sum(av_clerk), 
           exe_abate = sum(exe_abate), 
           pins_inproject = n() ) %>% 
  left_join(tc_muninames) %>%
  mutate(clean_name = ifelse(is.na(clean_name), "Unincorporated", clean_name))


datatable(incent_projects_2021, rownames= FALSE, colnames = c('Keypin' = 'keypin', 'Class' = 'class', 'Tax Code' = 'tax_code_num', 'Project Tax Bill' = 'tax_bill_total', 'AV Mailed' = 'av_mailed', 'AV Certified' = 'av_certified', 'AV Board' = 'av_board', 'AV Clerk' = 'av_clerk', 'Abatements' = 'exe_abate', 'PIN Count per Project' = 'pins_inproject', 'Tax Code Rate' = 'tax_code_rate')) %>%
 # formatRound(c(3), digits = 0) %>%
  formatCurrency(c('Project Tax Bill', 'AV Mailed', 'AV Certified', 'AV Board', 'AV Clerk'), digits = 0)
```

```{r}
#| label: tbl-projectsummary2021
#| column: screen-inset
#| tbl-cap: "Project Level: Summed AV and Taxbills of PINs within a Project"

projectlevelsummary <- incentpins_2021 %>% 
  filter(class > 599 & class < 900) %>%
  
  group_by(keypin, tax_code_num) %>%   
  summarize(clean_name = first(clean_name), 
            class = first(class),
            tax_code_num = as.character(first(tax_code_num)), 
            project_taxbill = round(sum(tax_bill_total)),
            proj_av_mailed = sum(av_mailed), 
            proj_av_certified = sum(av_certified), 
            proj_av_board = sum(av_board), 
            proj_av_clerk = sum(av_clerk), 
            proj_exe_abate = sum(exe_abate),
            pins_inproject = n() ) %>% 
  select(clean_name, keypin, pins_inproject, project_taxbill, proj_av_mailed, proj_av_clerk, everything()) %>% 
  #select(-c(agency_name, agency_num, year,shpfile_name)) %>% 
  arrange(-proj_av_clerk)


datatable(projectlevelsummary,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name', 'Class'='class', 'Keypin' = 'keypin', 'Tax Code' = 'tax_code_num', 'Project Tax Bill' = 'project_taxbill', 'AV Mailed' = 'proj_av_mailed', 'AV Certified' = 'proj_av_certified', 'AV Board' = 'proj_av_board', 'AV Clerk' = 'proj_av_clerk', 'Abatements' = 'proj_exe_abate', 'PIN Count per Project' = 'pins_inproject')) %>%
 # formatRound(c(3), digits = 0) %>%
  formatCurrency(c('Project Tax Bill', 'AV Mailed', 'AV Certified', 'AV Board', 'AV Clerk'), digits = 0)
```

```{r}
#| label: tbl-munilevel-projects2021
#| column: screen-inset
#| tbl-cap: "Incentive Projects in Municipalities"

muni_projects <- incent_projects_2021 %>% 
  filter(class > 599 & class < 900) %>%
  group_by(clean_name) %>%   
  summarize(# tax_code_num = as.character(first(tax_code_num)), 
          muni_incentive_taxes_collected = sum(tax_bill_total),
           muni_av_mailed = sum(av_mailed),
          muni_av_certified = sum(av_certified), 
          muni_av_board = sum(av_board), 
          muni_av_clerk = sum(av_clerk),
          muni_exe_abate = sum(exe_abate),
          projects_inMuni = n(),
          pins_inMuni = sum(pins_inproject) ) %>% 
  select(clean_name, muni_incentive_taxes_collected, muni_av_mailed, muni_av_clerk, everything())

datatable(muni_projects,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name', 'Incentive Projects Taxes Collected' = 'muni_incentive_taxes_collected', 'AV Mailed' = 'muni_av_mailed', 'AV Certified' = 'muni_av_certified', 'AV Board' = 'muni_av_board', 'AV Clerk' = 'muni_av_clerk', 'Abatements' = 'muni_exe_abate', '# Incent. Projects in Muni' = 'projects_inMuni', '# PINs in Muni with Incentives' = 'pins_inMuni')) %>%
 # formatRound(c(3), digits = 0) %>%
  formatCurrency(c('Incentive Projects Taxes Collected', 'AV Mailed', 'AV Certified', 'AV Board', 'AV Clerk'), digits = 0)
```



