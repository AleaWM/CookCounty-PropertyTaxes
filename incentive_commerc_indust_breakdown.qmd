---
title: "Incentive PINs Over Time"
format: 
  html:
    code-fold: true
    toc: true
    tbl-cap-location: margin
---

# Data Preparation

```{r setup, warning = FALSE, output = FALSE}

library(tidyverse)
library(DT)
library(flextable) # for exporting to word or PDF files. Kable does not do that

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       line_spacing = 1,
                       big.mark = ",",
                       )
# keypins <- read_csv("Output/all_keypins.csv")

options(DT.options = list())
```



```{r}
# file created in helper_pull_incentivepins_allyears.R
# ptax_pins <- read_csv("./Output/incentivePINs_allyears.csv") 

# all pins for 2022
ptax_pins <- read_csv("Output/Dont_Upload/0_joined_PIN_data_2022.csv") %>% 
  mutate(class = as.numeric(class)) %>%
  filter( (class >= 100 & class < 200) |     # if we want vacant property owned by them too.
  (class >= 500 & class < 900) )  %>%
  select(-c(propclass_1dig:av.y))

# already in 0_joined data
class_dict <- read_csv("./Necessary_Files/class_dict_expanded.csv") %>%
  select(class_code, comparable_props, Alea_cat, incent_prop)

# proj_xwalk <- read_csv("Output/pin_project_crosswalk.csv")   # incentive properties only

# temporary work-around until we have full keypin list.
proj_xwalk <- read_csv("Output/all_keypins.csv")               # all commercial valuation properties but made with very unreliable data from commercial valuation dataset. 

source("helper_tc_muninames_2022.R")
tc_muninames <- tc_muninames %>%  select(-year)

ptax_pins <- ptax_pins %>% left_join(proj_xwalk)

ptax_pins <- ptax_pins %>% 
  mutate(tax_code_num = as.character(tax_code_num)) %>%
  left_join(tc_muninames)

ptax_pins <- ptax_pins %>% left_join(class_dict, by =  c("class" = "class_code"))


```

# Commercial and Industrial Properties

```{r}
#| label: tbl-cooktotals
#| tbl-cap: "Commercial and Industrial PINs in Cook County. Includes property classes 500-899."

nonres_pins2022 <- ptax_pins


#nonres_pins2022 <- nonres_pins2022 %>% group_by(keypin) %>% mutate(proj_hasincentive = class)
table <- nonres_pins2022 %>% 
  group_by(Alea_cat) %>% 
  summarize(proptype_pincount = n(),
            projects = n_distinct(keypin),
            av=sum(av))

flextable(table) %>% 
 # set_caption("Totals for Cook County") %>% 
  set_header_labels(Alea_cat = "Property Type", proptype_pincount = 'PINs', projects = "Project IDs", av = 'AV (Final)') %>%
  set_table_properties( layout = "autofit", width = .75)
```



```{r}
#| label: tbl-projectsinMunis
#| tbl-cap: "Grouped by Property Type within Municipality."


table1 <- nonres_pins2022 %>% 
  group_by(clean_name, Alea_cat) %>% 
  summarize(pin_count = n(),
         project_count = n_distinct(keypin), 
         av = sum(av))

datatable(table1,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name',   'Property Type' = 'Alea_cat', 'PIN Count' = 'pin_count', 'Project Count' = 'project_count', 'AV (Final)' = 'av')) %>%
  formatCurrency('AV (Final)', digits = 0)
```


```{r}
#| label: tbl-incentivizedornot
#| tbl-cap: "Grouped by Incentivized or not within Municipality"

table2 <- nonres_pins2022 %>% 
  group_by(clean_name, incent_prop) %>%   # projects can be counted twice if the project has incentive and normal commercial/industrial prop classes.
  summarize(pin_count = n(),
         project_count = n_distinct(keypin), 
         av=sum(av))

datatable(table2,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name',   'Incentivized?' = 'incent_prop', 'PIN Count' = 'pin_count', 'Project Count' = 'project_count', 'AV (Final)' = 'av')) %>%
  formatCurrency('AV (Final)', digits = 0)
```


```{r, include = FALSE}


####  over 10,000 rows. Shows all keypins and count of pins  ###
#### for all commercial properties                           ###
# nonres_pins2022 %>% 
#   mutate(has_incentive = ifelse(class >= 600, 1, 0)) %>%
#   group_by(keypin) %>%
#   summarize(count = n(),     # number of pins in project
#          sum = sum(has_incentive), # number of pins that had incentives
#          av = sum(av)) %>%
#   mutate(pct_pins_w_inct = sum/count ) %>%  # pct of pins that had incentive property class
#   arrange(desc(keypin))
```




# Appendix Tables

## Incentive and non-Incentive, Commercial and Industrial Properties

```{r echo = FALSE}
#| label: tbl-propertybreakdown
#| tbl-cap: "Breakdown of incentivized properties within commercial and industrial properties"

table <- nonres_pins2022 %>% 
  group_by(clean_name, incent_prop, Alea_cat) %>%   # projects can be counted twice if the project has incentive and normal commercial/industrial prop classes.
  summarize(pin_count = n(),
         project_count = n_distinct(keypin), 
         av=sum(av),
)


datatable(table,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name', 'Incentivized?'='incent_prop',   'Property Type' = 'Alea_cat', 'PINs in Projects' = 'pin_count', 'Project Count' = 'project_count', 'AV (Final)' = 'av'),
          ) %>%
  formatCurrency('AV (Final)', digits = 0)
```

## Projects with incentivized and non-incentivized PINs

```{r}
#| label: tbl-mixedprojects
#| tbl-cap: "Projects with Incentivized and non-Incentivized PIN Property Classes"

table <- nonres_pins2022 %>% 
  mutate(has_incentive = ifelse(class >= 600, 1, 0)) %>%
  group_by(keypin) %>%
  summarize(count = n(),     # number of pins in project
         sum = sum(has_incentive), # number of pins that had incentives
         av = sum(av)) %>%
  mutate(pct_pins_w_inct = round(sum/count, digits = 3) ) %>%  # pct of pins that had incentive property class
  arrange(pct_pins_w_inct) %>% 
  filter(pct_pins_w_inct > 0 & pct_pins_w_inct < 1) %>%
  arrange(desc(pct_pins_w_inct)) %>%
  select(keypin, count, sum, pct_pins_w_inct, av)

## Other option for graphing the keypins with mixed property incentivization
## Using DT instead of flextable
# datatable(table,
#           rownames= FALSE,
#           colnames = c('Project ID' = 'keypin', 'PINs per Project' = 'count', 'PINs with Incentive Class' = 'sum', 'Assessed Value (Final)' = 'av', 'Pct of PINs Incentivized' = 'pct_pins_w_inct'))


flextable(table) %>% 
  set_caption("Projects with Both Incentivized and non-Incentivized Property Clases") %>% 
  set_header_labels(keypin = 'Project ID', count = 'PINs per \nProject', sum = 'PINs with \nIncentives', pct_pins_w_inct = 'Pct of PINs \nIncentivized', av = 'Project AV  \n(Final)'
                    )  %>% set_table_properties( layout = "autofit", width = .75)


```

## Summed by Project Identifier

```{r}
#| label: tbl-projectIDs
#| tbl-cap: "Summed to the Project Level. Note: We still do not have a true keypin-pin crosswalk so these numbers are very likely to change once the makeshift crosswalk is replaced"

table <- nonres_pins2022 %>% 
  mutate(has_incentive = ifelse(class >= 600, 1, 0)) %>%
  group_by(keypin) %>%
  mutate(av = sum(av)) %>%
  ungroup() %>%
  group_by(keypin) %>%
  summarize(count = n(), # number of pins in project
         sum = sum(has_incentive), # number of pins that had incentives
         av_incent = sum(if_else(incent_prop == "Incentive", av, 0)),
         av_nonincent = sum(ifelse(incent_prop == "Non-Incentive", av, 0))) %>%
  mutate(pct_pins_w_inct = round(sum/count, digits = 3), # pct of pins that had incentive property class
         ) %>%  
  filter(av_incent > 0) %>%  
  arrange(desc(count)) 

  

# Other option for graphing the keypins with mixed property incentivization
# Using DT instead of flextable
datatable(table,
          rownames= FALSE,
          colnames = c('Project ID' = 'keypin', 'PINs per Project' = 'count', 'PINs with\nIncent Class' = 'sum', 'Pct of PINs\nIncentivized' = 'pct_pins_w_inct', 'AV in Incent Class' = 'av_incent', 'AV in non-Incent Class' = 'av_nonincent')) %>%
  formatPercentage('Pct of PINs\nIncentivized', digits = 1)


# flextable(table) %>% 
#   set_caption("Projects with at least some Incentivized PINs") %>% 
#   set_header_labels(keypin = 'Project ID', count = 'PINs per\nProject',  
#                     pct_pins_w_inct = 'Pct of PINs\nIncentivized', 
#                     Incentive = 'AV from Incentive\nProjects', 
#                     `non-Incentive` = 'AV from non-Incentive\nProjects'
#                     )  %>% set_table_properties( layout = "autofit", width = .75)


```
