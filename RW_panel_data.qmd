---
title: "Panel Data Generation Machine"
date: "July 1, 2024"
date-modified: "`r format(Sys.Date(), '%m-%d-%Y')`"
# format: pdf
---

```{r setup}
#| output: FALSE

library(tidyverse)
library(plm)
library(glue)
library(DT)
library(flextable)
library(kableExtra)

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       #line_spacing = 1,
                       big.mark = ","
                       )

options(DT.options = list())

FitFlextableToPage <- function(ft, pgwidth = 6){
  ft_out <- ft %>% autofit()
  ft_out <- width(ft_out, width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))
  return(ft_out)
}

```

# Helper File: "helper_pull_comm_ind_allyears.R" (updated 7-9-24)

# Changes (updated 7-9-24) 

### Balance and filter panel data for 2011-2022.

- Limit time range to only 2011-2022   
- Ensure only PIN observations that existed every year between 2011 and 2022 (inclusive)     

```{r balance_panel}

df_2006_2022 <- read_csv("./Output/comm_ind_PINs_2006-2022.csv")


# 1.8mil obs
df_2011_2022 <- df_2006_2022 |>
  # Filter years from 2011 - 2022 1.28mil obs.
  filter(year >= 2011 ) |> 
  # Filter for PINs that existed EVERY year between 2011 and 2022
  group_by(pin) |>
  #new "age" variable for 2011 to 2022 so that only 2 of 17 years aren't in our sample or something.
  mutate(years_2011_2022 = n()) |>
  ungroup()

# Let's look at the distribution

n_table <- df_2011_2022 |>
  group_by(years_2011_2022) |>
  rename(years_exists = years_2011_2022) |>
  summarize(n = n())

kable(n_table, format = "html", escape = FALSE) |>
  kable_styling(full_width = FALSE) |>
  column_spec(1, width = "3cm")

n_table |>
  filter(years_exists < 12) |>
  ggplot(aes(x = years_exists, y = n)) +
  geom_col() +
  geom_text(aes(label = n), vjust = -0.5, color = "black") +
  scale_x_continuous(breaks = seq(0, 12, 1)) +
  labs(
    title = "Distribution of PIN Appearances in DF",
    subtitle = "Max years = 12, n = 1,215,480",
    x = "Years Exists",
    y = "Count"
  ) +
  theme_minimal()


# Filter it down to only PINs that exist all years gets us to 1.21mil obs.
df_all_years <- df_2011_2022 |>
  filter(years_2011_2022 == 12)

```

### Create new variables

## Notes

> Why did you start with `df_2006_2022` dataframe in the chunk below? Should it be the `df_2011_2022` dataframe tat you had just filtered??

```{r df_simplify}
#| output: FALSE



df_2012_2022 <- df_2006_2022 |>
  filter(year >= 2012)
 # filter(between(year, 2012, 2022))

```


```{r csv_print}
#| eval: false

write_csv(df_2006_2022, "./Output/panel_data_2006-2022_2024_07_04.csv")

write_csv(df_2012_2022, "./Output/panel_data_2012-2022_2024_07_04.csv")

```



### Who trusts commit histories?

2024_7_9:

Removed exemption variables
Accounted for LOA changes over time
TIF indicator
Shrunk file size

```{r old_changes}
#| eval: FALSE
#| code-fold: true

df <- df |>
  mutate(assess_ratio = as.numeric(assess_ratio)) |>
  mutate(incent_prop = as.factor(incent_prop))

df <- df |>
  mutate(assess_ratio = ifelse(incent_prop == "Incentive", .1142, assess_ratio)) |>
  mutate(fmv = av_clerk/assess_ratio) |>
  select(!(starts_with("exe_"))) |>
  select(-loa_2022, -Option2, -Res_nonRes, -assessment_level, -used_in2021)

```
