---
title: "Polycentricity & Representation"
subtitle: "Descriptive Statistics & Models<br>(2012-2022)"
author: "Michael Van Hulle"
date: "August 11, 2024"
date-modified: last-modified
date-format: long
format: 
  html:
    embed-resources: true
    theme: lumen
    code-fold: true
    code-line-numbers: true
    code-overflow: wrap
    toc: true
    toc-location: left
    df-print: paged
editor_options: 
  chunk_output_type: inline
---

```{r setup}
#| output: false

# Load libraries

library(tidyverse)
library(fixest)
library(modelsummary)
library(tinytable)
library(scales)

# Get rid of scientific notation

options(scipen = 999)

# Modelsummary Formatting

fit_format <- function(x) format(round(x, 2), big.mark=",")

fit <- list(
  list("raw" = "nobs", "clean" = "N", "fmt" = fit_format),
  list("raw" = "df", "clean" = "DF", "fmt" = fit_format),
  list("raw" = "adj.r.squared", "clean" = "R2 Adj.", "fmt" = fit_format),
  list("raw" = "F", "clean" = "F-stat.", "fmt" = fit_format),
  list("raw" = "p.value", "clean" = "p-value", "fmt" = fit_format)
)

```

# Import and clean data

```{r data_import}
#| output: false

df <- read_csv("apsa_data.csv")

df_clean <- df |>
  rename_with(~ gsub("^tc_c_", "", .)) |>
  rename_with(~ gsub("^PC_", "pins_", .))

```

```{r new_vars}
#| output: false

# 346222 obs.

df_tc <- df_clean |>
  filter(!is.na(clean_name)) |>
  filter(fmv != 0) |> #revisit this
  group_by(year) |>
  mutate(cty_fmv = sum(fmv),
         cty_mean_fmv = mean(fmv),
         cty_med_fmv = median(fmv),
         cty_sd_fmv = sd(fmv)) |>
  ungroup() |>
  group_by(year, tax_code) |>
  summarize(rate = first(tax_code_rate), 
          muni = first(clean_name), 
          fmv_incentive = sum(fmv_incentive), 
          fmv_taxed = sum(fmv_taxed),
          inTIF = ifelse(sum(fmv_inTIF) > 0, 1, 0), 
          fmv_incents_inTIF = sum(fmv_incents_inTIF),
          fmv_residential = sum(fmv_residential), 
          fmv_commercial = sum(fmv_commercial), 
          fmv_industrial = sum(fmv_industrial), 
          fmv = sum(fmv), 
          total_rev_fmv = sum(total_bill_current), 
          levy_fmv = sum(levy), 
          cty_fmv = first(cty_fmv), 
          cty_mean_fmv = first(cty_mean_fmv), 
          cty_med_fmv = first(cty_med_fmv), 
          cty_sd_fmv = first(cty_sd_fmv) ) |>
  mutate( perc_incent = fmv_incentive/fmv) |>
  arrange(year) |>
  group_by(tax_code) |>
  mutate(lag_fmv = lag(fmv, n = 1),
         lag_fmv_incentive = lag(fmv_incentive, n = 1),
         lag_incents_fmv_tif = lag(fmv_incents_inTIF),
         delta_fmv = (fmv - lag_fmv)/lag_fmv,
         lag_rate = lag(rate, n = 1),
         lag_total_rev = lag(total_rev_fmv, n = 1),
         #land_hhi = ((fmv_residential/fmv)^2 + (fmv_commercial/fmv)^2 + (fmv_industrial/fmv)^2, na.rm = TRUE),
         perc_inc_prod = (fmv_industrial + fmv_commercial)/fmv,
         chi = ifelse(muni == "Chicago", 1, 0)
  ) |>
  ungroup()|>
  group_by(year, muni) |>
  mutate(muni_fmv = sum(fmv),
         muni_tc_med = median(fmv),
         muni_tc_mean = mean(fmv),
         muni_tc_sd = sd(fmv)) |>
  ungroup() |>
  mutate(across(contains("fmv"),  ~ . / 1e6)) |>
  mutate(tc_dist_med = (fmv - muni_tc_med)/muni_tc_sd,
         tc_dist_mean = (fmv - muni_tc_mean)/muni_tc_sd,
         cty_dist_med = (fmv - cty_med_fmv)/cty_sd_fmv,
         cty_dist_mean = (fmv - cty_mean_fmv)/cty_sd_fmv) |>
  filter(year >= 2012) |>
  mutate(year = as.factor(year),
         tax_code = as.character(tax_code),
         muni = as.factor(muni),
         chi = as.factor(chi),
         inTIF = as.factor(inTIF)
         ) |>
  ungroup()

```

# Descriptive Statistics

```{r glimpse_new_vars}

df_tc |>
  select(-tax_code, -muni) |>
  group_by(year) |>
  datasummary_skim()

```

## Tax Code Visualizations

```{r n_code_graphs}

summary_data <- df_tc |>
  group_by(year) |>
  summarize(n = n() / 1000)

ggplot(summary_data, aes(x = n, y = factor(year, levels = 2022:2012))) + 
  geom_col() + 
  geom_text(aes(label = sprintf("%.1f", n)), hjust = -0.3) +  
  labs(title = "Tax Codes by Year, 2012-2022 (in thousands)",
       x = "tax codes (thousands)",
       y = "Year") + 
  scale_x_continuous(limits = c(0, max(summary_data$n, na.rm = TRUE) * 1.1), 
                     expand = expansion(add = c(0, 0))) +  
  theme_classic()

```

```{r fmv_dist_graphs}

summary_data <- df_tc |>
  group_by(year, muni) |>
  summarize(mean_fmv = mean(fmv), .groups = 'drop') |>
  group_by(year) |>
  summarize(avg_muni_fmv = mean(mean_fmv))

ggplot(summary_data, aes(x = avg_muni_fmv, y = factor(year, levels = 2022:2012))) + 
  geom_col() + 
  geom_text(aes(label = sprintf("%.1f", avg_muni_fmv)), hjust = -0.3) +  # Increased hjust
  labs(title = "Average Municipal Tax Code FMV by Year, 2012-2022", 
       y = "Year",
       x = "Average FMV") + 
  scale_x_continuous(limits = c(0, max(summary_data$avg_muni_fmv, na.rm = TRUE) * 1.1), 
                     expand = expansion(add = c(0, 0))) +  
  theme_classic()

```

```{r n_tc_muni}

# Calculate summary data and store in a temporary variable
summary_data <- df_tc |>
  group_by(year, muni) |>
  summarize(n = n(), .groups = 'drop') |> 
  group_by(year) |>
  summarize(avg_n = mean(n))

# Calculate max_avg_n
max_avg_n <- max(summary_data$avg_n, na.rm = TRUE)

# Create the plot using the summary_data and max_avg_n
ggplot(summary_data, aes(x = avg_n, y = factor(year, levels = 2022:2012))) +
  geom_col() +
  geom_text(aes(label = sprintf("%.1f", avg_n)), hjust = -0.3) + 
  labs(title = "Average Tax Codes per Municipality by Year, 2012-2022", 
       y = "Year",
       x = "Average Number of Tax Codes") + 
  scale_x_continuous(limits = c(0, max_avg_n * 1.1), 
                     expand = expansion(add = c(0, 0))) +  
  theme_classic()


```

```{r fmv_tc_muni}


```

```{r taxcode_descrip_stats}

```

# Best OLS Model

**DV: FMV in Tax Code w/ Incentive Classification**

```{r OLS}
#| tbl-cap: "DV: FMV in Tax Code w/ Incentive Classification<br><i>Results are Robust to Mean and Median</i>"
#| tbl-cap-location: top

best_ols <- list(
  
  "(1)" = lm(fmv_incentive ~ cty_dist_mean + tc_dist_mean + perc_inc_prod
             + muni + year + inTIF,
             data = df_tc),

  "(2)" = lm(fmv_incentive ~ cty_dist_mean + tc_dist_mean + perc_inc_prod
             + chi + chi*cty_dist_mean + chi*tc_dist_mean + inTIF + chi*inTIF
             + chi*inTIF
             + muni + year,
             data = df_tc)
      )

modelsummary(best_ols,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )

```

```{r}


```

Key takeaway: Chicago is less likely than the rest of the municipalities in Cook County to grant incentive classifications to low-FMV tax codes. This is important because it means Chicago is using an enabling rule (ability to grant incentive classifications) at a lower rate than the rest of Cook. This outcome lends itself to several interpretations, but, at a minimum, we know Chicago behaves differently.

# Best FE Model

**DV: FMV in Tax Code w/ Incentive Classification**

```{r best_fe}
#| tbl-cap: "DV: FMV in Tax Code w/ Incentive Classification"
#| tbl-cap-location: top
#| warning: false

best_fe <- list(
                
  "(1)" = feols(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi | muni + year,
                data = df_tc),
  
  "(2)" = feols(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi + chi
                + chi*cty_dist_mean + chi*tc_dist_mean | muni + year,
                data = df_tc),
  
  "(3)" = feols(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi | year,
                data = df_tc),
  
  "(4)" = feols(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi + chi
                + chi*cty_dist_mean + chi*tc_dist_mean | year,
                data = df_tc)
  )

modelsummary(best_fe,
             stars = TRUE,
             fmt = function(x) round(x, 2)
             )

```

Key takeaway: Chicago is less likely than the rest of the municipalities in Cook County to grant incentive classifications to low-FMV tax codes. This is important because it means Chicago is using an enabling rule (ability to grant incentive classifications) at a lower rate than the rest of Cook. This outcome lends itself to several interpretations, but, at a minimum, we know Chicago behaves differently.

# Trial Models

DV for *all* models is amount of FMV with incentive classification.

## OLS

```{r very_naive}
#| tbl-cap: "Naive Models (no control variables)"

models_naive <- list(
  
  "(1)" = lm(fmv_incentive ~ fmv,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ fmv + rate,
             data = df_tc),
  
  "(3)" = lm(fmv_incentive ~ fmv + rate + perc_inc_prod,
             data = df_tc)

  )

modelsummary(models_naive,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "(Intercept)"
             )

```

```{r w_controls}
#| tbl-cap: "Naive Models with Muni and Year Controls"

models_naive_controls <- list(
  
  "(1)" = lm(fmv_incentive ~ fmv + muni + year,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ fmv + rate + muni + year,
             data = df_tc),
  
  "(3)" = lm(fmv_incentive ~ fmv + rate + perc_inc_prod + muni + year,
             data = df_tc)
  
)

modelsummary(models_naive_controls,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )

```

```{r controls_lags}

models_lags_controls <- list(
  
  "(1)" = lm(fmv_incentive ~ fmv + lag_fmv + muni + year,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ fmv + lag_fmv + perc_inc_prod + muni + year,
             data = df_tc),
  
   "(3)" = lm(fmv_incentive ~ fmv + fmv^2 + perc_inc_prod + muni + year,
             data = df_tc)
)

modelsummary(models_lags_controls,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )


```

```{r controls_lags_hhi}

models_lags_controls <- list(
  
  "(1)" = lm(log(fmv_incentive + 1) ~ log(fmv + 1) + log(lag_fmv + 1) + muni + year,
             data = df_tc),
  
  "(2)" = lm(log(fmv_incentive + 1) ~ log(fmv + 1) + log(lag_fmv + 1) + land_hhi + muni + year,
             data = df_tc),
  
   "(3)" = lm(log(fmv_incentive + 1) ~ log(fmv + 1) + log(lag_fmv + 1) + log(fmv^2 + 1) + land_hhi + muni + year,
             data = df_tc)
)

modelsummary(models_lags_controls,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )
```

```{r dif_from_tc}

models_dif_from_tc <- list(
  
  "(1)" = lm(fmv_incentive ~ tc_dist_mean,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ tc_dist_mean + land_hhi,
             data = df_tc),
  
  "(3)" = lm(fmv_incentive ~ tc_dist_mean + muni + year,
             data = df_tc),
  
  "(4)" = lm(fmv_incentive ~ tc_dist_mean + land_hhi + muni + year,
             data = df_tc)
  
                        )

modelsummary(models_dif_from_tc,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )

```

```{r dif_from_cty}

models_dif_from_cty <- list(
  
  "(1)" = lm(fmv_incentive ~ cty_dist_med,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ cty_dist_mean,
             data = df_tc),
  
  "(3)" = lm(fmv_incentive ~ cty_dist_med + muni + year,
             data = df_tc),
  
  "(4)" = lm(fmv_incentive ~ cty_dist_mean + muni + year,
             data = df_tc)
  
                            )

modelsummary(models_dif_from_cty,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )

```

```{r dif_from_cty_land_use}

models_dif_cty_landuse <- list(
  
  "(1)" = lm(fmv_incentive ~ cty_dist_med + land_hhi,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ cty_dist_med + land_hhi + muni + year,
             data = df_tc)
  
                  )

modelsummary(models_dif_cty_landuse,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )

```

```{r cty_tc_land_use}

models_cty_tc_landuse <- list(
  
  "(1)" = lm(fmv_incentive ~ cty_dist_med + tc_dist_med + land_hhi,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ cty_dist_med + tc_dist_med + land_hhi + muni + year,
             data = df_tc)
  
                  )

modelsummary(models_cty_tc_landuse,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )

```

```{r cty_tc_land_use_mean}

models_cty_tc_landuse <- list(
  
  "(1)" = lm(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi,
             data = df_tc),
  
  "(2)" = lm(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi + muni + year,
             data = df_tc)
  
                  )

modelsummary(models_cty_tc_landuse,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit = "Intercept|muni|year"
             )

```

## FE at municipality level

```{r basic_fe_trial}

fe_ez <- list(
  
  "(1)" = feols(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi |
                  muni + year,
                data = df_tc),
                
  "(2)" = feols(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi + chi
                + chi*cty_dist_mean + chi*tc_dist_mean | muni + year,
                data = df_tc),
  
  "(3)" = feols(fmv_incentive ~ cty_dist_mean + tc_dist_mean + land_hhi + chi
                + chi*cty_dist_mean + chi*tc_dist_mean | year,
                data = df_tc)
  )

modelsummary(fe_ez,
             stars = TRUE,
             fmt = function(x) round(x, 2)
             )

```
