---
title: "Models for Circulation - Updated after Circulation"
author: "MVH & AWM"
date: 8/17/24
date-modified: last-modified
date-format: long
format: 
  html:
    code-fold: true
    toc: true
    toc-location: left
    tbl-cap-location: top
    fig-cap-location: top
    df-print: paged
---

# Data Prep

```{r setup}
#| output: false

options(scipen = 999, digits = 4) #no scientific notation

# Load packages

library(tidyverse)
library(glue)
library(fixest)
library(modelsummary)
library(tinytable)
library(sandwich)
library(clubSandwich)
library(tinytable)

```


```{r recodedata}


land <- c(100, 180, 190, 192, 193, 500, 550, 637, 650, 651, 700, 742, 800, 850, 900)

building <- c(201: 221, 225:236, 278:299, 301:399,401, 417:499, 501:549, 551:599, 638, 654:693, 701:735, 743:799, 800:835, 851:899, 901:999)

vacant = c(100:199)

comm_ind <- read_csv("./Output/comm_ind_PINs_2011to2022_timeseries.csv") 

year_count <- 12

comm_ind <- comm_ind %>%
    mutate(incent_change = ifelse(years_existed < year_count, "Excluded", incent_change),
           incent_status = ifelse(years_existed < year_count, "Excluded", incent_status),
           incent_status = ifelse(incent_status == "Gains & Loses Incent", "Excluded", incent_status),
           landuse_change = ifelse(years_existed < year_count, "Excluded", landuse_change),
           landuse_change = ifelse(landuse_change == "Exempt Sometime", "Excluded", landuse_change))

comm_ind <- comm_ind |>

  # set reference levels
  mutate(incent_change = as.factor(incent_change),
         incent_status = as.factor(incent_status),
         landuse_change = as.factor(landuse_change),
         triad = as.factor(Triad),
         in_tif = as.factor(in_tif),
         land_use = as.factor(land_use),
         incent_prop = as.factor(incent_prop),
         clean_name = as.factor(clean_name),
         incent_indicator = ifelse(incent_prop == "Incentive", 1, 0),
         incent_change = relevel(incent_change, ref = "Never Incentive"),
        landuse_change = relevel(landuse_change, ref = "Always Commercial"),
        incent_status = relevel(incent_status, ref = "Never had Incentive"),
         incent_prop = relevel(incent_prop, ref = "Non-Incentive"),
         triad = relevel(triad, ref = "City"),
         land_use = relevel(land_use, ref = "Commercial"))|> 
  
  # create vacancy variables
  mutate(building = ifelse(class %in% building, 1, 0),
         nonvacant = ifelse(class %in% vacant, 0, 1)) %>%
  group_by(pin) %>% 
  arrange(year) %>%
  mutate(building_lag = lag(building),
         nonvacant_lag = lag(nonvacant)) |>

# select variables

  select(pin, class, year, clean_name, 
         incent_prop, incent_status, base_year_fmv_2011, 
         base_year_fmv_2011_w,
         land_use, major_class_code, landuse_change, incent_change, triad, 
         reassess_lag, reassessed_year, building, building_lag, nonvacant, 
         nonvacant_lag, fmv_growth_2011_w, fmv_growth_2011,
         incent_change_year, in_tif)


```

# Models

```{r incent_final_models}
table(comm_ind$land_use)

table(comm_ind$incent_status)
table(comm_ind$incent_prop)
table(comm_ind$landuse_change)

name_map <- c(
  "incent_propIncentive" = "Incentive Property",
  "gain_incent" = "Gains Incentive",
  "land_useCommercial" = "Commercial",
  "land_useIndustrial" = "Industrial",
  "land_useOther Land Use" = "Other Land Uses",
  "land_useLand" = "Land",
  
  "land_useCommercial:incent_statusGained Incentive" = "Commercial (Gains Incentive)",
  "land_useCommercial:incent_statusLost Incentive" = "Commercial (Lost Incentive)",
  "land_useCommercial:incent_statusGains & Loses Incent" = "Commercial (Multi Incent Change)",
  
  "land_useIndustrial:incent_statusGained Incentive" = "Industrial (Gains Incentive)",
  "land_useIndustrial:incent_statusLost Incentive" = "Industrial (Lost Incentive)",
  "land_useIndustrial:incent_statusGains & Loses Incent" = "Industrial (Multi Incent Change)",
  
  "land_useCommercial:incent_changeChanges Sometime" = "Commercial (Changes Incentive)",
  "land_useIndustrial:incent_changeChanges Sometime" = "Industrial (Changes Incentive)",
 
     "incent_propIncentive:landuse_changeAlwaysIndustrial" = "Incentive (Always Industrial)",

   "incent_propIncentive:landuse_changeChanges Land Use" = "Incentive (Changes Land Use)",
  
  "gain_incent:landuse_changeChanges Land Use" = "Changes Land Use and Gains Incentive"
)

gof_format_fun <- function(x) format(round(x, 3), big.mark=",")



# gof_map <- 

incent_paper_models <- list(
  
  "PIN-Level" = list(
  
  "I" = 
    
    feols(fmv_growth_2011_w ~ incent_prop + land_use +
            land_use*incent_prop
                           | pin + year,
                           panel.id = c("pin", "year"),
                           vcov = "NW",
                           data = comm_ind),
  
  "II" = 
    
    feols(fmv_growth_2011_w ~ incent_prop + land_use +
            landuse_change*incent_status + land_use*incent_status+ landuse_change*incent_prop
                           | pin + year,
                           panel.id = c("pin", "year"),
                           vcov = "NW",
                           data = comm_ind)
  ),
                           
  "Municipality-Level" = list(
    
    # model wouldn't let me do land_use*incent_status so changed it back to incent_prop
    "I" = feols(fmv_growth_2011_w ~ incent_prop + land_use +
            land_use*incent_prop
                           | clean_name + year,
                           panel.id = c("clean_name", "year"),
                           vcov = "DK",
                           data = comm_ind),
  
   "II" = 
    
    feols(fmv_growth_2011_w ~ incent_prop + land_use +
            landuse_change*incent_status
                           | clean_name + year,
                           panel.id = c("clean_name", "year"),
                           vcov = "DK",
                           data = comm_ind)
    
  )
)

gof_mm <- tibble::tribble(
  ~raw,        ~clean,        ~fmt,
  "nobs",      "N",             0,#fmt_significant(3),
  "adj.r.squared", "R2 Adj.", 2,
  "vcov.type", "Std. Errors", 0
  #"se_type", "Standard Errors:", 3,
  #"p.value", "p-value", 2
  )

formatted_regression_models <- modelsummary(incent_paper_models,
             shape = "cbind",
             fmt = function(x) round(x, 2),
           #  coef_map = name_map,
             gof_map = gof_mm,
             stars = TRUE)

#class(formatted_regression_models) Yea it's a tinytable!

save_tt(formatted_regression_models,
        "reg_models.docx",
        overwrite = TRUE)

formatted_regression_models

```

```{r}
incent_paper_models <- list(
  
  "PIN-Level" = list(
  
  "I" = 
    
    feols(fmv_growth_2011 ~ incent_prop + land_use +
            land_use*incent_prop
                           | pin + year,
                           panel.id = c("pin", "year"),
                           vcov = "NW",
                           data = comm_ind),
  
  "II" = 
    
    feols(fmv_growth_2011 ~ incent_prop + land_use +
            landuse_change*incent_status + land_use*incent_status + incent_prop*landuse_change
                           | pin + year,
                           panel.id = c("pin", "year"),
                           vcov = "NW",
                           data = comm_ind)
  ),
                           
  "Municipality-Level" = list(
    
    # model wouldn't let me do land_use*incent_status so changed it back to incent_prop
    "I" = feols(fmv_growth_2011 ~ incent_prop + land_use +
            land_use*incent_prop
                           | clean_name + year,
                           panel.id = c("clean_name", "year"),
                           vcov = "DK",
                           data = comm_ind),
  
   "II" = 
    
    feols(fmv_growth_2011 ~ incent_prop + land_use +
            landuse_change*incent_status
                           | clean_name + year,
                           panel.id = c("clean_name", "year"),
                           vcov = "DK",
                           data = comm_ind)
    
  )
)

gof_mm <- tibble::tribble(
  ~raw,        ~clean,        ~fmt,
  "nobs",      "N",             0,#fmt_significant(3),
  "adj.r.squared", "R2 Adj.", 2,
  "vcov.type", "Std. Errors", 0
  #"se_type", "Standard Errors:", 3,
  #"p.value", "p-value", 2
  )

formatted_regression_models <- modelsummary(incent_paper_models,
             shape = "cbind",
             fmt = function(x) round(x, 2),
           #  coef_map = name_map,
             gof_map = gof_mm,
             stars = TRUE)

#class(formatted_regression_models) Yea it's a tinytable!

save_tt(formatted_regression_models,
        "reg_models_notwinsorized.docx",
        overwrite = TRUE)

formatted_regression_models
```

# Hierarchical Linear Models

```{r}
# library(lme4)
# comm_ind$clean_name = as.factor(comm_ind$clean_name)
# 
# intercept.only.model <- lmer(fmv_growth_2011_w ~ incent_prop + land_use + year + (1 | clean_name), data = comm_ind)
#  
# comm_ind$intercept.only.preds <- predict(intercept.only.model)

```


# Scratchwork to Delete w/ Alea

> Check that vcovHC() works with "HC3" as a robust standard error type. I didn't think hc3 was an option in that package but maybe I'm mixing the packages up. 

> Never mind: we're using NW SEs


```{r}
#| label: reassessment-timings
#| include: false
#| results: hold


table(comm_ind$first_incent_year)
table(comm_ind$next_reassessment)
```



```{r}
comm_ind_df <- comm_ind
comm_ind_df %>% 
  filter(year == 2022) %>% 
  group_by(building) %>% 
  summarize(n=n())
```


**Figure out how to code something that would represent this situation and allow us to model it:** 

The treatment is having the class of property go from a non-incentive class to an incentive class. Need to consider if it is a reassessment year or not. If it is not a reassessment year, then the class change should result in a change in AV that comes purely from the change in the level of assessment (25% to 10%).  If it is a reassessment year, then the change in value is due to the change in level of assessment and the change in the FMV of the property due to local property trends.  

- We still have the mailed_av that is then appealed by the incentive property which should only reflect the change in market trends since CCAO is removed from the incentive process and the board of appeals is the one that changes the property class. The mailed_av and the clerk_av should still have the same proportion of change in the the AV from the level of assessment (25% to 10%).   

- After a property gets its class changed to an incentive class, how does its fair market value change in the **next assessment cycle** compared to properties that did not get an incentive class?  

- some kind of difference-in-differences design   

# Fixed Effect Models

## The "Final" Table

```{r}
models <- list(
       "Pin-Year" = feols(fmv_growth_2011_w ~ incent_prop  
                  | pin + year, 
                  panel.id = c("pin", "year"),
                  vcov = "newey_west",
                  data = comm_ind %>% filter(year>2011)
        ),
       
        "Pin-Year" = feols(fmv_growth_2011_w ~ incent_prop*land_use  
                  | pin + year, 
                  panel.id = c("pin", "year"),
                  vcov = "newey_west",
                  data = comm_ind %>% filter(year>2011)
        ),
        
        "Pin-Year" = feols(fmv_growth_2011_w ~ incent_prop*land_use + reassessed_year*incent_prop 
                                 | pin + year, 
                                 panel.id = c("pin", "year"),
                                 vcov = "newey_west",
                                 data = comm_ind %>% filter(year>2011),
        ),
       
               "Muni-Year" = feols(fmv_growth_2011_w ~ incent_prop | clean_name + year,
                                   panel.id = c("pin", "year"),
                            vcov = "DK",
                            data = comm_ind %>% filter(year>2011),
        ),
       
        "Muni-Year" = feols(fmv_growth_2011_w ~ incent_prop*land_use | clean_name + year,
                                                             panel.id = c("pin", "year"),

                            vcov = "DK",
                            data = comm_ind %>% filter(year>2011),
        ),
        "Muni-Year" = feols(fmv_growth_2011_w ~ incent_prop*land_use + incent_prop*reassessed_year| clean_name + year,
                            vcov = "DK",
                                                             panel.id = c("pin", "year"),

                            data = comm_ind %>% filter(year>2011),
                            
                            
        )                       
        )
      

modelsummary(models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.", 
             output = "flextable")

```

```{r}
muni_fe <- fixef(models$`Muni-Year`)

plot(muni_fe$clean_name)

summary(muni_fe$clean_name)

## Muni Dummies
comm_ind_df$clean_name <- relevel(comm_ind_df$clean_name, ref = "Chicago")
feols(fmv_growth_2011_w ~ incent_prop*land_use + incent_prop*reassessed_year + clean_name |  year,
                            vcov = "DK",
                                                             panel.id = c("pin", "year"),

                           data = comm_ind_df %>% filter(year>2011)
) %>% summary()
```

**StandardErrors **   
"For clustering with fixed effects to be necessary (and a good idea), several conditions need to hold. First, there needs to be treatment effect heterogeneity. That is, the treatment effect must be quite different for different individuals.

If that is true, there’s a second condition. Either the fixed effect groups/individuals in your data need to be a non-random sampling of the population. That is, some groups are more likely to be included in your sample than others. or, within fixed effect groups/individuals, your treatment variable is assigned in a clustered way. For example, with city fixed effects, are certain individuals in that city more likely to be treated than others?

So before clustering, think about whether both conditions are likely to be true. If it is, go ahead and cluster! If not, don’t bother, as the clustering will make your standard errors larger than they’re supposed to be." - [The Effect](https://theeffectbook.net/ch-FixedEffects.html) 


## Muni and PIN fixed effects

```{r}
#| label: tbl-winsorize-muni-pin_fe
#| tbl-cap: "Comparison of different combinations of Muni, PIN, and Year Fixed Effects. 2012-2022. Winsorized FMV for growth."
#| warning: false
#| results: hold


muni_fe_models <- list(
  "PIN-Year" = feols(fmv_growth_2011_w ~ land_use  + incent_prop| pin + year,
                   panel.id = c("pin", "year"),
                   vcov = "NW",
                   data = comm_ind_df %>% filter(year>2011)),
  
  "Muni-Year" = feols(fmv_growth_2011_w ~ incent_prop + land_use 
                      | clean_name + year,
                     # panel.id = c("pin", "year"),
                      vcov = "twoway",
                      data = comm_ind_df %>% filter(year>2011)),
  
  "PIN-Year 2" = feols(fmv_growth_2011_w ~ incent_prop*land_use +
                         reassessed_year*incent_prop + in_tif
                       | pin + year,
                       panel.id = c("pin", "year"),
                       vcov = "newey_west",
                       data = comm_ind_df %>% filter(year>2011))    
)


modelsummary(muni_fe_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.", 
             output = "flextable")

```


## Other Variations of Fixed Effect Models

### PIN-level fixed effects - winsorized

```{r}
#| label: tbl-pin_fe
#| tbl-cap: "DV is Indexed Growth since 2011. Excludes tax year 2011. PIN & Year Fixed Effects. FMV is winsorized for each year before FMV Growth calculation"
#| warning: false
#| message: false

pin_fe_models <- list(
  
      "1" = feols(fmv_growth_2011_w ~ land_use 
                  | pin + year,
                  data = comm_ind_df %>% filter(year>2011)
      ),
      
      "2" = feols(fmv_growth_2011_w ~ incent_prop + land_use 
                  | pin + year,
                  data = comm_ind_df %>% filter(year>2011)    
      ),
      
      
      "3" = feols(fmv_growth_2011_w ~ incent_prop*land_use  
                  | pin + year, 
                  data = comm_ind_df %>% filter(year>2011)
      ),
      
      "4" = feols(fmv_growth_2011_w ~ incent_prop*land_use + reassessed_year*incent_prop 
                  | pin + year, 
                  data = comm_ind_df %>% filter(year>2011),
      ),
            "NW SE" = feols(fmv_growth_2011_w ~ incent_prop*land_use + reassessed_year*incent_prop 
                  | pin + year, 
                  panel.id = c("pin", "year"),
                  vcov = "newey_west",
                  data = comm_ind_df %>% filter(year>2011),
)
)

modelsummary(pin_fe_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.", output = "flextable")

```

```{r }
#| label: tbl-pin_withtriadreassess_fe
#| tbl-cap: "PIN-Year-Reassessed-Triad fixed effects. Winsorized FMV for FMV Growth."
#| include: false


pin_fe_models <- list(
  
      "1" = feols(fmv_growth_2011_w ~ land_use 
                  | pin + year + reassessed_year^triad, vcov = "threeway",
                       data = comm_ind_df
                       ),
      
      "2" = feols(fmv_growth_2011_w ~ incent_prop + land_use 
                  | pin + year + reassessed_year^triad, vcov = "threeway",
                       data = comm_ind_df 
                       ),


      "3" = feols(fmv_growth_2011_w ~ incent_prop*land_use  
                  | pin + year + reassessed_year^triad, vcov = "threeway",
                       data = comm_ind_df 
                       )
                )

modelsummary(pin_fe_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.")

```


### Muni-Level Fixed Effects - Don't Use!


```{r}
#| label: tbl_muni_withtriadreassess_fe
#| tbl-cap: "Municipality-Year fixed effects. Winsorized FMV for FMV growth."
#| warning: false
#| results: hold

muni_fe_models <- list(
  
      "1" = feols(fmv_growth_2011_w ~ land_use | clean_name + year,
                   vcov = "twoway",
                       data = comm_ind_df ),
      
      "2" = feols(fmv_growth_2011_w ~ incent_prop + land_use | clean_name + year,
                                     vcov = "twoway",
                       data = comm_ind_df 
                       ),


      "3" = feols(fmv_growth_2011_w ~ incent_prop*land_use + incent_prop*reassessed_year| clean_name + year,
                                                       vcov = "twoway",

                       data = comm_ind_df  )
      
                        )

modelsummary(muni_fe_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.", 
             output = "flextable")

```


### Commercial VS Industrial Models

The industrial subset keeps a property (all years) if they were industrial property at any point in time.

The commercial subset keeps a property (all years) if they were commercial property at any point in time.

**Winsorized FMV Growth, Muni and Year Fixed Effects**

Use 3 Fixed Effects  and cluster by PIN & Muni. Not year

Interaction term  between incent_prop * land_use

```{r}
#| results: hold
#| eval: false

industrial_subset <- comm_ind_df |> 
  group_by(pin) |>
  filter(any(land_use == "Industrial"))

commercial_subset <- comm_ind_df |> 
  group_by(pin) |>
  filter(any(land_use == "Commercial"))


muni_fe_new_vars_mods <- list(
  
  "Industrial- Muni Year FE" = feols(fmv_growth_2011_w ~ land_use*incent_prop + in_tif
                 | clean_name + year, 
                              data = industrial_subset
  ),
    
  "Industrial- PIN, Muni, Year FE" = feols(fmv_growth_2011_w ~ land_use*incent_prop + in_tif
                 | pin + clean_name + year,
                              data = industrial_subset
  ),

  "Commercial- Muni Year FE" = feols(fmv_growth_2011_w ~ land_use*incent_prop + in_tif
                 | clean_name + year,  
                              data = commercial_subset
  ),
    "Commercial Subset, Muni&PIN FE" = feols(fmv_growth_2011_w ~ land_use*incent_prop + in_tif
                 | pin + clean_name + year,
                              data = commercial_subset
  )
)
modelsummary(muni_fe_new_vars_mods,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.",
             output = "flextable")
```


**Industrial Subset with Winsorized FMV Growth**

```{r industrial_models}
#| results: hold
#| eval: false

muni_fe_new_vars_mods <- list(
  
     "Incentive Calass" = feols(fmv_growth_2011_w ~ incent_prop
                 | pin + clean_name + year,
                 data = industrial_subset),
     
      "Land Use" = feols(fmv_growth_2011_w ~ relevel(land_use, ref="Industrial")
                 | pin+ clean_name + year, 
                 data = industrial_subset
                       ),
      "Interaction" = feols(fmv_growth_2011_w ~ i(land_use, incent_prop, ref = "Industrial")
                      #        incent_prop*relevel(land_use, ref="Industrial") 
                 | pin + clean_name + year, 
                 data = industrial_subset
                       ))

modelsummary(muni_fe_new_vars_mods,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.") 


```

**Commercial Subset with Winsorized FMV Growth**

```{r commercial_models}
#| results: hold
#| eval: false

muni_fe_new_vars_mods <- list(
  
     "Incentive Class" = feols(fmv_growth_2011_w ~ incent_prop
                 | clean_name + year,
                 data = commercial_subset
                 ),
      "Land Use" = feols(fmv_growth_2011_w ~ land_use
                 | clean_name + year, 
                 data = commercial_subset
                       ),
      "Muni, Year FE" = feols(fmv_growth_2011_w ~ incent_prop*land_use 
                 | clean_name + year, 
                 data = commercial_subset
                       ),
     
  
        "PIN,Muni,Year FE" = feols(fmv_growth_2011_w ~ incent_prop*land_use
                 | pin + clean_name + year,  
                 data = commercial_subset
                       )
)

modelsummary(muni_fe_new_vars_mods,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             gof_omit = "AIC|BIC|Log.Lik.") 


```

> DV for all non-logit regressions: FMV growth since 2011

## Pooled OLS - With and Without Muni and Year Controls

```{r}
#| eval: false

ols_models <- list(
  
  "POLS (No Muni/Year Dummies)" = lm(fmv_growth_2011_w ~ incent_prop*land_use + year,
                data = comm_ind_df),
  
  "POLS (Year Dummies)" = lm(fmv_growth_2011_w ~ incent_prop*land_use + year,
                data = comm_ind_df),
  
  "POLS (Year & Muni Dummies)" = lm(fmv_growth_2011_w ~ incent_prop*land_use
             + clean_name + year,
                data = comm_ind_df))


modelsummary(ols_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'clean_name|year',
             gof_omit = "AIC|BIC|Log.Lik.", output = "flextable")


```

### OLS w/ Dummy Variables vs. FEs

In a nutshell, we need to eliminate time-invariate features of PINs, which requires PIN fixed effects or PIN dummy variables. PIN dummies are prohibitively computationally expensive, requiring a 3WFE model instead of dummy variables.

```{r}
#| label: tbl-dummies_vs_3wfe
#| tbl-cap: "Difference Between Pooled OLS with Dummy Variables and Fixed Effects Model Specifications"
#| eval: false

compare_models <- list(
  
  "POLS w/ Year & Muni Dummies" = lm(fmv_growth_2011_w ~ incent_prop*land_use
             + clean_name + year,
                data = comm_ind_df),
    
  "Muni/Year FE" = feols(fmv_growth_2011_w ~ incent_prop*land_use 
                         | clean_name + year,
                         data = comm_ind_df), 
  
  "PIN/Muni/Year FE" = feols(fmv_growth_2011_w ~ incent_prop*land_use 
                         | pin + clean_name + year,
                         data = comm_ind_df)
)



compare_models_vcov <- lapply(compare_models, function(model) {
  list(
    model = model,
    vcov = robust_vcov(model)
  )
})

models <- lapply(compare_models_vcov, `[[`, "model")
vcovs <- lapply(compare_models_vcov, `[[`, "vcov")

modelsummary(models,
             vcov = vcovs,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'clean_name|year',
             gof_omit = "AIC|BIC|Log.Lik.", 
             output = "flextable")


```

```{r} 
#| label: tbl-reassessinteractwithstatus
#| tbl-cap: "Interaction between status (pre and post treatment) and assessment year (0 or 1) plus year FE and then year and city FE."
#| eval: false
#| include: false

ols_models <- list(
    "Year Controls" = lm(fmv_growth_2011_w ~  reassessed_year*status + year,
                data = comm_ind_df),
  
  "Year and Muni Controls" = lm(fmv_growth_2011_w ~ reassessed_year*status +
             + clean_name + year,
                data = comm_ind_df))


modelsummary(ols_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'clean_name|year',
             gof_omit = "AIC|BIC|Log.Lik.") #|>  theme_tt("grid")

```

I'm not sure why this document has graphs.

```{r dataexploration, eval=FALSE}
comm_ind_df |>
  filter(year==2022)|>
  ggplot(aes(fmv_growth_2006_w)) +
  geom_histogram(bins = 100) +
  theme_classic()

comm_ind_df |>
  filter(year==2022)|>
  ggplot(aes(fmv_growth_2011_w)) +
  geom_histogram(bins = 100) +
  theme_classic()

comm_ind_df |>
  select(fmv_growth_2011_w) |>
  ungroup() |>
  summarize(max = max(fmv_growth_2011_w, na.rm = TRUE), 
            min = min(fmv_growth_2011_w, na.rm=TRUE), 
            mean = mean(fmv_growth_2011_w, na.rm = TRUE),
            median = median(fmv_growth_2011_w, na.rm = TRUE), 
            sd= sd(fmv_growth_2011_w, na.rm=TRUE))


# Look at FMV growth
comm_ind_df |> ungroup() |>
      filter(year == 2022)|>
  summarize(min_growth = min(fmv_growth_2011_w, na.rm=TRUE), 
            max_growth = max(fmv_growth_2011_w, na.rm=TRUE), 
            mean_growth = mean(fmv_growth_2011_w, na.rm=TRUE), 
            med_growth = median(fmv_growth_2011_w, na.rm=TRUE),
            sd_growth = sd(fmv_growth_2011_w, na.rm=TRUE))


# Look at base_year_fmv_2011_2
comm_ind_df |> ungroup() |>
    filter(year == 2022)|>
  summarize(min_fmv = min(base_year_fmv_2011_w, na.rm=TRUE), 
            max_fmv = max(base_year_fmv_2011_w, na.rm=TRUE), 
            mean_fmv = mean(base_year_fmv_2011_w, na.rm=TRUE), 
            med_fmv = median(base_year_fmv_2011_w, na.rm=TRUE),
            sd_fmv = sd(base_year_fmv_2011_w, na.rm=TRUE))

comm_ind_df |>
      filter(year == 2021)|>
  ggplot() +
  geom_freqpoly(aes(base_year_fmv_2011_w, color = "FMV in 2011")) +
  labs(
    title = "Distribution of 2011 FMV Values",
    x = "FMV",   y = "n", color = "Legend") +
  theme_classic()

comm_ind_df |>
      filter(year == 2021)|>
  ggplot() +
  geom_freqpoly(aes(fmv_growth_2011_w, color = "FMV Growth since 2011")) +
  labs(
    title = "Distribution of Growth Rates since 2011 (2021 Data)",
    x = "Growth since 2011",   y = "n",
    color = "Legend") +
  theme_classic()

comm_ind_df |>
      filter(year == 2022)|>
  ggplot() +
  geom_point(aes(x = base_year_fmv_2011_w, y = fmv_growth_2011_w, alpha = 0.3, color = land_use)) +
    labs(
    title = "Relationship between 2011 FMV Values and Growth Rates (2022 Data)",
    x = "2011 FMV",    y = "FMV Growth",
    color = "Land Use") +
  theme_classic()


comm_ind_df |>
  filter(year == 2021)|>
  filter(land_use %in% c("Industrial", "Commercial")) |>
  ggplot() +
  geom_point(aes(x = base_year_fmv_2011_w, y = fmv_growth_2011_w, color = land_use, alpha = 0.3)) +
    labs(
    title = "Relationship between 2011 FMV Values and Growth Rates (2022 Data)",
    x = "2011 FMV",
    y = "FMV Growth",
    color = "Land Use") +
  theme_classic()

```
