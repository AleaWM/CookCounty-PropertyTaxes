---
title: "Models for Circulation - Updated after Circulation"
author: "MVH & AWM"
date: 8/17/24
date-modified: last-modified
date-format: long
format: 
  html:
    code-fold: true
    toc: true
    toc-location: left
    tbl-cap-location: top
    fig-cap-location: top
    df-print: paged
---

```{r setup}
#| output: false

options(scipen = 999, digits = 4) #no scientific notation

# Load packages

library(tidyverse)
library(glue)
library(fixest)
library(modelsummary)
library(tinytable)
library(sandwich)
library(tinytex)

comm_ind <- read_csv("./Output/comm_ind_PINs_2011-2022_balanced.csv") 

# has binary variable for if it was a reassessment year or not. 
# Manually created based on the 3 year rotation used for reassessments.
reassessment_years <- read_csv("./Necessary_Files/Triad_reassessment_years.csv")


reassessments_long <- reassessment_years %>% 
  pivot_longer(cols = c(`2006`:`2022`), names_to = "year", values_to = "reassessed_year")
```


```{r}
comm_ind <- comm_ind |>

  ## set variable types 
  mutate(across(c(class, improvement_ind, has_AB_exemp, fmv_NA_indicator, in_tif), as.character))

comm_ind <- comm_ind |>
  mutate(year = as.character(year)) |> 
    left_join(reassessments_long, by = c("year", "Triad")) |>

  # Change to factors; set reference levels in next steps
  mutate(land_use = ifelse(!land_use %in% c("Commercial", "Industrial", "Land"), "Other Land Use", land_use),
         
    incent_change = as.factor(incent_change),
         landuse_change = as.factor(landuse_change),
         triad = as.factor(Triad),
         in_tif = as.factor(in_tif),
         land_use = as.factor(land_use),
         incent_prop = as.factor(incent_prop),
         clean_name = as.factor(clean_name),
         fmv_growth_2011 = round(fmv_growth_2011, digits = 4) ) |>
  
  # set reference levels
  mutate(incent_change = relevel(incent_change, ref = "Never Incentive"),
         landuse_change = relevel(landuse_change, ref = "Always Commercial"),
         incent_prop = relevel(incent_prop, ref = "Non-Incentive"),
         triad = relevel(triad, ref = "City"),
         land_use = relevel(land_use, ref = "Commercial")
         ) |>
  # Create binary variables
  mutate(incent_change_bin = as.factor(ifelse(incent_change == 
                                                "Changes Sometime", 1, 0)),
         prop_use_change_bin = as.factor(ifelse(landuse_change == 
                                                  "Changes Land Use", 1, 0))         ) |>
  # percent change from previous years 
  group_by(pin) |> 
  arrange(year)|> 
  mutate(fmv_pct_change = (fmv - lag(fmv))/ lag(fmv),
         av_clerk_pct_change = (av_clerk - lag(av_clerk)) / lag(av_clerk),
         av_mailed_pct_change = (av_mailed - lag(av_mailed)) / lag(av_mailed),
         class_lag = lag(class),
         improvement_lag = lag(improvement_ind),
         reassess_lag = lag(reassessed_year)) |>
  ungroup() |>
  group_by(year) |>
         base_year_fmv_2011_w = DescTools::Winsorize(base_year_fmv_2011, quantile(base_year_fmv_2011, probs = c(0.02,0.98), na.rm=TRUE), 
         fmv_growth_2011_w = DescTools::Winsorize(fmv_growth_2011, quantile(fmv_growth_2011, probs = c(0.02,0.98), na.rm=TRUE))
         )|>
  ungroup() |>
  rename(fmv_2011 = base_year_fmv_2011) |>
  arrange(pin, year) 

# # 1,190,580 obs. (MVH 8/2) 
# comm_ind_temp <- comm_ind  |>
#   # 1121436 obs. (lose 69,144) (MVH 8/2)
#   filter(!is.na(fmv_2011)) |>
#   # 1121436 obs. (MVH 8/2)
#   filter(!is.na(fmv)) |>
#   # 1,121,436 obs. (lose no obs) (MVH 8/2)
#   filter(!is.na(fmv_growth_2011))

# Create panel data

comm_ind <- comm_ind |> 
  group_by(pin) |>  
  arrange(year)|>
  mutate(first_incent_year = ifelse(incent_prop != lag(incent_prop), year, NA),
         next_reassessment = ifelse(!is.na(first_incent_year) & reassessed_year == 1, "Same Year",
                                    ifelse(!is.na(first_incent_year) & reassessed_year == 0, "Next Assessment", NA))
  )
```


```{r}
table(comm_ind$first_incent_year)
table(comm_ind$next_reassessment)
table( comm_ind$year, comm_ind$next_reassessment)
```


```{r}
#comm_ind_temp <- comm_ind_temp |> 
comm_ind_temp <- comm_ind |> 

  select(pin, class, year, clean_name, fmv, fmv_growth_2011, fmv_2011, incent_prop, 
         land_use, major_class_code, landuse_change, incent_change, triad, 
         incent_change_bin, prop_use_change_bin, reassess_lag, reassessed_year,
         fmv_growth_2011_w, base_year_fmv_2011_w,
         in_tif) |>
  # mutate(fmv_growth_2011_w = DescTools::Winsorize(fmv_growth_2011, quantile(fmv_growth_2011, probs = c(0.02,0.98), na.rm=TRUE)), 
  #        fmv_w = DescTools::Winsorize(fmv, val = c(100, max(fmv), na.rm=TRUE))) |>
 # filter(fmv_2011 > 100) |>
 # filter(fmv_growth_2011 < 1000) |>
   mutate(year = as.factor(year))

comm_ind_raw <- comm_ind_temp

# comm_ind_panel_pin <- pdata.frame(comm_ind_temp, index = c("pin", "year"))
# 
# is.pbalanced(comm_ind_panel_pin)
# 
# comm_ind_panel_muni <- pdata.frame(comm_ind_temp, index = c("clean_name", "year"))
# 
# is.pbalanced(comm_ind_panel_muni)

```

**How many properties LOSE their incentives?**

```{r}
lose_incent_pins <-comm_ind_raw |> 
  filter(incent_prop == "Incentive" & lead(incent_prop) == "Non-Incentive") %>% 
  select(pin, year) 

gains_incent_pins <-comm_ind_raw |> 
  filter(incent_prop == "Incentive" & lag(incent_prop) == "Non-Incentive") %>% 
  select(pin, year)

comm_ind_raw |> 
  filter(pin %in% lose_incent_pins$pin) %>% arrange(pin)

comm_ind_raw <- comm_ind_raw %>% 
  mutate(gain_lose_incent = ifelse(pin %in% lose_incent_pins$pin, "Loses Incentive", 
                                   ifelse(pin %in% gains_incent_pins$pin, "Gains Incentive", "Non-Incentive")))

table(comm_ind_raw$gain_lose_incent)
```


**Figure out how to code something that would represent this situation and allow us to model it:** 

The treatment is having the class of property go from a non-incentive class to an incentive class. Need to consider if it is a reassessment year or not. If it is not a reassessment year, then the class change should result in a change in AV that comes purely from the change in the level of assessment (25% to 10%).  If it is a reassessment year, then the change in value is due to the change in level of assessment and the change in the FMV of the property due to local property trends.  

- We still have the mailed_av that is then appealed by the incentive property which should only reflect the change in market trends since CCAO is removed from the incentive process and the board of appeals is the one that changes the property class. The mailed_av and the clerk_av should still have the same proportion of change in the the AV from the level of assessment (25% to 10%).   

- After a property gets its class changed to an incentive class, how does its fair market value change in the **next assessment cycle** compared to properties that did not get an incentive class?  

- some kind of difference-in-differences design   



# DV for all regressions: FMV growth since 2011

# OLS - Multi-year with Muni and Year Controls

```{r ols_models}

ols_models <- list(
  
  "Year Controls" = lm(fmv_growth_2011 ~ incent_change_bin*prop_use_change_bin + year,
                data = comm_ind_raw),
  
  "Year and Muni Controls" = lm(fmv_growth_2011 ~ incent_change_bin*prop_use_change_bin
             + clean_name + year,
                data = comm_ind_raw)
)


modelsummary(ols_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'clean_name',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE") #|>  theme_tt("grid")

```

```{r}

ols_models <- list(
    "Year Controls" = lm(fmv_growth_2011 ~ incent_prop*land_use + year + triad*reassessed_year,
                data = comm_ind_raw),
  
  "Year and Muni Controls" = lm(fmv_growth_2011 ~ incent_prop*land_use
             + clean_name + year,
                data = comm_ind_raw))


modelsummary(ols_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'clean_name|year',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE") #|>  theme_tt("grid")

```


```{r} 

ols_models <- list(
    "Year Controls" = lm(fmv_growth_2011 ~  reassessed_year*gain_lose_incent + year,
                data = comm_ind_raw),
  
  "Year and Muni Controls" = lm(fmv_growth_2011 ~ gain_lose_incent*reassessed_year +
             + clean_name + year,
                data = comm_ind_raw))


modelsummary(ols_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'clean_name|year',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE") #|>  theme_tt("grid")

```


# Fixed Effect Models

## Model Notes

**StandardErrors **   
"For clustering with fixed effects to be necessary (and a good idea), several conditions need to hold. First, there needs to be treatment effect heterogeneity. That is, the treatment effect must be quite different for different individuals.

If that is true, there’s a second condition. Either the fixed effect groups/individuals in your data need to be a non-random sampling of the population,2929 That is, some groups are more likely to be included in your sample than others. or, within fixed effect groups/individuals, your treatment variable is assigned in a clustered way.3030 For example, with city fixed effects, are certain individuals in that city more likely to be treated than others?

So before clustering, think about whether both conditions are likely to be true. If it is, go ahead and cluster! If not, don’t bother, as the clustering will make your standard errors larger than they’re supposed to be." - [The Effect](https://theeffectbook.net/ch-FixedEffects.html) 

**Misc. Defintions**   
- Conditional Average Treatment Effect. The average treatment effect among those with certain values of certain variables (for example, the average treatment effect among women).   
- Average Treatment on the Treated. The average treatment effect among those who actually received the treatment in your study.   


## PIN-level fixed effects - shouldn't be used! 

```{r pin_fe, eval=FALSE}

pin_fe_models <- list(
  
      "1" = feols(fmv_growth_2011 ~ land_use 
                  | pin + year, vcov = "twoway",
                       data = comm_ind_raw # |>filter(land_use != "Rental")
                       ),
      
      "2" = feols(fmv_growth_2011 ~ incent_prop + land_use 
                  | pin + year, vcov = "twoway",
                       data = comm_ind_raw #|>  filter(land_use != "Rental")
                       ),


      "3" = feols(fmv_growth_2011 ~ incent_prop*land_use  
                  | pin + year, vcov = "twoway",
                       data = comm_ind_raw # |>  filter(land_use != "Rental")
                       )
                )

modelsummary(pin_fe_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'pin|year',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE")

```


## Muni-Level Fixed Effects

```{r muni_fe}
#| warning: false

muni_fe_models <- list(
  
      "1" = feols(fmv_growth_2011 ~ land_use | clean_name + year,
                   vcov = "twoway",
                       data = comm_ind_raw # |>  filter(land_use != "Rental")
                       ),
      
      "2" = feols(fmv_growth_2011 ~ incent_prop + land_use | clean_name + year,
                                     vcov = "twoway",
                       data = comm_ind_raw #|>  filter(land_use != "Rental")
                       ),


      "3" = feols(fmv_growth_2011 ~ incent_prop*land_use | clean_name + year,
                       data = comm_ind_raw #|> filter(land_use != "Rental")
                       ),
          "4" = feols(fmv_growth_2011 ~  incent_prop*land_use + in_tif | clean_name + year,
                       data = comm_ind_raw #|> filter(land_use != "Rental")
                      )
                        )

modelsummary(muni_fe_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'pin|year|clean_name',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE")# |>theme_tt("grid")

```

```{r winsorize-muni_fe}
#| warning: false

muni_fe_models <- list(
  
      "1" = feols(fmv_growth_2011_w ~ land_use | clean_name + year,
                   vcov = "twoway",
                       data = comm_ind_raw # |>  filter(land_use != "Rental")
                       ),
      
      "2" = feols(fmv_growth_2011_w ~ incent_prop + land_use | clean_name + year,
                                     vcov = "twoway",
                       data = comm_ind_raw #|>  filter(land_use != "Rental")
                       ),


      "3" = feols(fmv_growth_2011_w ~ incent_prop*land_use | clean_name + year,
                       data = comm_ind_raw #|> filter(land_use != "Rental")
                       ),
          "4" = feols(fmv_growth_2011_w ~  incent_prop*land_use + in_tif | clean_name + year,
                       data = comm_ind_raw #|> filter(land_use != "Rental")
                      )
                        )

modelsummary(muni_fe_models,
             stars = TRUE,
             fmt = function(x) round(x, 2),
             coef_omit= 'pin|year|clean_name',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE")# |>theme_tt("grid")

```

## Variations of Property Type and Change Variables

```{r muni_prop_incent_var_types}
#| warning: false

muni_fe_new_vars_mods <- list(
  
     "1" = feols(fmv_growth_2011 ~ incent_change_bin*prop_use_change_bin
                 | clean_name + year,
                       data = comm_ind_raw # |> filter(land_use != "Rental")
                       ),
      
      "2" = feols(fmv_growth_2011 ~ incent_prop*land_use 
                   | clean_name + year,
                     data = comm_ind_raw # |> filter(land_use != "Rental")
                       ),
     
      "3" = feols(fmv_growth_2011 ~ land_use + incent_prop + incent_change_bin*prop_use_change_bin
                 | clean_name + year,
                   data = comm_ind_raw #|> filter(land_use != "Rental")
                       ),
     
      "4" = feols(fmv_growth_2011 ~ incent_change_bin + prop_use_change_bin + land_use*incent_prop
                 | clean_name + year, 
                   data = comm_ind_raw # |> filter(land_use != "Rental")
                       )
)

modelsummary(muni_fe_new_vars_mods,
             stars = TRUE,
             fmt = function(x) round(x, 2),
            # coef_omit= 'pin|year',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE") #|>  theme_tt("grid")


```

# Commercial VS Industrial Models

The industrial subset keeps a property (all years) if they were industrial property at any point in time.

The commercial subset keeps a property (all years) if they were commercial property at any point in time.


```{r industrial_models}


industrial_subset <- comm_ind_raw |> 
  group_by(pin) |>
  filter(any(land_use == "Industrial"))


muni_fe_new_vars_mods <- list(
  
     "1" = feols(fmv_growth_2011 ~ incent_change_bin*prop_use_change_bin
                 | clean_name + year,
                 data = industrial_subset
),
      
      "2" = feols(fmv_growth_2011 ~ incent_prop*land_use 
                   | clean_name + year,
                 data = industrial_subset
                       ),
     
      "3" = feols(fmv_growth_2011 ~ land_use + incent_prop + incent_change_bin*prop_use_change_bin
                 | clean_name + year,
                 data = industrial_subset
                       ),
     
      "4" = feols(fmv_growth_2011 ~ incent_change_bin + prop_use_change_bin + land_use*incent_prop
                 | clean_name + year, 
                 data = industrial_subset
                       )
)

modelsummary(muni_fe_new_vars_mods,
             stars = TRUE,
             fmt = function(x) round(x, 2),
            # coef_omit= 'pin|year',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE") #|>  theme_tt("grid")


```

```{r commercial_models}
commercial_subset <- comm_ind_raw |> 
  group_by(pin) |>
  filter(any(land_use == "Commercial"))



muni_fe_new_vars_mods <- list(
  
     "1" = feols(fmv_growth_2011 ~ incent_change_bin*prop_use_change_bin
                 | clean_name + year,
                 data = commercial_subset
                 ),
      
      "2" = feols(fmv_growth_2011 ~ incent_prop*land_use 
                   | clean_name + year,
                 data = commercial_subset
                       ),
     
      "3" = feols(fmv_growth_2011 ~ land_use + incent_prop + incent_change_bin*prop_use_change_bin
                 | clean_name + year,
                 data = commercial_subset
                       ),
     
      "4" = feols(fmv_growth_2011 ~ incent_change_bin + prop_use_change_bin + land_use*incent_prop
                 | clean_name + year, 
                 data = commercial_subset
                       )
)

modelsummary(muni_fe_new_vars_mods,
             stars = TRUE,
             fmt = function(x) round(x, 2),
            # coef_omit= 'pin|year',
             gof_omit = "AIC|BIC|Log.Lik.|RMSE") #|>  theme_tt("grid")


```


# graphs 

```{r dataexploration}

comm_ind_raw |>
  filter(year==2022)|>
  ggplot(aes(fmv_growth_2011_w)) +
  geom_histogram(bins = 100) +
  theme_classic()

comm_ind_raw |>
  select(fmv_growth_2011_w) |>
  ungroup() |>
  summarize(max = max(fmv_growth_2011_w, na.rm = TRUE), 
            min = min(fmv_growth_2011_w, na.rm=TRUE), 
            mean = mean(fmv_growth_2011_w, na.rm = TRUE),
            median = median(fmv_growth_2011_w, na.rm = TRUE), 
            sd= sd(fmv_growth_2011_w, na.rm=TRUE))


# Look at FMV growth
comm_ind_raw |> ungroup() |>
      filter(year == 2022)|>
  summarize(min_growth = min(fmv_growth_2011_w, na.rm=TRUE), 
            max_growth = max(fmv_growth_2011_w, na.rm=TRUE), 
            mean_growth = mean(fmv_growth_2011_w, na.rm=TRUE), 
            med_growth = median(fmv_growth_2011_w, na.rm=TRUE),
            sd_growth = sd(fmv_growth_2011_w, na.rm=TRUE))


# Look at fmv_2011
comm_ind_raw |> ungroup() |>
    filter(year == 2022)|>
  summarize(min_fmv = min(base_year_fmv_2011_w, na.rm=TRUE), 
            max_fmv = max(base_year_fmv_2011_w, na.rm=TRUE), 
            mean_fmv = mean(base_year_fmv_2011_w, na.rm=TRUE), 
            med_fmv = median(base_year_fmv_2011_w, na.rm=TRUE),
            sd_fmv = sd(base_year_fmv_2011_w, na.rm=TRUE))

comm_ind_raw |>
      filter(year == 2021)|>
  ggplot() +
  #geom_freqpoly(aes(fmv_growth_2011_w, color = "FMV Growth since 2011")) +
  geom_freqpoly(aes(base_year_fmv_2011_w, color = "FMV in 2011")) +
  labs(
    title = "Distribution of 2011 FMV Values",# and Growth Rates (2022 Data)",
    x = "FMV",   y = "n",
    color = "Legend") +
  theme_classic()

comm_ind_raw |>
      filter(year == 2021)|>
  ggplot() +
  geom_freqpoly(aes(fmv_growth_2011_w, color = "FMV Growth since 2011")) +
 # geom_freqpoly(aes(base_year_fmv_2011_w, color = "FMV in 2011")) +
  labs(
    title = "Distribution of Growth Rates since 2011 (2021 Data)",
    x = "Growth since 2011",   y = "n",
    color = "Legend") +
  theme_classic()

comm_ind_raw |>
      filter(year == 2022)|>
  ggplot() +
  geom_point(aes(x = base_year_fmv_2011_w, y = fmv_growth_2011_w, color = land_use)) +
    labs(
    title = "Relationship between 2011 FMV Values and Growth Rates (2022 Data)",
    x = "2011 FMV",    y = "FMV Growth",
    color = "Land Use") +
  theme_classic()


comm_ind_raw |>
  filter(year == 2021)|>
  filter(land_use %in% c("Industrial", "Commercial")) |>
  filter(fmv_growth_2011_w < 250000) |>
  ggplot() +
  geom_point(aes(x = base_year_fmv_2011_w, y = fmv_growth_2011_w, color = land_use)) +
    labs(
    title = "Relationship between 2011 FMV Values and Growth Rates (2022 Data)",
    x = "2011 FMV",
    y = "FMV Growth",
    color = "Land Use") +
  theme_classic()

```
