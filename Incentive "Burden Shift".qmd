---
title: "'Burden Shift' from Incentive Properties in [xx]"
format: docx
editor: visual
---

# Preliminary Setup

```{r setup, warning = FALSE, output = FALSE}

library(tidyverse)
library(ptaxsim)
library(DBI)
library(httr)
library(jsonlite)
library(glue)
library(sf)

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

ptaxsim_db_conn <- DBI::dbConnect(RSQLite::SQLite(), "./ptaxsim.db/ptaxsim-2022.0.0.db")

# link to the API output as a JSON file

muni_shp <- read_sf("https://gis.cookcountyil.gov/traditional/rest/services/politicalBoundary/MapServer/2/query?outFields=*&where=1%3D1&f=geojson")

#muni_shp <- read_json("muni_shp.json")
nicknames <- readxl::read_excel("./Necessary_Files/muni_shortnames.xlsx")

class_dict <- read_csv("./Necessary_Files/class_dict_expanded.csv") %>%
  mutate(class_code = as.character(class_code))

NBHs <- read_sf("https://datacatalog.cookcountyil.gov/resource/pcdw-pxtg.geojson")

chi_townships = c("WEST", "SOUTH", "HYDE PARK", "LAKE", "NORTH", "JEFFERSON", "LAKE VIEW", "ROGER PARK")

chi_townships2 <- c("Jefferson", "Hyde Park", "Lake", "Lake View", "North Chicago", "South Chicago", "West Chicago" )

class8township <- c("Bloom", "Bremen","Calumet","Rich", "Thornton")

```

# Identify Useful Municipality

```{r, echo = F}

source("helper_tc_muninames.R") #MODIFY AND REVERT THE HELPER FILE PTAXSIM FP!!!!!!

incentive_pins <- read_csv("./Output/7_output_incentive_classes.csv")

#residential_pins <- read_csv("./Output/7_output_residential_pins.csv")

incentive_pins <- incentive_pins %>%  left_join(nicknames, by = "agency_name")


incentive_pins %>% 
  reframe(IncentiveProp_PINcount = n(),
          IncentiveProp_MuniAV = sum(av),
          .by=c(clean_name)) %>% 
  rename(
         Municipality = clean_name) %>%
    mutate(Municipality = ifelse(is.na(Municipality), "Unincorporated", Municipality)) %>%
  arrange(desc(IncentiveProp_PINcount))

incentive_pins %>% 
  filter(class > 599 & class < 900) %>% 
  group_by(clean_name, major_class_code) %>%
  summarize(pincount = n()) %>%
  pivot_wider(id_cols = clean_name, 
              names_from = "major_class_code", 
              values_from = "pincount") %>%
  select( Municipality = clean_name,
          "6A", "6B", "6C", "7A", "7B", "8") %>% 
  mutate(Municipality = ifelse(is.na(Municipality), "Unincorporated", Municipality)) %>%
  arrange(Municipality)

```
Quick descriptive statistics.

```{r}

muniMerge <- agency_dt %>%
  filter(year == 2021) %>%
  select(agency_num, year, MuniEAV = cty_cook_eav, r = total_final_rate)

incentive_pins %>%
  group_by(clean_name) %>%
  mutate(IncentiveProp_PINcount = n(),
          IncentiveProp_MuniAV = sum(av),
          AvgIncent = IncentiveProp_MuniAV/IncentiveProp_PINcount) %>%
  select(year, class, av, eav, )

```


Arrange by mean value of incentive.

```{r}

incentive_pins %>% 
  reframe(IncentiveProp_PINcount = n(),
          IncentiveProp_MuniAV = sum(av),
          AvgIncent = IncentiveProp_MuniAV/IncentiveProp_PINcount,
          .by=c(clean_name)) %>% 
  rename(
         Municipality = clean_name) %>%
    mutate(Municipality = ifelse(is.na(Municipality), "Unincorporated", Municipality)) %>%
  arrange(desc(AvgIncent))

incentive_pins %>% 
  reframe(IncentiveProp_PINcount = n(),
          IncentiveProp_MuniAV = sum(av),
          AvgIncent = IncentiveProp_MuniAV/IncentiveProp_PINcount,
          .by=c(clean_name)) %>% 
  rename(
         Municipality = clean_name) %>%
    mutate(Municipality = ifelse(is.na(Municipality), "Unincorporated", Municipality)) %>%
  arrange(desc(AvgIncent))

```

Visualization of above.

```{r, eval = F}

incentive_pins %>% 
  reframe(IncentiveProp_PINcount = n(),
          IncentiveProp_MuniAV = sum(av),
          AvgIncent = IncentiveProp_MuniAV/IncentiveProp_PINcount,
          .by=c(clean_name)) %>% 
  rename(
         Municipality = clean_name) %>%
    mutate(Municipality = ifelse(is.na(Municipality), "Unincorporated", Municipality)) %>%
  arrange(desc(AvgIncent)) %>%
  filter(IncentiveProp_PINcount > 0,
         Municipality != "Chicago") %>%
  ggplot(aes(x = IncentiveProp_PINcount, y = IncentiveProp_MuniAV)) +
  geom_point(aes(size = AvgIncent), alpha = .7, l , color = "orchid2")


```

```{r, echo = F}

incentive_pins %>% 
  filter(class > 599 & class < 900) %>% 
  group_by(clean_name, township_name, major_class_code) %>%
  summarize(pincount = n()) %>%
  pivot_wider(id_cols = c(clean_name, township_name), 
              names_from = "major_class_code", 
              values_from = "pincount")  %>% select( Municipality = clean_name, Township = township_name,
          "6A", "6B", "6C", "7A", "7B", "8") %>% 
  mutate(Municipality = ifelse(is.na(Municipality), "Unincorporated", Municipality)) %>%
  arrange(Municipality)
```

```{r}

pin_data <- read_csv("./Output/4C_joined_PINs_bills_and_exemptions.csv")

```

```{r}

muni_taxrates <- pin_data %>% 
  left_join(nicknames, by = "agency_name") %>%
  group_by(clean_name) %>%
  summarize(
    muni_av = sum(av, na.rm = TRUE),
    muni_eav = sum(eav, na.rm = TRUE),
    muni_equalized_AV = sum(equalized_AV, na.rm = TRUE),
    pins_in_muni = n(),
    muni_current_exemptions = sum(all_exemptions, na.rm = TRUE),
    muni_HO_exemps = sum(exe_homeowner, na.rm = TRUE),
    muni_comp_rate = mean(tax_code_rate, na.rm = TRUE),
    final_tax_to_dist = sum(final_tax_to_dist, na.rm = TRUE),
    final_tax_to_tif = sum(final_tax_to_tif, na.rm = TRUE),
    tax_amt_exe = sum(tax_amt_exe, na.rm = TRUE), 
    tax_amt_pre_exe = sum(tax_amt_pre_exe, na.rm = TRUE), 
    tax_amt_post_exe = sum(tax_amt_post_exe, na.rm = TRUE),
    rpm_tif_to_cps = sum(rpm_tif_to_cps, na.rm = TRUE),
    rpm_tif_to_rpm = sum(rpm_tif_to_rpm, na.rm=TRUE),
    rpm_tif_to_dist = sum(rpm_tif_to_dist, na.rm=TRUE),
    tif_share = mean(tif_share, na.rm=TRUE),
  ) %>%
  
  rename(cur_comp_TC_rate = muni_comp_rate) %>%
  
  mutate(current_muni_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100),
         new_muni_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100) + muni_HO_exemps) %>%
  
  mutate(new_comp_TC_rate = (final_tax_to_dist / new_muni_taxable_eav)*100) %>%
  
  mutate(new_comp_TC_rate = ifelse(is.nan(new_comp_TC_rate), cur_comp_TC_rate, new_comp_TC_rate)) %>%
  
  select(clean_name, cur_comp_TC_rate, new_comp_TC_rate, current_muni_taxable_eav, new_muni_taxable_eav, everything())

muni_taxrates 
```

```{r}
#| column: page

prop_class_sums <- pin_data %>% 
    
  left_join(nicknames, by = "agency_name") %>%

  group_by(clean_name, major_class_code, major_class_type )  %>%
  
  summarize(
    av = sum(av, na.rm = TRUE),
    eav = sum(eav, na.rm = TRUE),
    equalized_AV = sum(equalized_AV, na.rm = TRUE),
    pins_in_class = n(),
    current_exemptions = sum(all_exemptions, na.rm = TRUE),
    HO_exemps = sum(exe_homeowner, na.rm = TRUE),
    tax_code_rate = mean(tax_code_rate, na.rm = TRUE),
    final_tax_to_dist = sum(final_tax_to_dist, na.rm = TRUE),
    final_tax_to_tif = sum(final_tax_to_tif, na.rm = TRUE),
    tax_amt_exe = sum(tax_amt_exe, na.rm = TRUE), 
    tax_amt_pre_exe = sum(tax_amt_pre_exe, na.rm = TRUE), 
    tax_amt_post_exe = sum(tax_amt_post_exe, na.rm = TRUE),
    rpm_tif_to_cps = sum(rpm_tif_to_cps, na.rm = TRUE),
    rpm_tif_to_rpm = sum(rpm_tif_to_rpm, na.rm=TRUE),
    rpm_tif_to_dist = sum(rpm_tif_to_dist, na.rm=TRUE),
    tif_share = mean(tif_share, na.rm=TRUE),
  ) %>%
  
  mutate(total_bill_current = final_tax_to_dist + final_tax_to_tif) %>%
  
  rename(cur_comp_TC_rate = tax_code_rate) %>%
  
  mutate(current_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100),
         new_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100) + HO_exemps) %>%
  
  mutate(new_comp_TC_rate = (final_tax_to_dist / new_taxable_eav)*100) %>%
  
  mutate(new_comp_TC_rate = ifelse(is.nan(new_comp_TC_rate), cur_comp_TC_rate, new_comp_TC_rate)) %>%
  
  select(clean_name, major_class_code, HO_exemps, current_exemptions, pins_in_class, current_taxable_eav, new_taxable_eav,  everything())

prop_class_sums 

prop_class_sums2 <- prop_class_sums %>%
  group_by(clean_name) %>%
  mutate(muni_PC = sum(pins_in_class, na.rm=TRUE),
         muni_taxable_eav = sum(current_taxable_eav, na.rm = TRUE),
         muni_equalized_av = sum(equalized_AV, na.rm=TRUE),
         muni_av = sum(av, na.rm=TRUE),
         pct_pins = pins_in_class / muni_PC,
         pct_taxable_eav = current_taxable_eav / muni_taxable_eav,
         pct_eq_eav = equalized_AV / muni_equalized_av,
         pct_av = av / muni_av,
         year = "2021"
  ) %>% 
  
  mutate_at(vars(pct_pins, pct_taxable_eav, pct_eq_eav, pct_av), funs(round(.,3)))

prop_class_sums2  

```
