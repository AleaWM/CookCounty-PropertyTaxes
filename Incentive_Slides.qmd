---
title: "Supporting Materials for Incentives Presentation"
format: 
  html:
    code-fold: true
    toc: true
    toc-location: left
    tbl-cap-location: margin
    fig-cap-location: top
---

# Data Preparation

```{r setup, warning = FALSE, output = FALSE}

library(tidyverse)
library(DT)
library(flextable) # for exporting to word or PDF files. Kable does not do that

library(sf)

library(ggpattern)



muni_shp <- read_sf("https://gis.cookcountyil.gov/traditional/rest/services/politicalBoundary/MapServer/2/query?outFields=*&where=1%3D1&f=geojson")


knitr::opts_chunk$set(warning = FALSE, message = FALSE)

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       line_spacing = 1,
                       big.mark = ",",
                       )
# keypins <- read_csv("Output/all_keypins.csv")

options(DT.options = list())
```

```{r}
#| echo: true
#| code-fold: false

# file created in helper_pull_incentivepins_allyears.R
# ptax_pins <- read_csv("./Output/incentivePINs_allyears.csv") 

# all pins for 2022
ptax_pins <- read_csv("Output/Dont_Upload/0_joined_PIN_data_2022.csv") %>% 
  mutate(class = as.numeric(class)) %>%
         # keep 500-899 class PINs
  filter((class >= 500 & class < 900) |   
           # and keep land PINs if we want land property owned by them too.
         (class >= 100 & class < 200)  
         )  %>%
  select(-c(propclass_1dig:av.y))

```

```{r}
#| echo: true
#| code-fold: false


# temporary work-around until we have full keypin list:
proj_xwalk <- read_csv("Output/all_keypins.csv")               
# all commercial valuation properties but made with very unreliable data from commercial valuation dataset. 

# combine project IDs to PINs:
ptax_pins <- ptax_pins %>% left_join(proj_xwalk)



#  create tc_muninames from helper file:
source("scripts/helper_tc_muninames_2022.R")
tc_muninames <- tc_muninames %>%  select(-year)

# add muni names by joining tax code info:
ptax_pins <- ptax_pins %>% 
  mutate(tax_code_num = as.character(tax_code_num)) %>%
  left_join(tc_muninames)



# original class_dict variables already in 0_joined data
# but I do want the new-ish variables I created to be brought in:
class_dict <- read_csv("./Necessary_Files/class_dict_expanded.csv") %>%
  select(class_code, comparable_props, Alea_cat, incent_prop)

ptax_pins <- ptax_pins %>% 
  left_join(class_dict, by =  c("class" = "class_code")) %>%
  mutate(clean_name = ifelse(is.na(clean_name), "0_Unincorporated", clean_name))


```




## Slides 1-2

34 Municipalities do not use Incentive Classifications. 

15 cross into other counties. All 15 that cross county lines do use incentive classifications. 

Alsip, Bedford Park, Blue Island,Bridgeview, Riverdale, South Holland, Summit, and Worth also use "Abatements" (based on the exe_abate variable in PTAXSIM)

```{r}
#| label: tbl-countycrossers
#| column: margin


cross_county_lines <- c("030440000", "030585000", "030890000", "030320000", "031280000","030080000", "030560000", "031120000", "030280000", "030340000","030150000","030050000", "030180000","030500000","031210000")

cross_county_lines <- tc_muninames %>% filter(agency_num %in% cross_county_lines) %>% select(clean_name, agency_num) %>% distinct() %>% arrange(clean_name)

cross_county_lines <- cross_county_lines %>% left_join(muni_shp, by = c("clean_name" = "MUNICIPALITY"))


no_incentives <-  ptax_pins %>% 
 # filter(between(class, 600, 899)) %>%
  group_by(clean_name) %>% 
  summarize(incent_pins = sum(ifelse(between(class, 600, 899), 1, 0))) %>%
  filter(incent_pins == 0) %>% 
  distinct(clean_name)

no_incentives <- no_incentives %>% left_join(muni_shp, by = c("clean_name" = "MUNICIPALITY"))
```


```{r}
#| label: tbl-cooktotals
#| tbl-cap: "Cook County: Commercial and Industrial Fair Market Value with Incentive Classification. There is over $600 billion FMV in Cook County when including all property types. Of the $600 billion FMV in Cook County, $113 billion is from commercial and industrial property, of which $13 billion FMV has an incentive classification."

nonres_pins2022 <- ptax_pins


table <- nonres_pins2022 %>% 
  group_by(Alea_cat) %>%
  summarize(proptype_pincount = n(),
            projects = n_distinct(keypin),
            av_incent = sum(ifelse(incent_prop == "Incentive", av, 0)),
            av_nonincent = sum(ifelse(incent_prop == "Non-Incentive", av, 0)),
            av=sum(av)
          ) %>% 
  mutate(
         incent_av_adj = 2.5*av_incent) %>%
  mutate(
         total_av_adjusted = av_incent*2.5 + av_nonincent,
         pct_incent = incent_av_adj / total_av_adjusted) %>%
    select(-c(av_incent, av_nonincent, incent_av_adj))


flextable(table) %>% 
 # set_caption("Totals for Cook County") %>% 
  set_header_labels(Alea_cat = "Property Type", proptype_pincount = 'PINs', projects = "Project IDs", av = ' Taxable AV') %>%
  set_table_properties( layout = "autofit", width = .75)
```

```{r}
#| label: tbl-amount-incentivized
#| tbl-cap: "Percent of Commercial and Industrial \"Market Value for Assessment Purposes\" that has a reduced assessment rate due to incentive classification"


table2 <- nonres_pins2022 %>% 
  filter(Alea_cat != "Land") %>%
  group_by(clean_name) %>% 
  summarize(pin_count = n(),
            project_count = n_distinct(keypin), 
            av_incent = sum(ifelse(between(class, 600, 899), av*2.5, 0)),
            av_adjusted = sum(ifelse(between(class, 600, 899), av*2.5, av)),
            av=sum(av)) %>%
  mutate(av_incent = ifelse(av_incent == 0, NA, av_incent),
    pct_incent = av_incent / av_adjusted,
    pct_incent = ifelse(pct_incent == 0, NA, pct_incent))  %>%
  select(-av_incent) %>% 
  select(clean_name, pct_incent, av, av_adjusted, pin_count, project_count)

datatable(table2,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name', #  'Incentivized?' = 'incent_prop', 
                       'PIN Count' = 'pin_count', 'Project Count' = 'project_count', 
                       'Taxable AV' = 'av',
                       'Assessed Market Value' = 'av_adjusted', 
                       'Pct FMV Incentivized' = 'pct_incent')
          ) %>%
  formatCurrency(c('Taxable AV', 'Assessed Market Value'), digits = 0) %>%
  formatPercentage('Pct FMV Incentivized', digits = 2)
```

```{r}
#| label: fig-pctincentivevalue-bothtypes
#| fig-cap: "Percent of Commercial and Industrial Fair Market Value (FMV) that has Incentive Classification" 



table2 %>% 
  left_join(nicknames) %>%
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) %>%
  
  ggplot() +
  geom_sf(aes(geometry = geometry, fill = pct_incent), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    high = "#420420", low = "black",
    # midpoint = median(transfered_taxes),
    show.limits=TRUE,
    breaks = c(0, .10, .20, .50, .70),
    nice.breaks=FALSE,
    #n =4,
    na.value = "gray",
    name = "Pct of Market Value that \nhas Incentive Classification",
    labels = scales::percent
) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, fill = "white", alpha = .5, color = 'gray70')


map



```

```{r}
#| label: fig-industrial-commercial-fmv
#| layout-ncol: 2
#| column: page
#| fig-cap: 
#|      - "Pct of Industrial FMV that \nhas Incentive Classification"
#|      - "Pct of Commercial FMV that \nhas Incentive Classification"
#|      

nonres_pins2022 %>% 
  filter(Alea_cat == "Industrial") %>%
  group_by(clean_name) %>% 
  summarize(pin_count = n(),
            project_count = n_distinct(keypin), 
            av_incent = sum(ifelse(between(class, 600, 899), av*2.5, 0)),
            av_adjusted = sum(ifelse(between(class, 600, 899), av*2.5, av)),
            av=sum(av)) %>%
  mutate(av_incent = ifelse(av_incent == 0, NA, av_incent),
         pct_incent = av_incent / av_adjusted)  %>%
  select(-av_incent) %>% 
  select(clean_name, pct_incent, av, av_adjusted, pin_count, project_count) %>%
  left_join(nicknames) %>%
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) %>%
  
  ggplot(aes(fill = pct_incent)) +
  geom_sf(aes(geometry = geometry), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    high = "brown", low = "black",
    # midpoint = median(transfered_taxes),
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value="gray",
    n =4,
    name = "Pct of Industrial FMV that \nhas Incentive Classification",
    labels = scales::percent
) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, fill = "white", alpha = .5, color = 'gray40')

nonres_pins2022 %>% 
  filter(Alea_cat == "Commercial") %>%
  group_by(clean_name) %>% 
  summarize(pin_count = n(),
            project_count = n_distinct(keypin), 
            av_incent = sum(ifelse(between(class, 600, 899), av*2.5, 0)),
            av_adjusted = sum(ifelse(between(class, 600, 899), av*2.5, av)),
            av=sum(av)) %>%
  mutate(av_incent = ifelse(av_incent == 0, NA, av_incent), 
                            pct_incent = av_incent / av_adjusted)  %>%
  select(-av_incent) %>% 
  select(clean_name, pct_incent, av, av_adjusted, pin_count, project_count) %>%
  left_join(nicknames) %>%
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) %>%
  
  ggplot(aes(fill = pct_incent)) +
  geom_sf(aes(geometry = geometry), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    high = "orange", low = "black",
     midpoint = 0.04,
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value="gray",
   # n =4,
    name = "Pct of Commercial FMV that \nhas Incentive Classification",
    labels = scales::percent
) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, fill = "white", alpha = .5, color = 'gray40')
```


## Sankey Graph

```{r eval=FALSE}
ptax_pins <- read_csv("Output/Dont_Upload/0_joined_PIN_data_2022.csv")
```


## Slides 7 & 8

```{r}
#| label: tbl-incentiveproject-cooktotals
#| tbl-cap: "Commercial and Industrial Incentive Projects & PINs in Cook County. Includes property classes 500-899 and 100 level land PINs if they are associated with a project id that has at least one incentive PIN."

incentive_pins2022 <- ptax_pins %>% 
  group_by(keypin) %>%
  arrange(keypin, class) %>%
  mutate(min_class = first(class),
         max_class = last(class)) %>% 
  filter(max_class > 599) %>%
  ungroup()

table <- incentive_pins2022 %>% 
  group_by(Alea_cat) %>%
  summarize(proptype_pincount = n(),
            projects = n_distinct(keypin),
            av_incent = sum(if_else(incent_prop == "Incentive", av, 0)),
            av_nonincent = sum(ifelse(incent_prop == "Non-Incentive", av, 0)),
       #     av_adjusted=sum(ifelse(between(class, 600, 899), av*2.5, av)),
            av=sum(av)) %>%
  mutate(
         incent_av_adj = 2.5*av_incent ) %>%
  #mutate(
        # total_av_adjusted = incent_av_adj + av_nonincent,
       #  pct_incent = incent_av_adj / total_av_adjusted) %>%
  select(-c(av_incent, av_nonincent))

  

flextable(table) %>% 
 # set_caption("Totals for Cook County") %>% 
  set_header_labels(Alea_cat = "Property Type", proptype_pincount = 'PINs', projects = "Project IDs", av = ' Current Taxable AV') %>%
  set_table_properties( layout = "autofit", width = .75)

```

```{r}
#| label: tbl-projectsinMunis
#| tbl-cap: "Grouped by Property Type within Municipality. Adjusted AV is calculated from 2.5*AV from incentive class properties + the AV of non-incentive class properties. "


table1 <- nonres_pins2022 %>% 
  filter(Alea_cat != "Land") %>%
  group_by(clean_name, Alea_cat) %>% 
  summarize(pin_count = n(),
         project_count = n_distinct(keypin), 
                     av_adjusted=sum(ifelse(between(class, 600, 899), av*2.5, av)),

         av = sum(av))

datatable(table1,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name',   'Property Type' = 'Alea_cat', 'PIN Count' = 'pin_count', 'Project Count' = 'project_count', 'Current Taxable AV' = 'av'),
          #extensions = 'RowGroup',
         # options = list(rowGroup = list(dataSrc = 0))
          ) %>%
  formatCurrency(c('Current Taxable AV', 'av_adjusted'), digits = 0)
```

```{r}
#| label: tbl-incentivizedornot
#| tbl-cap: "Grouped by Incentivized or not within Municipality"

table2 <- nonres_pins2022 %>% 
    filter(Alea_cat != "Land") %>%
  group_by(clean_name, incent_prop) %>%   # projects can be counted twice if the project has incentive and normal commercial/industrial prop classes.
  summarize(pin_count = n(),
         project_count = n_distinct(keypin), 
         av_adjusted=sum(ifelse(between(class, 600, 899), av*2.5, av)),
         av=sum(av)) 

datatable(table2,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name',   'Incentivized?' = 'incent_prop', 'PIN Count' = 'pin_count', 'Project Count' = 'project_count', 'Taxable AV' = 'av')) %>%
  formatCurrency(c('Taxable AV', 'av_adjusted'), digits = 0)
```

```{r, include = FALSE}


####  over 10,000 rows. Shows all keypins and count of pins  ###
#### for all commercial properties                           ###
# nonres_pins2022 %>% 
#   mutate(has_incentive = ifelse(class >= 600, 1, 0)) %>%
#   group_ by(keypin) %>%
#   summarize(count = n(),     # number of pins in project
#          sum = sum(has_incentive), # number of pins that had incentives
#          av = sum(av)) %>%
#   mutate(pct_pins_w_inct = sum/count ) %>%  # pct of pins that had incentive property class
#   arrange(desc(keypin))
```

## Slides: Impact on Composite Tax Rate

```{r}
#| code-fold: true

nicknames <- readxl::read_excel("./Necessary_Files/muni_shortnames.xlsx") 


class_dict <- read_csv("./Necessary_Files/class_dict_expanded.csv") %>% select(class_code, assess_ratio, class_desc, Alea_cat, everything()) 


MuniLevel <- read_csv("./Output/ptaxsim_muni_level_2006-2022.csv") %>%
  filter(year == 2022) %>%
  left_join(nicknames) %>% 
  select(clean_name, cur_comp_muni_rate) %>%
  rename(cur_munilevel_rate = cur_comp_muni_rate)


# MC_sums <- read_csv("./Output/ptaxsim_muni_MC_2006-2022.csv") %>% 
#   filter(year == 2022) %>% 
#   left_join(nicknames) 
# 
# tc_class <- read_csv("./Output/ptaxsim_TC_Class_summaries_2006-2022.csv") %>% 
#   filter(year == 2022)

muni_class_sums <- read_csv("./Output/ptaxsim_muni_class_summaries_2006-2022.csv")

eqfact22 <- 2.9237 # 2022 CC equalization factor
eqfact21 <- 3.0027 # 2021 CC Equalization Factor
```

```{r startfromclasslevelsummaries}
muni_class2022 <- read_csv("./Output/ptaxsim_muni_class_summaries_2006-2022.csv") %>% 
  filter(year == 2022) %>% 
  left_join(class_dict, by = c("class" = "class_code"))

muni_class_AleaCats <- muni_class2022 %>%
  left_join(MuniLevel) %>%
  group_by(clean_name, incent_prop, Alea_cat, cur_munilevel_rate) %>%
  summarize(av = sum(av),
            eav = sum(eav), # equalized AV 
            fmv = sum(av / assess_ratio),
            final_tax_to_dist = sum(final_tax_to_dist), # revenue collected by taxing districts
            final_tax_to_tif = sum(final_tax_to_tif),   # revenue collected from TIF increment
            current_taxable_eav = sum(current_taxable_eav),
            pins_in_muni = n(),
            all_exemptions = sum(all_exemptions),
            abatements = sum(exe_abate),
  ) %>%
  mutate(
    # approximation for if assessments went from 10% to 25%, similar to other commercial and industrial property in Cook County
    new_av = ifelse(incent_prop == "Incentive", av*2.5, av), 
    
    new_TEAV_noIncents = ifelse(incent_prop ==  "Incentive", current_taxable_eav * 2.5 , current_taxable_eav),
    
    new_TEAV_noExemps = current_taxable_eav + all_exemptions, # does not include abatements
    
    # amount of EAV from taxing an additiona 15% of the AV if incentive properties didn't exist
    forgone_EAV_incent = ifelse(incent_prop == "Incentive", new_TEAV_noIncents - (current_taxable_eav + all_exemptions), 0),
    
    forgone_TIF_EAV = final_tax_to_tif / cur_munilevel_rate  )     


alt_rates <- muni_class_AleaCats %>% 
  group_by(clean_name, cur_munilevel_rate) %>% 
  mutate(munilevy = sum(final_tax_to_dist),
         muni_exemptions = sum(all_exemptions), # all exe_ variables except exe_abate
         muni_abatements = sum(abatements),
         muni_forgoneTIF = sum(forgone_TIF_EAV),
         muni_forgone_EAV_incent = sum(forgone_EAV_incent),

         muni_current_TEAV = sum(current_taxable_eav),
         muni_TEAV_noExe = sum(new_TEAV_noExemps),
         muni_TEAV_noInc = sum(new_TEAV_noIncents),
         
         ) %>%
  ungroup() %>%
  mutate(
    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties
    # Commercial and industrial assessed at 25%
    muni_TEAV_max = muni_current_TEAV + muni_exemptions + muni_abatements + muni_forgoneTIF + muni_forgone_EAV_incent,
    
    muni_TEAV_neither = muni_current_TEAV + muni_exemptions + muni_forgone_EAV_incent,
    
    muni_rate_noExe = munilevy / muni_TEAV_noExe * 100,
    muni_rate_noInc = munilevy / muni_TEAV_noInc * 100,
    muni_rate_neither = munilevy / muni_TEAV_neither * 100, 
    muni_rate_noTIFs = munilevy / (muni_current_TEAV + muni_forgoneTIF) * 100,
    muni_rate_lowest = munilevy / muni_TEAV_max * 100)

alt_rates <- alt_rates %>% 
  mutate(change_noExe = cur_munilevel_rate - muni_rate_noExe,
         change_noInc = cur_munilevel_rate - muni_rate_noInc,
         change_neither = cur_munilevel_rate - muni_rate_neither,
         change_max = cur_munilevel_rate - muni_rate_lowest
         )
```

```{r}
#| label: tbl-munirate-hypotheticals
#| tbl-cap: "Hypothetical Composite Tax Rates. Lowest Tax Rate Possible is calculated from the taxable EAV that would be available if there were no Exemptions, no Incentive Classifications (i.e. all Commercial and Industrial Classes assessed at 25% of their fair market value), and no TIFs."

tbl1 <- alt_rates %>% 
  select(clean_name, cur_munilevel_rate, muni_rate_noExe, muni_rate_noInc, muni_rate_neither, # muni_rate_noTIFs, 
                             muni_rate_lowest) %>% 
  distinct() %>% 
  mutate(across(cur_munilevel_rate:muni_rate_lowest, round, digits = 2)) %>% 
  as.data.frame()

#tbl1

datatable(tbl1,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name',   'Current Composite Rate' = 'cur_munilevel_rate', 'Rate if No Exemptions' = 'muni_rate_noExe', 'Rate if No Incentive Classes' = 'muni_rate_noInc', 'Rate if No Inc. or Exe.' = 'muni_rate_neither', 'Lowest Rate Possible' = 'muni_rate_lowest'))

```

```{r}
#| label: tbl-muni-ratechange
#| tbl-cap: "Hypothetical Change in Composite Tax Rates. Values shown represent a percentage point change."

tbl2 <- alt_rates %>% 
  select(clean_name, change_noExe, change_noInc, change_neither, change_max) %>%
  distinct() %>%
  mutate(across(change_noExe:change_max, round, digits = 2)) %>% as.data.frame()


datatable(tbl2,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name',   'Rate Change from Taxing GHE Exempt EAV' = 'change_noExe', 'Rate Change from Additional Commerc & Indust. Value' = 'change_noInc', 'Rate if No Incentive Classes & No Exemptions' = 'change_neither', 'Maxiumum Rate Change' = 'change_max'))

```


> Layer for Border Crossers. Layer for Unincorporated areas.   


```{r}
#| label: fig-pctincentivevalue
#| fig-cap: "Composite Tax Rate Change from recovering reduced EAV of properties with incentive classification and from taxing EAV that is currently exempt due to the GHE exemption." 
#| fig-height: 5


library(sf)

muni_shp <- read_sf("https://gis.cookcountyil.gov/traditional/rest/services/politicalBoundary/MapServer/2/query?outFields=*&where=1%3D1&f=geojson")

tbl2 %>% 
  left_join(nicknames) %>%
  left_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) %>%

    ggplot(aes(fill = change_neither)) +
    geom_sf(aes(geometry = geometry), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
scale_fill_steps2(
    high = "#420420", low = "black",
  limits = c(0,17),
                   show.limits=TRUE,
  nice.breaks=FALSE,
  na.value="gray",
                    n =4,
                       name = "Change in Composite Tax Rate\n(Percentage Points)",
) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, fill = "white", alpha = .5, color = 'gray40')

```

```{r}
#| label: fig-incent-and-exempt-ratechange-map
#| fig-height: 6
#| layout-ncol: 2
#| column: page 
#| fig-subcap:
#|      - "Change in composite tax rate from assessment ratio for incentive properties set at 25% instead of 10%"
#|      - "Change in composite taxrate from taxing EAV that is current tax exempt due to the GHE exemption"

tbl2 %>% 
  left_join(nicknames) %>%
  left_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) %>%

    ggplot(aes(fill = change_noInc)) +
    geom_sf(aes(geometry = geometry), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
scale_fill_steps2(
    high = "forestgreen",
 limits = c(0,7),
                   show.limits=TRUE,
  nice.breaks=FALSE,
 na.value="gray",
                    n =4,
                       name = "Change in Composite Tax Rate\n(Percentage Points)",)+
   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, fill = "white", alpha = .5, color = 'gray40')



tbl2 %>% 
  left_join(nicknames) %>%
  left_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) %>%

    ggplot(aes(fill = change_noExe)) +
    geom_sf(aes(geometry = geometry), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
scale_fill_steps2(
    high = "purple4",
 limits = c(0,15),
                   show.limits=TRUE,
  nice.breaks=FALSE,
  na.value="gray", # unincorporated areas
                    n =4,
                       name = "Change in Composite Tax Rate\n(Percentage Points)",
        # labels = scales::percent
)

```

```{r}
# incentive_sums <- muni_class_AleaCats %>%
#   left_join(MuniLevel) %>%
#   mutate(incentive = incent_prop) %>%
#   group_by(clean_name, incentive, cur_munilevel_rate) %>%
#   summarize(av = sum(av),
#             eav = sum(eav),
#             fmv = sum(fmv), 
#             pins_in_muni = sum(pins_in_muni), # all pins
#             incent_pins = n(),
#             final_tax_to_dist = sum(final_tax_to_dist),
#             current_taxable_eav = sum(current_taxable_eav)) %>%
#   mutate(new_av = ifelse(incentive == "Incentive", av*2.5, av),
#     new_taxable_eav = ifelse(incentive ==  "Incentive", current_taxable_eav * 2.5 , current_taxable_eav))
# 
# incentive_sums <- incentive_sums %>% 
#   group_by(clean_name) %>% 
#   mutate(munilevy = sum(final_tax_to_dist),
#          cur_muni_taxable_eav = sum(current_taxable_eav),
#          new_muni_taxable_eav = sum(new_taxable_eav)) %>%
#   ungroup() %>%
#   mutate(new_comp_rate = munilevy / new_muni_taxable_eav * 100)


joined <- muni_class_AleaCats %>%   left_join(MuniLevel) %>%
  select(-cur_munilevel_rate) %>% left_join(tbl1, by = "clean_name")

 burden <- joined %>% 
   group_by(clean_name) %>%
   mutate(munilevy = sum(final_tax_to_dist), 
          incentive = incent_prop) %>%
  ungroup() %>%
  mutate(
    # burden = revenuecollected from a group / total Levy for muni
    no_incents_burden = (new_TEAV_noIncents *  (muni_rate_noInc/100) ) / munilevy,
    no_exemps_burden = (new_TEAV_noExemps * (muni_rate_noExe/100)) /  munilevy,
    current_burden = (current_taxable_eav * (cur_munilevel_rate/100)) / munilevy,
    neither_burden = ((new_TEAV_noIncents + all_exemptions) * (muni_rate_neither/100))  / munilevy
      ) %>%
     mutate(change_noExe = cur_munilevel_rate - muni_rate_noExe,
         change_noInc = cur_munilevel_rate - muni_rate_noInc,
         change_neither = cur_munilevel_rate - muni_rate_neither,
         change_max = cur_munilevel_rate - muni_rate_lowest
         )

```

### Dot Graphs: Change in Composite Tax Rate

```{r}
#| label: fig-dotplot-ratechange
#| fig-height: 6
#| fig-cap: "Tax burden for properties with incentive classifications. Excludes municipalities that had a rate change less than 1 percentage point."

# as a dot graph ## 
# create order of dots
order <- burden %>%  
  as_tibble() %>% 
  filter(incentive == "Incentive") %>% 
  arrange(change_noInc) %>%
  select(clean_name, cur_munilevel_rate, muni_rate_noInc)


# make dot graph
burden %>% 
  filter(incentive == "Incentive" & clean_name != "NA") %>%
  select(clean_name, cur_munilevel_rate, muni_rate_noInc, change_noInc) %>% 
  pivot_longer(c("cur_munilevel_rate", "muni_rate_noInc"), 
               names_to = "type", values_to = "tax_rate") %>% 
  left_join(order) %>%
    filter(change_noInc > 1 ) %>%
  ggplot(aes(x = tax_rate, y= reorder(clean_name, change_noInc)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(color=type), size=3 )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_color_brewer(palette="Paired", labels = c("Incentives", "No Incentives"), direction = 1)+
  
  labs(title = "Difference in Composite Tax Rate if Assessed at 25%",
       subtitle = "Ordered by Comp. Rate Change", x = "Composite Tax Rate (%)", y = "")
```

```{r}
#| label: fig-dotplot-ratechange-order2
#| fig-height: 6
#| fig-cap: "Tax burden for Properties with Incentive Classifications. Excludes municipalities that had a rate change less than 1 percentage point."


# as a dot graph ## 
# create order of dots
order <- burden %>%  
  as_tibble() %>% 
  filter(incentive == "Incentive") %>% 
    filter(change_noInc > 1) %>%
  arrange(cur_munilevel_rate) %>%
  select(clean_name, cur_munilevel_rate)

# make dot graph
burden %>% 
  filter(incentive == "Incentive" & clean_name != "NA") %>%
  select(clean_name, cur_munilevel_rate, muni_rate_noInc) %>% 
  arrange(cur_munilevel_rate) %>%
  pivot_longer(c("cur_munilevel_rate", "muni_rate_noInc"), 
               names_to = "type", values_to = "tax_rate") %>% 
  inner_join(order) %>%
  ggplot(aes(x = tax_rate, y= reorder(clean_name, cur_munilevel_rate)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(color=type), size=3 )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_color_brewer(palette="Paired", labels = c("Incentives", "No Incentives"), direction = 1)+
  
  labs(title = "Difference in Composite Tax Rate if Assessed at 25%",
       subtitle = "Ordered by Current Composite Tax Rate", x = "Composite Tax Rate (%)", y = "")
```

## Slides 15: Change in Tax Burden

```{r}
#| code-fold: true
#| tbl-cap: "Tax Burden for Incentive Properties: With and without the reduced assessment ratio (10% vs 25%). Commercial and Industrial are combined in this table. Incentive Properties (Combined) Tax Rates and Burden from removing Incentive Classification Levels of Assessment."

burden %>% 
  filter(incentive == "Incentive" & clean_name != "NA") %>% 
  select(Municipality = clean_name, `Current Incentive Prop Burden` = current_burden, 'Tax Burden if Assess Rato = 25%' = no_incents_burden, 'Current Comp Rate' = cur_munilevel_rate, 'Hyp. Comp Rate' = muni_rate_noInc ) %>% 
  mutate_if(is.numeric, ~round(., 2)) %>% datatable(rownames = FALSE)


# burden %>% write_csv("./Output/incentive_burden_shift.csv")



```

```{r}
#| label: fig-incentiveprops
#| fig-height: 8
#| fig-cap: "Tax Burden for Incentive Properties: With and without the reduced assessment ratio (10% vs 25%). Commercial and Industrial are combined in this table. Incentive Properties (Combined) Tax Rates and Burden from removing Incentive Classification Levels of Assessment."

# as a dot graph ## 

order <- burden %>%  
  as_tibble() %>% 
  filter(incentive == "Incentive" & Alea_cat == "Industrial") %>% 
 filter(change_noInc > 0) %>%
  arrange(current_burden) %>%
  select(clean_name, current_burden)

burden %>% 
    filter(change_noInc > 1) %>%

  filter(incentive == "Incentive" & Alea_cat == "Industrial"  & clean_name !="NA") %>%
  select(clean_name, current_burden, no_incents_burden, no_exemps_burden, neither_burden) %>% 
  pivot_longer(c("current_burden", "no_incents_burden", #"no_exemps_burden", 
                 "neither_burden"), 
               names_to = "type", values_to = "tax_rate") %>% 
  left_join(order) %>%
  ggplot(aes(x = tax_rate, y= reorder(clean_name, current_burden)))+
  
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), pch = 21, size=3, color = "black" )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer(palette="YlOrBr", 
                     labels = c("Current Burden", "No Exemptions or Reduced\nLevel of Assessment", "No Reduced Level of Assessment"), direction = 1)+
  
  labs(title = "Tax Burden for Industrial Properties with Incentives if Assessed at 25%",
       subtitle = "Ordered by Current Tax Burden", x = "% of Levy Paid", y = "" , 
       caption = "")
```


### Interaction of Exemptions and Incentives

![](images/WhatsApp Image 2024-04-12 at 18.14.28_e232cfab.jpg)

```{r}
#| label: fig-residentialburden-scenarios
#| fig-height: 8
#| fig-cap: "Tax Burden for Owner-Occupied Properties for 3 Tax Scenarios: With and without the reduced assessment ratio for commercial and industrial property (10% vs 25%). The Tax burden if homeowners were not granted the GHE. And the tax burden if residential owners did not get their exemption and incentive properties were assessed at 25% instead of 10%."

# as a dot graph ## 

order <- burden %>%  
  as_tibble() %>% 
  filter( Alea_cat %in% c( "Owner Occupied") ) %>% 
 filter(change_noInc > 1) %>%
  arrange(current_burden) %>%
  select(clean_name, current_burden)

burden %>% 
    filter(change_noInc > 1) %>%

    filter( Alea_cat %in% c( "Owner Occupied") & !is.na(clean_name) ) %>% 

 # filter(incentive == "Incentive" & Alea_cat == "Industrial"  & clean_name !="NA") %>%
  select(clean_name, current_burden, no_incents_burden,  no_exemps_burden, 
         neither_burden) %>% 
  pivot_longer(c("current_burden", "no_incents_burden", 
                 "no_exemps_burden", 
                 "neither_burden"), 
               names_to = "type", values_to = "tax_rate") %>% 
  left_join(order) %>%
  filter(current_burden > 0) %>%
  ggplot(aes(x = tax_rate, y= reorder(clean_name, current_burden)))+
  
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), pch = 21, size=3, color = "black" )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer( labels = c("Current Burden", "No Incentives", "No Exemptions", "No Exemps or Incents"), direction = 1)+
  
  labs(title = "Tax Burden for Class 2 Properties",
       subtitle = "Ordered by Current Tax Burden", x = "% of Levy Paid", y = "" , 
       caption = "Technically, this is made using the Owner-occupied sub-category of Class 2 Properties.")
```


```{r}
#| label: fig-residentialburden-scenarios2
#| fig-height: 8
#| fig-cap: "Tax Burden for Owner-Occupied Properties for 3 Tax Scenarios: With and without the reduced assessment ratio for commercial and industrial property (10% vs 25%). The Tax burden if homeowners were not granted the GHE. And the tax burden if residential owners did not get their exemption and incentive properties were assessed at 25% instead of 10%."

# as a dot graph ## 

order <- burden %>%  
  as_tibble() %>% 
  filter( Alea_cat %in% c( "Owner Occupied") ) %>% 
  arrange(current_burden) %>%
  select(clean_name, current_burden)

burden %>% 
    filter(change_noInc > 1) %>%

    filter( Alea_cat %in% c( "Owner Occupied") & !is.na(clean_name) ) %>% 
  select(clean_name, current_burden, no_incents_burden, 
         neither_burden) %>% 
  pivot_longer(c("current_burden",
                  "no_incents_burden",
                # "no_exemps_burden", 
                 "neither_burden"), 
               names_to = "type", values_to = "tax_rate") %>% 
  left_join(order) %>%
  ggplot(aes(x = tax_rate, y= reorder(clean_name, current_burden)))+
  
  geom_line(aes(group = clean_name))+ 
  geom_point(aes( fill = type), color="black", pch = 21, size=3)+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer(labels = c("Current Tax Burden", "Burden without Incentive\nClassifications", "Tax Burden without Exemptions\nor Incentives"), direction = 1)+
  
  labs(title = "Tax Burden for Class 2 (Owner-occupied) Properties",
       subtitle = "Ordered by Current Tax Burden", x = "% of Levy Paid", y = "" , 
       caption = "")
```

```{r}
#| label: fig-residentialburden-scenarios3
#| fig-height: 10
#| fig-cap: "Tax Burden for Owner-Occupied Properties for 3 Tax Scenarios: With and without the reduced assessment ratio for commercial and industrial property (10% vs 25%). The Tax burden if homeowners were not granted the GHE. And the tax burden if residential owners did not get their exemption and incentive properties were assessed at 25% instead of 10%."

# as a dot graph ## 

order <- burden %>%  
  as_tibble() %>% 
  filter( Alea_cat %in% c( "Owner Occupied") ) %>% 
  arrange(current_burden) %>%
  select(clean_name, current_burden)

burden %>% 
    filter(change_noInc > 1) %>%

    filter( Alea_cat %in% c( "Owner Occupied") & !is.na(clean_name) ) %>% 
  select(clean_name, current_burden, no_incents_burden, 
         neither_burden) %>% 
  pivot_longer(c("current_burden",
                  "no_incents_burden",
                 #"no_exemps_burden", 
                 "neither_burden"), 
               names_to = "type", values_to = "tax_rate") %>% 
  left_join(order) %>%
  ggplot(aes(x = tax_rate, y= reorder(clean_name, current_burden)))+
  
  geom_line(aes(group = clean_name))+ 
  geom_point(aes( fill = type), color="black", pch = 21, size=3)+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer(labels = c("Current Tax Burden", "Burden without Exemptions", "Tax Burden without Exemptions\nor Incentives"), direction = 1)+
  
  labs(title = "Tax Burden for Class 2 (Owner-occupied) Properties",
       subtitle = "Ordered by Current Tax Burden", x = "% of Levy Paid", y = "" , 
       caption = "")
```

# Appendix Tables

## Incentive and non-Incentive, Commercial and Industrial Properties

```{r echo = FALSE}
#| label: tbl-propertybreakdown
#| tbl-cap: "Breakdown of incentivized properties within commercial and industrial properties"

table <- nonres_pins2022 %>% 
      filter(Alea_cat != "Land") %>%

  group_by(clean_name, incent_prop, Alea_cat) %>%   # projects can be counted twice if the project has incentive and normal commercial/industrial prop classes.
  summarize(pin_count = n(),
         project_count = n_distinct(keypin), 
         av_adjusted = sum(ifelse(between(class, 600, 899), av*2.5, av)),
         av_incent = sum(ifelse(between(class, 600, 899), av*2.5, 0)),
         av=sum(av),
)  %>%
  mutate(#AV_incent = av_adjusted - av,
           pct_incent = av_incent / av_adjusted)


datatable(table,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name', 'Incentivized?' = 'incent_prop',
                       'Property Type' = 'Alea_cat', 'PINs in Projects' = 'pin_count', 
                       'Project Count' = 'project_count',
                       'Current Taxable AV' = 'av',
                       'Total Assessed Market Value' = 'av_adjusted',
      'Assessed Market Value' = 'av_incent', 
      '% AV Incentivized' = 'pct_incent' )  ) %>%
  formatCurrency(c('Current Taxable AV', 'Assessed Market Value'), digits = 0) %>%
formatPercentage('% AV Incentivized', digits = 2)
```
