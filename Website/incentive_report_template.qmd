---
subtitle: "Supporting Content for Cook County C&I Report"
format: 
  html:
    code-fold: true
    toc: true
    toc-location: left
    tbl-cap-location: margin
    fig-cap-location: margin
    df-print: paged

---

```{r setup}
#| output: false

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

options(scipen = 999)

library(tidyverse)
library(glue)
library(sf)
library(DT)
library(flextable)

nicknames <- readxl::read_excel("../Necessary_Files/muni_shortnames.xlsx")

cook_sums <- read_csv("../Output/ptaxsim_cook_level_2006to2023_new.csv") 

muni_sums <- read_csv("../Output/ptaxsim_muni_level_2006to2023_new.csv")


muni_mc_sums <- read_csv("../Output/ptaxsim_muni_MC_2006to2023_new.csv") |>
  rename_all(~str_replace(., "muni_mc_", ""))


muni_cl_sums <- read_csv("../Output/ptaxsim_muni_class_summaries_2006to2023.csv") |>
  left_join(nicknames)

muni_shp <- read_sf("../Necessary_Files/muni_shp.gpkg")



knitr::opts_chunk$set(warning = FALSE, message = FALSE)

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       line_spacing = 1,
                       big.mark = ",",
                       )

options(DT.options = list())

FitFlextableToPage <- function(ft, pgwidth = 6){

  ft_out <- ft |> autofit()

  ft_out <- width(ft_out, width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))
  return(ft_out)
}

pin_data <- read_csv(paste0("../Output/Dont_Upload/0_joined_PIN_data_", params$year, "_test.csv"))


eq_factor <- read_csv("../Necessary_Files/eq_factor.csv") |>
  filter(year == params$year) |>
  select(eq_factor = eq_factor_final) |>
  as.numeric()

incentive_majorclasses <- c("6", "7A", "7B", "8A", "8B")

commercial_classes <- c(401:435, 490, 491, 492, 496:499,
                        500:535,590, 591, 592, 597:599, 
                        700:799,
                        800:835, 891, 892, 897, 899)  

industrial_classes <- c(480:489,493, 
                        550:589, 593,
                        600:699,
                        850:890, 893
                        )
cmap_colors = c("#1e478e", "#6dae4f", "#d3b42b", "#008fd5", "#ca3428", 
                "#ade0ee", "#3e6730", "#d0e4a4")

# All have less than 50 percent of their taxed EAV within Cook County
cross_county_lines <- c(
  # very small amounts in Cook County, like less than 15%:
  # Deer Park, "Frankfort", "Homer Glen",  "Oak Brook", "East Dundee", "University Park",  
 "030270000", "030440000", "030585000", "030890000", "030320000", "031280000",
  
  # 
  # "Bensenville", "Hinsdale", "Roselle", "Deerfield", Elgin, 
  "030080000", "030560000", "031120000",  "030280000",  "030340000", "030270000",
 
  # Closer to ~50% in Cook County
  # Buffalo Grove,  Bartlett,  Burr Ridge, Hanover Park, Steger 
  "030150000","030050000", "030180000","030500000", "031210000"
  )

cross_county_line <- c(
  "Deer Park", "Frankfort", "Homer Glen",  "Oak Brook", "East Dundee", "University Park",  
  "Bensenville", "Hinsdale", "Roselle", "Deerfield", "Elgin",
  "Buffalo Grove",  "Bartlett",  "Burr Ridge", "Hanover Park", "Steger"
                    )

```


Municipalities that are dropped due to having EAV outside of Cook County: Frankfort, Homer Glen,  Oak Brook, East Dundee, University Park,  Bensenville, Hinsdale, Roselle, Deer Park, Deerfield. 
                        
```{r}
#| label: merge-in-project-identifier

# Workaround for identifying more project IDs. 
# Used Appeal ID to create unique identifier to group PINs.
bor <- read_csv("../Output/borappeals.csv") |> 
  mutate(project_appellant = paste(project_id, sep = "-", appellant))
# modelsummary::datasummary_skim(bor)


# Cleaned PIN-Project list after cleaning the commercial valuation dataset found online. 
# Another temporary work-around until we (maybe) have full keypin list:
proj_xwalk <- read_csv("../Output/all_keypins.csv")               
# all commercial valuation properties but made with not-quite-clean data from commercial valuation dataset on Cook County Data Portal (which was made from combining the Methodology worksheets) 
# Values are also only the FIRST PASS assessments and do not include appeals or changes in values

# Join project IDs to PINs:
pin_data <- pin_data |> left_join(proj_xwalk)
```


```{r}
# original class_dict variables already in 0_joined data
# but I do want the new-ish variables (comparable properties, and land use type) I created in the file to be brought in:
class_dict <- read_csv("../Necessary_Files/class_dict_expanded.csv") |>
  select(class_code, comparable_props, land_use=Alea_cat)


pin_data <- pin_data |> 
  left_join(class_dict, by =  c("class" = "class_code")) |>
  mutate(clean_name = ifelse(is.na(clean_name), "Unincorporated", clean_name)) 
```


```{r}

# BOR data source shortfall: We only have the data if they appeal!
# sales data

bor_pins <- bor |> 
  group_by(pin) |> 
  arrange(desc(tax_year)) |>
  summarize(pin = first(pin),              # grabs first occurrence of unique PIN
            class_bor = list(unique(class)),
            appellant = first(appellant),
            project_id = first(project_id), 
            timesappealed = n() ) |>
  mutate(proj_appellant = paste(project_id, "-", appellant))

pin_data <- pin_data |> left_join(bor_pins, by = "pin")

# now do it the other way and compare

pin_data <- pin_data |> 
  mutate( both_ids = project_id,
          both_ids = ifelse(is.na(both_ids), keypin, both_ids),
          both_ids = ifelse(is.na(both_ids) & between(class, 300, 899), pin, both_ids))
```


> Total Value should equal Current Taxable Value + non-Taxable Value where non-Taxable Value = Value in TIF Increment + Reduced Value from Policy Choices where Reduced Value = Tax Exempt Value from Homeowners exemptions or abatements + Reduced Taxable Value from lower levels of assessments due to incentive classifications:

$$\mbox{Total Value = Taxed Value + Untaxable Value}$$

*where*

$$\mbox{Untaxable Value = TIF Increment + Exemptions + Abatements    
+ Reduced Taxable Value from Lower Incentive Class Assessment Ratios}$$

*where*

$$\mbox{Reduced Taxable Value from Incentive Classification Levels of Assessments}$$ $$\mbox{which then equals }  {0.25 \ast EAV - \approx0.10 \ast EAV}$$

```{r include = FALSE, eval=FALSE}
pin_data |> 
  filter(class == 239) |> 
  mutate(difference = round(eq_av - (taxed_eav + untaxable_value_eav)), .before = taxed_fmv ) |> 
  arrange(desc(difference)) |> head() |> 
  select(difference, taxed_eav, eq_av, untaxable_value_eav, taxed_fmv, everything())

```

```{r include = FALSE}
# Are there any properties where the taxed_eav is greater than the original eav value? Nope! yay.
pin_data |> filter(eq_av - taxed_eav < -1)
```

```{r eval=FALSE, include=FALSE}
stopifnot(
  (pin_data$taxed_eav - pin_data$eq_av <= 10)
)

```

# Cook County Total Value

$$
\mbox{AV = Fair Market Value * Level of Assessment}
$$

$$
\mbox{Tax Rate} = \frac{\mbox{Amount Levied by Taxing Districts}}{\mbox{Taxable Value}}
$$

> Taxed Value refers to what taxing agencies did tax to pay for their levies. We use the portion of the tax bill that does NOT go to TIFs to calculate the portion of the composite levy paid by each PIN and then sum up from there.

$$
\mbox{Final Tax to District} = \mbox{Portion of Levy Paid by PIN} = {\mbox{Tax Code Rate}}*{\mbox{Taxable Value of PIN}}
$$

$$\mbox{Equalized Assessed Value} = {\frac{\mbox{final tax to dist + final tax to TIF}}{\mbox{tax code rate}} + \mbox{Exemptions + Abatements}}$$

$$\mbox{Taxed EAV} = {\frac{\sum{final\_tax\_to\_dist}}{\mbox{tax code rate}} = \mbox{EAV - Exemptions - Abatements}}$$



```{r}
#| label: tbl-cooktotals
#| tbl-cap: "**FMV of PINs in Cook County**       Taxed FMV represents the property value that was actually taxed by local taxing jurisdictions(equal to the amount levied) but converted to FMV. We use the the portion of an individuals tax bill that does NOT go to a TIF to calculate the composite levy for taxing jursidictions. This means that the \"levy\" actually represents the amount collected by the taxing agencies, not the amount that was levied. Therefore the composite levy does not include unpaid taxbills."

cook_sums |> 
  filter(year == params$year) |>
  select(cty_PC, cty_fmv, cty_fmv_taxed) |>
    mutate(cty_pct_fmv_taxed = scales::percent(cty_fmv_taxed/cty_fmv, accuracy = 0.01)) |>
  flextable() |> 
  set_header_labels(cty_PC = 'PINs', 
                   # cty_projects = "Project IDs", 
                    cty_fmv_taxed = 'Taxed FMV', 
                    cty_fmv_untaxable_value = 'FMV not Taxed\nfor Levy',
                    cty_fmv = 'Total FMV', 

                    cty_pct_fmv_taxed = 'FMV Taxed (%)'
  ) |>   
  FitFlextableToPage()
  
```

```{r add-variable-labels, eval=FALSE, include =FALSE}
library(labelled)

table_cook <- table_cook |> 
  set_variable_labels(
  cty_PC = 'PINs', 
  cty_projects = "Project IDs", 
  cty_fmv = 'Total FMV', 
  cty_fmv_taxed = 'Taxed FMV', cty_fmv_untaxable_value = 'FMV not Taxed\nfor Levy',
  cty_pct_fmv_untaxable = 'Value not Taxed (%)',
  cty_fmv_comandind = 'Com. & Ind. FMV', 
  cty_pct_fmv_both_incent = '% of Com. & Ind. FMV  w/ Incent.',
  cty_pct_fmv_incentinTIF = '% of Com. & Ind. FMV  w/ Incent. in TIF', 
  cty_pct_fmv_incents_tif_increment = '% of Com. & Ind. FMV in TIF Increment',
  
  cty_PC_comandind = 'PIN Count', 
  cty_PC_incent_inTIF = "Incent. PINs in TIF", 
  cty_pct_PC_both_incent = '% of Com. & Ind. PINs w/ Incent.',
  cty_pct_PC_both_incent_inTIF = '% of Incent. PINs in TIF'
  )
```

 
```{r}
#| label: tbl-cooktotals-comandind
#| tbl-cap: "**Commercial and Industrial PINs in Cook County**"

tbl <-  cook_sums |>
  filter(year ==params$year) |>
  mutate(cty_pct_fmv_both_incent = cty_fmv_incentive / cty_fmv_comandind ,
         cty_pct_PC_both_incent = cty_PC_withincents / cty_PC_comandind         ) |>
  select(cty_fmv_comandind, #cty_fmv, 
          cty_pct_fmv_both_incent, 
         cty_pct_fmv_incentinTIF,
         cty_pct_PC_both_incent, cty_PC_comandind, cty_PC_incents_inTIFs, #cty_pct_PC_both_incent_inTIF, 
         cty_pct_fmv_incents_tif_increment) |>
 mutate(across(contains("pct_"), scales::percent, accuracy = .01))

tbl |>
  flextable() |> 
  align(align = "right") |>
  set_header_labels(
    cty_fmv_comandind = 'Com. & Ind. FMV',
    #  cty_fmv = 'Total FMV in Cook',
    cty_pct_fmv_both_incent = '% of Com. & Ind. FMV  w/ Incent.',
    cty_pct_fmv_incentinTIF = '% of Com. & Ind. FMV  w/ Incent. in TIF',
    cty_pct_fmv_incents_tif_increment = '% of Com. & Ind. FMV in TIF Increment',
    
    cty_PC_comandind = 'PIN Count',
    cty_PC_incents_inTIFs = "Incent. PINs in TIF",
    cty_pct_PC_both_incent = '% of Com. & Ind. PINs w/ Incent.',
    cty_pct_PC_both_incent_inTIF = '% of Incent. PINs in TIF'
  ) |>
  FitFlextableToPage()
```

`{r} tbl$cty_pct_fmv_both_incent` of industrial and commercial PINs (aka \"revenue producing PINs\") FMV has an incentive classification (`{r} tbl$cty_pct_PC_both_incent` when using PIN counts). Of the PINs that have incentive classification, `{r} tbl$cty_pct_fmv_incentinTIF` of the FMV is located within a TIF (`{r} tbl$cty_pct_PC_both_incent` when using PIN counts).

`{r} tbl$cty_pct_fmv_incents_tif_increment` is in TIF Increment.

```{r}
#| label: tbl-cooktotals-commercial
#| tbl-cap: "**Commercial PINs in Cook County**"

#table_cook |> 
  
tbl <- cook_sums |>
  filter(year == params$year) |>
  mutate(cty_pct_fmv_com_incent = cty_fmv_comwithincent / cty_fmv_commercial,#) |>
         cty_pct_fmv_com_incent_inTIF = cty_fmv_com_incent_inTIF / cty_fmv_comwithincent,
         
         cty_pct_PC_com_incent_inTIF = cty_PC_com_incent_inTIF / cty_PC_com_incent) |>
  
  select(cty_PC_commercial, cty_PC_com_incent, cty_pct_incent_ofcomPC, 
         cty_pct_PC_com_incent_inTIF, cty_fmv_commercial, cty_pct_incent_ofcomPC, 
         cty_pct_fmv_com_incent, cty_pct_fmv_com_incent_inTIF) |>
  
  mutate(across(contains("pct_"), scales::percent, accuracy = .01))

tbl |>
  flextable() |> 
    align(align = "right") |>
  set_header_labels(cty_fmv_commercial = 'Commercial FMV',
                    cty_PC_commercial = 'Commercial Pin Count', 
                    cty_PC_com_incent = 'Com. PIN Count w/ Incent.',
                    cty_pct_incent_ofcomPC = 'Com. PINs w/ Incent.',
                    cty_pct_fmv_com_incent = '% of Com. FMV  w/ Incent.', 
                    
                    cty_pct_fmv_com_incent_inTIF = '% of Com. FMV  w/ Incent. in TIF', 
                    cty_PC_com_incent_inTIF = "Com. Incent. PINs in TIF", 
                    cty_pct_PC_com_incent = '% of Com. PINs w/ Incent.',
                    cty_pct_PC_com_incent_inTIF = '% of Incent. PINs in TIF'
  ) |>   FitFlextableToPage()

```


`{r} tbl$cty_pct_fmv_com_incent` of commercial PIN FMV has an incentive classification (`{r} tbl$cty_pct_incent_ofcomPC` when using PIN counts). Of the PINs that have incentive classification, `{r} tbl$cty_pct_fmv_com_incent_inTIF` of the FMV is located within a TIF (`{r} tbl$cty_pct_PC_com_incent_inTIF` when using PIN counts).


```{r}
#| label: tbl-cooktotals-industrial
#| tbl-cap: "**Industrial PINs in Cook County** "

tbl <- cook_sums |>
  filter(year == params$year) |>
  mutate(cty_pct_fmv_ind_incent = cty_fmv_indwithincent / cty_fmv_industrial,
         cty_pct_fmv_ind_incent_inTIF = cty_fmv_ind_incent_inTIF / cty_fmv_indwithincent,
         
         cty_pct_PC_ind_incent_inTIF = cty_PC_ind_incent_inTIF / cty_PC_ind_incent) |>
  
  select(cty_PC_industrial, cty_PC_ind_incent, cty_PC_ind_incent_inTIF, 
         cty_pct_incent_ofindPC, cty_pct_fmv_ind_incent_inTIF, cty_pct_PC_ind_incent_inTIF,
         
         cty_fmv_industrial, cty_pct_fmv_ind_incent,  
  ) |>
  mutate(across(contains("pct_"), scales::percent, accuracy = .01)) 

tbl |>
  flextable() |> 
  align(align = "right") |> 
  set_header_labels(cty_fmv_industrial = 'Industrial FMV',
                    cty_PC_industrial = 'Industrial Pin Count', 
                    cty_PC_ind_incent = 'Ind. PIN Count w/ Incent.',
                    cty_pct_incent_ofindPC = 'Ind. PINs w/ Incent.',
                    cty_pct_fmv_ind_incent = '% of Ind. FMV  w/ Incent.', 
                    
                    cty_pct_fmv_ind_incent_inTIF = '% of Ind. FMV  w/ Incent. in TIF', 
                    cty_PC_ind_incent_inTIF = "Ind. Incent. PINs in TIF", 
                    cty_pct_PC_ind_incent = '% of Com. PINs w/ Incent.',
                    cty_pct_PC_ind_incent_inTIF = '% of Incent. PINs in TIF'
  ) |> 
  FitFlextableToPage()

```


`{r} tbl$cty_pct_fmv_ind_incent` of industrial FMV has an incentive classification (`{r} tbl$cty_pct_incent_ofindPC` when using PIN counts). Of the PINs that have incentive classification, `{r} tbl$cty_pct_fmv_ind_incent_inTIF` of the FMV is located within a TIF ( `{r} tbl$cty_pct_PC_ind_incent_inTIF` when using PIN counts).
  
  
```{r}
#| label: tbl-untaxableFMV-Cook
#| tbl-cap: "**Untaxable FMV in Cook County.**"

cook_sums |>
  filter(year == params$year) |>
  select(cty_fmv, cty_fmv_tif_increment, cty_fmv_exemptions, cty_fmv_abatements, 
         ) |>
mutate(cty_pct_fmv_untaxable = (cty_fmv_tif_increment + cty_fmv_exemptions + cty_fmv_abatements)/cty_fmv) |>
  mutate(across(contains("pct_"), scales::percent, accuracy = .01)) |>
  flextable() |> 
    align(align = "right") |>  
  set_header_labels(
                   cty_fmv = 'Total FMV', 
                    cty_fmv_tif_increment = 'TIF Increment FMV' ,
                    cty_fmv_exemptions = 'Exempt Value: Exemptions',
                    cty_fmv_abatements = 'Exempt Value: Abatements',
                 #   cty_fmv_untaxable_value = 'Value not Taxable \nfor Levy',
                    cty_pct_fmv_untaxable = 'County FMV not Taxed (%)'
                 ) |>
  FitFlextableToPage()
```

```{r}
#| label: tbl-untaxableAV-Cook
#| tbl-cap: "**Untaxable AV in Cook County.**        Taxed AV represents the property value that was actually taxed by local taxing jurisdictions."

cook_sums |>
  filter(year == params$year) |>  
  select(cty_av, cty_av_taxed, cty_untaxable_value_av, cty_pct_av_taxed, cty_pct_av_untaxable ) |>
  mutate(across(contains("pct_"), scales::percent, accuracy = .01)) |>
  flextable() |> 
    align(align = "right") |>  set_header_labels(
                   cty_av = 'Total AV', 
                    cty_av_taxed = 'Taxed AV' ,
                    cty_untaxable_value_av = 'AV Not Taxed',
                    cty_pct_av_taxed = '% Taxed',
                    cty_pct_av_untaxable = '% Not Taxed') |>
   FitFlextableToPage()
```

```{r}
#| label: tbl-fmv-intif-withincentive-Cook
#| tbl-cap: "**FMV of properties with incentive classifications and TIF increment.**      Value in TIFs, value within the TIF that can be taxed by local taxing jurisdictions, value of properties that have reduced levels of assessments from incentive classifications, and the value that is both in a TIF and has a reduced LOA."

cook_sums |>
  filter(year == params$year) |>
  select(cty_fmv, cty_fmv_inTIF, cty_fmv_tif_increment, 
         cty_fmv_incentive, cty_fmv_incents_inTIFs, cty_fmv_incents_tif_increment) |>
  flextable() |> 
  set_header_labels(
                    cty_fmv = 'Total FMV', 
                    cty_fmv_inTIF = 'FMV in TIFs',
                    cty_fmv_tif_increment = 'TIF Increment FMV' ,
                    cty_fmv_incents_inTIFs = 'FMV from Incent. Class in TIF',
                    cty_fmv_incentive = "FMV with Incent.Class.", 
                    cty_fmv_incents_tif_increment = 'FMV with Incent. Class. in TIF Increment') |>   
  FitFlextableToPage()

```

**Taxed value** is the amount of value that was actually taxed in order to pay for taxing agencies levies. It includes frozen EAV within an area + taxable EAV for residential properties net exemptions and abatements. It also includes the equalized assessed value of incentive properties at their current, lower assessment ratios. `final_tax_to_dist` is used to calculate the amount that was collected by local government agencies and then divided by the tax rate to calculate the amount of value that was taxed, or the **taxable equalized assessed value (TEAV)**.

The Taxed Value, when converted to the Fair Market Value (FMV) represents the amount of value that was taxed out of the full FMV available in Cook County.


Untaxable EAV includes homeowner exemptions for 200 level properties, abatements for other property class types, EAV in the TIF increment, and EAV that has been reduced due to incentive classifications.

```{r}
#| tbl-cap: "The Fair Market Value (FMV) is also called the Market Value for Assessment Purposes and can be calculated from the `av` / `loa`, or the Assessed Value divided by the Level of Assessment. However, the values used for the level of assessment are an approximation for incentive properties since we do not have the PIN level assessment ratios."

cook_MC_sums <- read_csv("../Output/ptaxsim_cook_MC_level_2006to2023_new.csv") 

cook_MC_sums |>  
  filter(year == params$year) |>
      mutate(across(contains(c("pct_", "rate")), scales::percent, accuracy = .01)) |>
      mutate(across(is.numeric, round, digits = 0)) |>

  select(
    "Property Type" = class_group, 
    "Homeowner Exempt FMV"= cty_mc_fmv_exemptions,
    "Abated FMV" = cty_mc_fmv_abatements,
    "$0 Bill Count" = cty_mc_zero_bill,
    "$ Levy Paid" = cty_mc_levy,
  #  "% of Levy Paid" =  pct_mc_levy_paid, 
    "FMV in Major Class" =  cty_mc_fmv,
    "Taxed AV" = cty_mc_av_taxed,
   # "Project Count" = cty_mc_projects,
    "Avg Composite Tax Rate" = cty_mc_current_rate_avg,
 'FMV in TIFs' = cty_mc_fmv_inTIF, 
   'TIF Increment FMV' = cty_mc_fmv_tif_increment)  |> 
  flextable() |> 
  align(align = "right")

```


# Municipality Level Stats

*Ignore stats for these Municipalities. Simple rounding errors may cause bizarre results for rate changes & other calculations. These municipalities are dropped from summary tables in this website but are included in exported files.*

-   Frankfort has 1 PIN in Cook County
-   East Dundee has 2
-   Homer Glen has 3
-   University Park has 4
-   Oak Brook, Deer Park, Deerfield, & Bensenville each have less than 75 PINs in Cook County, IL

## Frequency of Incentives 

### Fair Market Value of Incentive PINs

```{r}
#| label: tbl-top10industrialincentive-munis
#| tbl-cap: "Top 10 Municipalities using Industrial Incentives"

landuse_incentshares <- pin_data |>  
  filter(!agency_num %in% cross_county_lines) |>

  filter(land_use != "Land") |>
  group_by(clean_name, land_use) |> 
  summarize(pin_count = n(),
            incent_PC = sum(ifelse(class >=600 & class <=900, 1, 0), na.rm=TRUE),
            fmv_incentive = sum(ifelse(class >=600 & class <=900, fmv, 0), na.rm = TRUE),
            fmv_group = sum(fmv, na.rm=TRUE),
  ) |>
  mutate(
    fmv_incentive = ifelse(fmv_incentive == 0, NA, fmv_incentive),
    pct_incent = fmv_incentive / fmv_group,
    pct_incent = ifelse(is.na(pct_incent), 0, pct_incent),
pct_incent = scales::percent(pct_incent)
)  

indust_top10 <- landuse_incentshares |>
  select(clean_name, land_use, fmv_incentive, incent_PC) |> 
  filter(land_use == "Industrial") |>
  arrange(desc(fmv_incentive)) |>
  head(10) |> 
  select(-land_use)

indust_top10 |>
  flextable() |> 
  set_header_labels(clean_name = "Municipality", incent_PC = '# of Incent. PINs',
fmv_incentive = "FMV from Incentive\nClass Properties"
) |>
  set_table_properties( layout = "autofit", width = .75)
```

```{r}
#| label: tbl-top10commercialincentive-munis
#| tbl-cap: "Top 10 Municipalities using Commercial Incentives"

commerc_top10 <- landuse_incentshares |>
  select(clean_name, land_use, fmv_incentive, incent_PC) |> 
  filter(land_use == "Commercial") |>
  arrange(desc(fmv_incentive)) |>
  head(10) |> 
  select(-land_use)
  
commerc_top10 |>
  flextable() |> 
#align(align = "right", j = 2:4) |>
  set_header_labels(clean_name = "Municipality", 
                    incent_PC = '# of Incent. PINs', 
                    fmv_incentive = "FMV from Incentive\nClass Properties"
                    ) |>
  set_table_properties( layout = "autofit", width = .75)
```

### Share of Total FMV with Incentive Classification

Combined Industrial and Commercial FMV with incentive classification  divided by total FMV in municipality. Not included in a table in the report.

One way of showing areas that have reduced their tax base significantly through the use of incentive classifications. 



```{r}
#| label: tbl-muni-percentages
#| tbl-cap: "Municipalities with the largest share of FMV property with incentive classification."


table_muni_percentages <- muni_sums |>   
  filter(year == params$year)|>
  filter(!clean_name  %in% cross_county_line)


muni_count <- n_distinct(table_muni_percentages$clean_name)
no_incents <- n_distinct(table_muni_percentages$clean_name[table_muni_percentages$pct_fmv_w_incentclass == 0])
median = round(muni_count/2)
median_5 = c( (median-2) : (median+2) )
bottom_5 = c( (muni_count-4) : muni_count )

table_muni_percentages |>
  select(clean_name, pct_fmv_w_incentclass) |> 
  arrange(desc(pct_fmv_w_incentclass)) |>
  slice(c(1:5, median_5)) |>
  
  mutate(pct_fmv_w_incentclass = scales::percent(pct_fmv_w_incentclass, digits = 2)) |>
  flextable() |> 
  border_remove() |>
  hline_top() |>
  hline(i = c(5,10)) |>
  
  set_header_labels(clean_name = "Municipality", pct_fmv_w_incentclass = "% FMV") |>
  add_footer_lines(top = FALSE, values = paste0("There are ", no_incents, "  municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.") ) |>
  
  align(j = 2, align = "right") |>
  align(j=2, align = "right", part = "header") |>
  bold(i = 8) |>

  set_table_properties( layout = "autofit")
```

```{r}
library(sf)
library(ggpattern)

no_incentives <-  pin_data |> 
  group_by(clean_name) |> 
  filter(sum(incent_prop) == 0) |> 
  distinct(clean_name)


no_incentives <- no_incentives |>
  left_join(muni_shp, by = c("clean_name" = "MUNICIPALITY")) 

# unincorp_areas <- muni_shp |> filter(!MUNICIPALITY %in% munilevel$clean_name)
#anti_join(munilevel, muni_shp, by = c("clean_name" = "MUNICIPALITY"))

# unincorp_areas2 <- muni_shp |> filter(!MUNICIPALITY %in% munilevel$shpfile_name)
```


```{r join-namecheck, include=FALSE, eval=FALSE}
table_muni_percentages |>
    left_join(nicknames) |>

  select(clean_name, pct_fmv_w_incentclass, shpfile_name) |>
 filter(!is.na(clean_name) & clean_name != "Unincorporated" ) |>
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY"))
```

```{r}
#| label: fig-percentFMVinMunis
#| fig-cap: "**Percent of Municipality FMV with Incentive Classification** % = FMV from Incentive Class properties / Muni FMV"
#| column: margin

table_muni_percentages |>
    left_join(nicknames) |>

  select(clean_name, pct_fmv_w_incentclass, shpfile_name) |>
 filter(!is.na(clean_name) & clean_name != "Unincorporated" ) |>
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) |>
  
  ggplot(aes(fill = pct_fmv_w_incentclass)) +
  geom_sf(aes(geometry = geom), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    high = "brown", low = "black",
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value="gray",
    n =4,
    name = "Municipality FMV\nwith Incentive\nClassification",
    labels = scales::percent
) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geom), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = "white", alpha = .5, color = 'gray40')

```

```{r}
#| label: tbl-muniincentiveuse
#| tbl-cap: "PINs and value summarized by if the property has an incentive class or not in a municipality. AV Adjusted is the amount of assessed value that could be taxed if the property were assessed at 25% instead of the lower level of assessment of approximately 10%."

table2 <- pin_data |> 
    filter(land_use != "Land") |>
  group_by(clean_name, incent_prop) |>   # projects can be counted twice if the project has incentive and normal commercial/industrial prop classes.
  summarize(pin_count = n(),
         project_count = n_distinct(keypin), 
         av_adjusted=sum(ifelse(between(class, 600, 899), av*2.5, av)),
         av=sum(av, na.rm=TRUE),
fmv=sum(fmv)) 

datatable(table2,
          rownames= FALSE,
          colnames = c('Municipality' = 'clean_name',   
                       'Incentivized?' = 'incent_prop', 
                       'PIN Count' = 'pin_count', 
                       'Project Count' = 'project_count', 
                       'Taxable AV' = 'av',
                       'AV w/o Incentive Classification' = 'av_adjusted',
                       'FMV' = 'fmv')) |>
  formatCurrency(c('Taxable AV',  'AV w/o Incentive Classification', 'FMV'), digits = 0)
```



## Share of Commercial & Industrial FMV with Incentive Classification

```{r}
#| label: tbl-muni-comind-shareofFMV
#| tbl-cap: "Municipalities with the largest share of Commercial and Industrial property with incentive classification. Uses values obtained from PTAXSIM, and levels of assessment from CCAO's Github."


muni_incent_share <- pin_data |> 
  # drop munis mostly outside of Cook and unincorporated PINs
filter(!agency_num %in% cross_county_line & 
         !is.na(clean_name) ) |>

  filter(land_use == "Industrial" | land_use == "Commercial") |>
  group_by(clean_name, agency_num) |> 
  summarize(pin_count = n(),
            incent_PC = sum(ifelse(class >=600 & class <900, 1, 0), na.rm=TRUE),
            fmv_w_incent = sum(ifelse(class >=600 & class <900, fmv, 0), na.rm = TRUE),
           # project_count = n_distinct(keypin),
            fmv_group = sum(fmv, na.rm=TRUE),
            comind_fmv =sum(fmv, na.rm=TRUE),
            pins_inTIF = sum(in_tif, na.rm=TRUE)) |>
  mutate(
    fmv_w_incent = ifelse(fmv_w_incent == 0, NA, fmv_w_incent),
    pct_fmv_w_incent = fmv_w_incent/comind_fmv,
    pct_fmv_w_incent = ifelse(is.na(pct_fmv_w_incent), 0, pct_fmv_w_incent)) |>  
  select(clean_name, pct_fmv_w_incent, agency_num, fmv_w_incent, comind_fmv) 


muni_count <- n_distinct(muni_incent_share$clean_name)
no_incents <- n_distinct(muni_incent_share$clean_name[muni_incent_share$pct_fmv_w_incent == 0])
median = round(muni_count/2)
median_5 = c( (median-2) : (median+2) )
bottom_5 = c( (muni_count-4) : muni_count )


muni_incentshare_slice <- muni_incent_share  |>
  ungroup() |>
  
  filter(!agency_num %in% cross_county_lines) |>
  mutate(pct_fmv_w_incentclass = fmv_w_incent/comind_fmv,
         pct_fmv_w_incentclass = ifelse(is.na(pct_fmv_w_incentclass), 0, pct_fmv_w_incentclass)) |>
    select(clean_name, pct_fmv_w_incentclass) |>

  arrange(desc(pct_fmv_w_incentclass)) |>
  mutate(pct_fmv_w_incentclass = scales::percent(pct_fmv_w_incentclass, accuracy = 0.01 ) ) |>
  slice(c(1:5, median_5))

muni_incentshare_slice |>
  flextable() |> 
  border_remove() |>
  align(j = 2, align = "right", part = "all") |>
  hline_top() |>
  hline(i = c(5,10)) |>
  set_header_labels(clean_name = "Municipality", pct_fmv_w_incentclass = "% FMV with\nIncent. Class.") |>
  add_footer_lines(top = FALSE, values = c(paste0("There are ", no_incents, " municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.") )) |>
  bold(i = 8) |>
  set_table_properties( layout = "autofit")
```


```{r}
#| label: fig-Figure7-shareofcomindFMV
#| fig-cap: "Share of Commercial and Industrial FMV that has an incentive property class."

figure7 <- muni_incent_share |>
  select(clean_name, pct_fmv_w_incent) |>
  left_join(nicknames)|>
filter(clean_name != "Unincorporated") |>
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) 

figure7 |>
  ggplot(aes(fill = pct_fmv_w_incent)) +
  geom_sf(aes(geometry = geom), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    high = "#1e478e", low = "black",
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value="gray",
    n =4,
    name = "C&I FMV with\nIncentive Class",
    labels = scales::percent
) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geom), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = "white", alpha = .5, color = 'gray40')+
  ggtitle(label = "Commercial & Industrial FMV with Incentive Classification")

```

## Share of Industrial FMV with Incentive Classification within each Municipality


```{r}
#| label: tbl-industrialsharewithincentive
#| tbl-cap: "Percent of Industrial FMV within each Municipality that has incentive classification. 37 municipalities do not use industrial incentives."

indust_share_full <- muni_sums  |>
  
  filter(year == params$year & !clean_name %in% cross_county_line) |>
  ungroup() |>
  mutate(pct_fmv_indust_incent =  muni_fmv_indust_incent/muni_fmv_industrial,
         pct_fmv_indust_incent = ifelse(is.na(pct_fmv_indust_incent), 0, pct_fmv_indust_incent)) |>
  select(clean_name, pct_fmv_indust_incent) |> 
  arrange(desc(pct_fmv_indust_incent)) 

muni_count <- n_distinct(indust_share_full$clean_name)
no_incents <- n_distinct(indust_share_full$clean_name[indust_share_full$pct_fmv_indust_incent == 0])
median = round(muni_count/2)
median_5 = c( (median-2) : (median+2) )
bottom_5 = c( (muni_count-4) : muni_count )

indust_share <- indust_share_full |>
  slice(c(1:5, median_5)) |>
  mutate(pct_fmv_indust_incent = scales::percent(pct_fmv_indust_incent, accuracy = 0.01 ) ) 

indust_share |>
  flextable() |> 
  border_remove() |>
  align(j = 2, align = "right", part = "all") |>
  hline_top() |>
  hline(i = c(5,10)) |>
  set_header_labels(clean_name = "Municipality", pct_fmv_indust_incent = "% FMV with\nIncent. Class.") |>
  add_footer_lines(top = FALSE, values = paste0("There are ", no_incents, "  municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.") ) |>
  bold(i = 8) |>
  set_table_properties( layout = "autofit")
```

```{r}
#| label: fig-Figure7B-shareofIndFMV
#| fig-cap: "Share of Industrial FMV that has an incentive property class."

indust_max = max(indust_share_full$pct_fmv_indust_incent)
figure7B <- indust_share_full |>
  select(clean_name, pct_fmv_indust_incent) |>
  left_join(nicknames)|>
filter(clean_name != "Unincorporated") |>
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) 

figure7B |>
  ggplot(aes(fill = pct_fmv_indust_incent)) +
  geom_sf(aes(geometry = geom), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    high = "brown", low = "black",
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value="gray",
    n =4,
    name = "FMV with\nIncentive Class",
    labels = scales::percent) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geom), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = "white", alpha = .5, color = 'gray40')+
  ggtitle(label = "Industrial FMV with Incentive Classification")

```


## Share of Commercial FMV with Incentive Classification within each Municipality

```{r}
#| label: tbl-commercialsharewithincentive
#| tbl-cap: "Percent of Commercial FMV within each Municipality that has incentive classification."
#| 
commerc_share_full <- muni_sums  |>
  
  filter(year == params$year & !clean_name %in% cross_county_line) |>
  ungroup() |>
  mutate(pct_fmv_commerc_incent =  muni_fmv_commerc_incent/muni_fmv_commercial,
    pct_fmv_commerc_incent = ifelse(is.na(pct_fmv_commerc_incent), 0, pct_fmv_commerc_incent)) |>
  select(clean_name, pct_fmv_commerc_incent) |> 
  arrange(desc(pct_fmv_commerc_incent))

muni_count <- n_distinct(commerc_share_full$clean_name)
no_incents <- n_distinct(commerc_share_full$clean_name[commerc_share_full$pct_fmv_commerc_incent == 0])
median = round(muni_count/2)
median_5 = c( (median-2) : (median+2) )
bottom_5 = c( (muni_count-4) : muni_count )

commerc_share <- commerc_share_full |>
  slice(c(1:5, median_5))  |>
  mutate(pct_fmv_commerc_incent = scales::percent(pct_fmv_commerc_incent, accuracy = 0.01 ) ) 

commerc_share |>
  flextable() |> 
  border_remove() |>
  align(j = 2, align = "right", part = "all") |>
  hline_top() |>
  hline(i = c(5,10)) |>
  set_header_labels(clean_name = "Municipality", pct_fmv_commerc_incent = "% FMV with\nIncent. Class.") |>
  add_footer_lines(top = FALSE, values = paste0("There are ", no_incents, "  municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.") ) |>
  
  bold(i = 8) |>
  set_table_properties( layout = "autofit")
```

```{r}
#| label: fig-Figure7C-shareofCommercFMV
#| fig-cap: "Share of Commercial FMV that has an incentive property class."

figure7C <- commerc_share_full |>
  select(clean_name, pct_fmv_commerc_incent) |>
  left_join(nicknames)|>
filter(clean_name != "Unincorporated") |>
  full_join(muni_shp, by = c("shpfile_name" = "MUNICIPALITY")) 

figure7C |>
  ggplot(aes(fill = pct_fmv_commerc_incent)) +
  geom_sf(aes(geometry = geom), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    high = "brown", low = "black",
    limits = c(0, indust_max),
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value="gray",
    n =4,
    name = "FMV with\nIncentive Class",
    labels = scales::percent
) +
   geom_sf_pattern(data = no_incentives, aes(geometry = geom), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = "white", alpha = .5, color = 'gray40')+
  ggtitle(label = "Commercial FMV with Incentive Classification")

```


# The Costs of Incentives

## Shifted Tax Revenue and Tax Burden

Read in CCAO level of assessment rates for each property class. Read in Summary file for Municipalities from 2006 to `r params$year`.

```{r}
muni_rate <- read_csv("../Output/ptaxsim_muni_level_2006to2023.csv") |>
  filter(year == params$year) |>
  left_join(nicknames) |> 
  select(clean_name, muni_current_rate_avg, muni_pct_eav_taxed) |>
  rename(cur_munilevel_rate = muni_current_rate_avg) |> 
  filter(!clean_name %in% cross_county_line)

muni_ratechange <- read_csv(paste0("../Output/muni_ratechange_", params$year, "_test.csv")) |> 
  filter(!clean_name %in% cross_county_line)
```

## Not Taxed Value - PIN aggregated to County Level

```{r calculate-cook-altrates-fromPINlevel}
#cook_ratechange <- read_csv("../Output/ptaxsim_cook_level_2006to2023_new.csv") |> 
 # filter(year == params$year)
```


```{r old-calculate-cook-altrates-fromPINlevel}

cook_ratechange <- pin_data |>
  filter(!clean_name  %in% cross_county_line) |> 
  summarize(
    
    ## New Tax Base Calculations
    new_TEAV_noIncents = sum(ifelse(class >= 600 & class < 900,
                                    (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),
    
    ## NewTax Base Calculations
    new_TEAV_noCommercIncents = sum(ifelse(class >= 600 & class < 900 & class %in% commercial_classes,
                                           (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),

   new_TEAV_noIndustIncents = sum(ifelse(class >= 600 & class < 900 & class %in% industrial_classes,
      (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),


    new_TEAV_noC6 = sum(ifelse( class >=600 & class < 700, 
(taxed_av*eq_factor/loa)*0.25 , taxed_av*eq_factor), na.rm=TRUE),

    new_TEAV_noC7 = sum(ifelse(class >=700 & class < 800,
(taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),

    new_TEAV_noC8 = sum(ifelse(class >=800 & class < 900, (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),
    
    new_TEAV_vacant_props = sum(ifelse(class >=600 & class <900,  # if incentive classes were assessed at 0% (aka not taxedat all) or if the building lost its value completely without the incentive classification.
                                       0, taxed_av*eq_factor), na.rm=TRUE),
    
    new_TEAV_noExemps = sum(taxed_av*eq_factor + all_exemptions, na.rm=TRUE), # does not include abatements
    new_TEAV_noAbates = sum(taxed_av*eq_factor + exe_abate, na.rm=TRUE), # include only abatements, not other exemption types
  
    # TIF increment above the frozen EAV
    forgone_TIF_EAV = sum(fmv_tif_increment * loa * eq_factor, na.rm=TRUE),
 
    cty_PC = n(),
    # projects = n_distinct(both_ids), # mostly for industrial and commercial properties
    pins_withincents = sum(ifelse(incent_prop == 1, 1, 0)),
    fmv_incentive = sum(ifelse(incent_prop == 1, fmv, 0), na.rm = TRUE),
    #fmv_taxed =  sum(taxed_fmv, na.rm=TRUE),
    fmv_incents_inTIFs = sum(ifelse(incent_prop == 1 & final_tax_to_tif > 0, fmv, 0), na.rm = TRUE),
    fmv_inTIF = sum(fmv_inTIF, na.rm=TRUE),
    fmv_tif_increment = sum(fmv_tif_increment, na.rm=TRUE),
 #   fmv_untaxable_value = sum(untaxable_value_fmv , na.rm=TRUE),
    fmv_exemptions = sum(all_exemptions/eq_factor/loa, na.rm=TRUE),
    fmv_abatements = sum(exe_abate/eq_factor/loa, na.rm=TRUE),
    zero_bill = sum(zero_bill, na.rm=TRUE),
    fmv_residential = sum(ifelse(res_prop==1, fmv, 0), na.rm = TRUE),
    fmv_C2 = sum(ifelse(c2_prop == 1, fmv, 0), na.rm = TRUE),
    
    fmv_industrial = sum(ifelse(class %in% industrial_classes, fmv, 0), na.rm = TRUE),
    fmv_commercial = sum(ifelse(class %in% commercial_classes, fmv, 0), na.rm = TRUE),
    
    current_rate_avg = mean(tax_code_rate),
    avg_C2_bill_noexe = mean(ifelse(between(class,200,299) & all_exemptions == 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),
    avg_C2_bill_withexe = mean(ifelse(between(class,200,299) & all_exemptions > 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),
    av_taxed = sum(taxed_av, na.rm = TRUE),
    untaxable_value_av = sum(untaxable_value_av, na.rm=TRUE),
    av = sum(av),
    eav_taxed = sum(taxed_av*eq_factor), 
    eav_untaxable = sum(untaxable_value_eav, na.rm=TRUE),
    fmv = sum(fmv, na.rm=TRUE),
    pins_in_class = n(),
    all_exemptions = sum(all_exemptions),   # in EAV
    abatements = sum(exe_abate),            # in EAV
    eav_incents_inTIFs = sum(ifelse(incent_prop == 1 & in_tif == 1, taxed_eav, 0), na.rm = TRUE),

    final_tax_to_dist = sum(final_tax_to_dist), ## Amount of Total Levy
    final_tax_to_tif = sum(final_tax_to_tif),
    eq_av = sum(eq_av)) |>
  mutate(
   reducedEAV_comind_incents =  new_TEAV_noIncents - eav_taxed,
   reducedEAV_commerc_incents  = new_TEAV_noCommercIncents - eav_taxed,

   reducedEAV_indust_incents  = new_TEAV_noIndustIncents - eav_taxed,
    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties
    # Commercial and industrial assessed at 25%
    TEAV_max = eav_taxed + all_exemptions + abatements + forgone_TIF_EAV +    reducedEAV_comind_incents,

    # no exemptions or incentive classifications:
    TEAV_neither = eav_taxed + all_exemptions + reducedEAV_comind_incents,

    rate_noExe = final_tax_to_dist / new_TEAV_noExemps,
    rate_noCommercInc = final_tax_to_dist / new_TEAV_noCommercIncents,
    rate_noIndustInc = final_tax_to_dist / new_TEAV_noIndustIncents,

    rate_noAbate = final_tax_to_dist / new_TEAV_noAbates,
    rate_noInc = final_tax_to_dist / new_TEAV_noIncents ,
    rate_neither = final_tax_to_dist / TEAV_neither, 
    rate_noTIFs = final_tax_to_dist / (eav_taxed + forgone_TIF_EAV),
    rate_vacant = final_tax_to_dist / new_TEAV_vacant_props,
    rate_lowest = final_tax_to_dist / TEAV_max ,
    rate_current = final_tax_to_dist / eav_taxed,
    change_noInc = rate_current - rate_noInc,

    forgonerev_noExe = rate_noExe * all_exemptions,
    forgonerev_noAbate = rate_noAbate * (new_TEAV_noAbates - eav_taxed),
    forgonerev_noIncents = rate_noInc * (new_TEAV_noIncents - eav_taxed),
    forgonerev_noCommercIncents = rate_noInc * (new_TEAV_noCommercIncents - eav_taxed),

    forgonerev_noIndustIncents = rate_noInc* (new_TEAV_noIndustIncents - eav_taxed),


    forgone_noExe_or_Inc = rate_neither * (TEAV_neither - eav_taxed),
    forgonerev_noTIFs = rate_noTIFs * forgone_TIF_EAV,
    forgonerev_vacant = rate_vacant * (new_TEAV_vacant_props - eav_taxed),
    forgonerev_maxTEAV = rate_lowest * (TEAV_max - eav_taxed)
)

cook_ratechange |>
 mutate(across(contains("rate"), scales::percent, accuracy = .01),
        change_noInc = round(change_noInc*100, digits = 2)) |>

select("Current Composite Rate" = rate_current, 
       "Rate if Incentive Props LoA is 25%" = rate_noInc, 
       "Tax Rate Change" =  change_noInc) |> 

  flextable()


```



```{r}
#| label: tbl-EAVchange-fromIncents
#| tbl-cap: "Change in taxable EAV due to Incentive Classification"

cook_ratechange |> 
select("Commerc. EAV w/Incent" = reducedEAV_commerc_incents, 
       "Indust EAV w/ Incent" = reducedEAV_indust_incents,
       "CommInd EAV w/ Incent" = reducedEAV_comind_incents,
       "Homeowner Exemption Exempt EAV" = all_exemptions) |> 
  flextable()


```

$15 Billion EAV is tax exempt due to homeowners exemptions. All incentive properties combined only have \$4 billion EAV that is tax exempt (due to the decreased level of assessment which results in less AV, and therefore, EAV)

### Estimates for Revenue Shifted to Non-Incentive Class Properties

> Take new tax rate and apply it to new taxbase.

```{r}

table7 <- cook_ratechange |> 
  select(contains("forgonerev") ) 

table7 |> 
  flextable()
```

### Naive Revenue Shift

Uses old current tax rate and multiplies it by the new taxbase.


```{r}

burden_shift <- pin_data |>
  filter(!agency_num %in% cross_county_lines & 
           !is.na(clean_name) & clean_name!="Unincorporated" )  |>
  summarize(
    # for homestead exemptions
    mostnaive_forgone_tax_amt_exe = sum(tax_amt_exe),    
  
    # more accurate but still uses current tax rate instead of recalculated tax rate:
    forgonerev_from_exemptions  = sum(ifelse(class >= 200 & class < 300,
          (((av*eq_factor) - (taxed_av*eq_factor))) * tax_code_rate, 0), na.rm=TRUE),

   # amount of EAV from taxing an additional 15% of the AV if incentive properties didn't exist
   # using current tax rate for each property at the tax code level
    forgonerev_from_comind_incents  = sum(ifelse(class >= 600 & class < 900,
          (((taxed_av*eq_factor)*0.25 - (taxed_av*eq_factor))) * tax_code_rate, 0), na.rm=TRUE),

    forgonerev_commerc_incents  = sum(ifelse(class >= 600 & class < 900 & class %in% commercial_classes,
          (((taxed_av*eq_factor)*0.25 - (taxed_av*eq_factor))) * tax_code_rate, 0), na.rm=TRUE),

    forgonerev_indust_incents  = sum(ifelse(class >= 600 & class < 900 & class %in% industrial_classes,
         (((taxed_av*eq_factor)*0.25 - (taxed_av*eq_factor))) * tax_code_rate, 0), na.rm=TRUE),
   
    #  forgonerev_noTIFs = rate_current/100 * ,
       # TIF increment above the frozen EAV
    forgonerev_TIFs = sum(fmv_tif_increment * loa * eq_factor*tax_code_rate, na.rm=TRUE),
   
   # if incentive properties had no tax value (i.e. owners left, or fully tax exempt)
   # also equal to the current amount collected from incentive properties
     forgonerev_vacant = sum(ifelse(class >= 600 & class < 900,  taxed_av*eq_factor * tax_code_rate, 0), na.rm = TRUE)
   )|>
  rename(
    `Naive Est. Homeowner Exemptions` = mostnaive_forgone_tax_amt_exe,

    `Homeowner Exemptions` = forgonerev_from_exemptions,
    `C&I Incentives` = forgonerev_from_comind_incents,
    `Commercial Incentive`= forgonerev_commerc_incents,
    `Industrial Incentive` = forgonerev_indust_incents,
    `TIFs` = forgonerev_TIFs,
    `Incent Props become Vacant` = forgonerev_vacant
  ) 

burden_shift |> flextable()
         


```



## Change in Composite Property Tax Rate Due to Incentives and other Policy Scenarios

```{r old-muniratechange}
#| eval: false
#| include: false

muni_ratechange <- pin_data |>
  ungroup() |>
  filter(!agency_num %in% cross_county_lines) |>

  group_by(clean_name) |>
  summarize(
    classgroup_PC = n(),
    # projects = n_distinct(both_ids), # mostly for industrial and commercial properties
    pins_withincents = sum(ifelse(class >= 600 & class < 900, 1,0)),
    fmv_incentive = sum(ifelse(class >=600 & class <900, fmv, 0), na.rm = TRUE),
    #fmv_taxed =  sum(taxed_fmv, na.rm=TRUE),
    fmv_incents_inTIFs = sum(ifelse(class >=600 & class <900 & final_tax_to_tif > 0, fmv, 0), na.rm = TRUE),
    fmv_inTIF = sum(fmv_inTIF, na.rm=TRUE),
    eav_tif_increment = sum(final_tax_to_tif/tax_code_rate, na.rm=TRUE),
    fmv_tif_increment = sum(fmv_tif_increment, na.rm=TRUE),
    fmv_untaxable_value = sum(untaxable_value_fmv , na.rm=TRUE),
    fmv_exemptions = sum(all_exemptions/eq_factor/loa, na.rm=TRUE),
    fmv_abatements = sum(exe_abate/eq_factor/loa, na.rm=TRUE),
    zero_bill = sum(zero_bill, na.rm=TRUE),
    fmv_residential = sum(ifelse(class %in% c(200:399), fmv, 0), na.rm = TRUE),
    fmv_C2 = sum(ifelse(class %in% c(200:299), fmv, 0), na.rm = TRUE),
    
    fmv_industrial = sum(ifelse(class %in% industrial_classes, fmv, 0), na.rm = TRUE),
    fmv_commercial = sum(ifelse(class %in% commercial_classes, fmv, 0), na.rm = TRUE),
    
    current_rate_avg = mean(tax_code_rate),
    avg_C2_bill_noexe = mean(ifelse(between(class,200,299) & all_exemptions == 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),
    avg_C2_bill_withexe = mean(ifelse(between(class,200,299) & all_exemptions > 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),
    av_taxed = sum(taxed_av, na.rm = TRUE),
    untaxable_value_av = sum(untaxable_value_av, na.rm=TRUE),
    av = sum(av),
    eav_taxed = sum(taxed_av*eq_factor, na.rm=TRUE), 
    eav_untaxable = sum(untaxable_value_eav, na.rm=TRUE),
    eav_max = sum(fmv*loa*eq_factor, na.rm=TRUE),
    fmv = sum(fmv, na.rm=TRUE),
    pins_in_class = n(),
    all_exemptions = sum(all_exemptions),   # in EAV
    abatements = sum(exe_abate),            # in EAV
    eav_incents_inTIFs = sum(ifelse(class >=600 & class <=900 & in_tif == 1, eav, 0), na.rm = TRUE),
    #  loa = mean((loa*classgroup_PC ) / sum(classgroup_PC), na.rm=TRUE),
    final_tax_to_dist = sum(final_tax_to_dist),
    final_tax_to_tif = sum(final_tax_to_tif),
    eav = sum(eav),
    new_TEAV_noIncents = sum(ifelse(class >=600 & class <900,
                                    (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),
    # 
    # new_TEAV_noC6 = sum(ifelse( class >=600 & class <700, 
    #                             (taxed_av*eq_factor/loa)*0.25 , taxed_av*eq_factor)),
    # new_TEAV_noC7 = sum(ifelse(class >=700 & class <800,
    #                            (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor)),
    # new_TEAV_noC8 = sum(ifelse(class >=800 & class <900, (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor)),
    
    new_TEAV_vacant_noIncents = sum(ifelse(class >=600 & class <900,
                                           0, taxed_av*eq_factor), na.rm=TRUE)) |> 
  mutate(
    
    new_TEAV_noExemps = eav_taxed + all_exemptions, # does not include abatements
    new_TEAV_noAbates = eav_taxed + abatements, # include only abatements, not other exemption types
    
    # amount of EAV from taxing an additional 15% of the AV if incentive properties didn't exist
    forgone_EAV_incent = #class_group %in% incentive_majorclasses,
      #incent_prop == "Incentive", 
      new_TEAV_noIncents - eav_taxed,
    
    # TIF increment above the frozen EAV
  #  forgone_TIF_EAV = fmv_tif_increment * loa * eq_factor
    ) |>
  #cbind(table_cook) |>
  mutate(
    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties
    # Commercial and industrial assessed at 25%
    TEAV_max = eav_taxed + all_exemptions + abatements + eav_tif_increment + forgone_EAV_incent,
    
    # no exemptions or incentive classifications:
    TEAV_neither = eav_taxed + all_exemptions + forgone_EAV_incent,
    
    rate_noExe = final_tax_to_dist / new_TEAV_noExemps * 100,
    rate_noAbate = final_tax_to_dist / new_TEAV_noAbates * 100,
    rate_noInc = final_tax_to_dist / new_TEAV_noIncents * 100,
    rate_neither = final_tax_to_dist / TEAV_neither * 100, 
    rate_noTIFs = final_tax_to_dist / (eav_taxed + eav_tif_increment) * 100,
    rate_vacant = final_tax_to_dist / new_TEAV_vacant_noIncents* 100,
    rate_lowest = final_tax_to_dist / TEAV_max * 100,
    # rate_noC6 = levy / new_TEAV_noC6 * 100,
    # rate_noC7 = levy / TEAV_noC7 * 100,
    # rate_noC8 = levy / TEAV_noC8 * 100,
    rate_current = final_tax_to_dist / eav_taxed * 100,
    change_noInc = rate_current - rate_noInc,
    change_neither = rate_current - rate_neither,
    change_noTIF = rate_current - rate_noTIFs,
    change_noExe = rate_current - rate_noExe,
    change_vacant = rate_current - rate_vacant,
    change_lowest = rate_current - rate_lowest
  )  |>
     mutate(across(contains("rate_"), round, digits = 2))
```

## Tables - Difference in Composite Tax Rates

```{r}
#| label: tbl-Table8-munialtrates-frompinlevel
#| tbl-cap: "**Composite Tax Rate Change** from hypothetical scenario of taxing incentive property at 25% of their FMV instead of 10% of their FMV."


muni_ratechange_full <- muni_ratechange |> 
  select(clean_name, rate_current, rate_noInc, change_noInc) |> 
  arrange(desc(change_noInc) )


muni_count <- n_distinct(muni_ratechange_full$clean_name)
no_incents <- n_distinct(muni_ratechange_full$clean_name[muni_ratechange_full$change_noInc < 0.0001])
median = round(muni_count/2)
median_5 = c( (median-2) : (median+2) )
bottom_5 = c( (muni_count-4) : muni_count )

table8 <- muni_ratechange_full|>
  slice(c(1:5, median_5)) 

table8  |>
  mutate(across(is.numeric, scales::percent, accuracy = 0.01) ) |>
  flextable() |> 
  border_remove() |>
  hline_top() |>
  hline(i = c(5,10)) |>
  set_header_labels(clean_name = "Municipality", rate_current = "Current Comp.\nTax Rate", rate_noInc = "Tax Rate if No\nIncent. Class.",
                    change_noInc = "Rate Change") |>
  bold(i = 8) |>
  add_footer_lines(paste0("There are ", no_incents,  " municipalities that do not use incentives and have a majority of their taxable EAV within Cook County."), top = FALSE) |>
  set_table_properties( layout = "autofit") |>
    align(j = 2:4, align = "right", part = c("all"))

```

```{r}
#| label: fig-comptaxratechange-incents
#| fig-cap: "Hypothetical change in composite tax rate if all value that currently receives incentive classification became assessed at 25%."


muni_ratechange |> 
  select(clean_name, change_noInc) |> 
 mutate(change_noInc = round(change_noInc*100, digits = 1)) |>
  filter(clean_name != "Unincorporated") |>
  left_join(nicknames) |>
  full_join(muni_shp, by = c("agency_name" = "AGENCY_DESC")) |>
  ggplot(aes(fill = change_noInc)) +
  geom_sf(aes(geometry = geom), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    low = "lightblue", high = "#1e478e",
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value = "gray50",
    n =4,
    name = "Tax Rate Change\nin Percentage Pts") +
  
   geom_sf_pattern(data = no_incentives, aes(geometry = geom), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = "white", alpha = .5, color = 'gray40')
```

```{r}
#| label: tbl-Table9-munialtrates-frompinlevel
#| tbl-cap: "**Composite Tax Rate Change** Maximum increase in composite property tax rate due to incentives. (five largest and five median). Scenario from if properties that currently receive incentives lost all their value (i.e. most extreme scenario for if we didn't have incentives and nobody used the land so it had no value.)"


muni_ratechange_full <- muni_ratechange |> 
  mutate(change_vacant=rate_vacant-rate_current)|>
  select(clean_name, rate_current, rate_vacant, change_vacant) |> 
  arrange(desc(change_vacant))


muni_count <- n_distinct(muni_ratechange_full$clean_name)
no_incents <- n_distinct(muni_ratechange_full$clean_name[abs(muni_ratechange_full$change_vacant) < 0.0001])
median = round(muni_count/2)
median_5 = c( (median-2) : (median+2) )
bottom_5 = c( (muni_count-4) : muni_count )

table9 <- muni_ratechange_full|>
  slice(c(1:5, median_5)) 

table9  |>
  mutate(across(is.numeric, scales::percent, accuracy = 0.01) ) |>
  flextable() |> 
  border_remove() |>
  hline_top() |>
  hline(i = c(5,10)) |>
  set_header_labels(clean_name = "Municipality", rate_current = "Current Comp.\nTax Rate", rate_vacant = "Tax Rate if No\nIncent. Class.",
                    change_vacant = "Rate Change") |>
  bold(i = 8) |>
  add_footer_lines(paste0("There are ", no_incents,  " municipalities that do not use incentives and have a majority of their taxable EAV within Cook County."), top = FALSE) |>
  set_table_properties( layout = "autofit") |>
    align(j = 2:4, align = "right", part = c("all"))

```


```{r}
#| label: fig-comptaxratechange-gheplusincent
#| fig-cap: "Hypothetical change in composite tax rate if all value that currently receives incentive classification became assessed at 25% AND exempt EAV from GHE became taxable."
#| eval: false
#| include: false


muni_ratechange |> 
  select(clean_name, change_neither) |> 
 mutate(change_neither = round(change_neither*100, digits = 1)) |>
  filter(clean_name != "Unincorporated") |>
  left_join(nicknames) |>
  full_join(muni_shp, by = c("agency_name" = "AGENCY_DESC")) |>
  
  ggplot(aes(fill = change_neither)) +
  geom_sf(aes(geometry = geom), color = "black") +
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  scale_fill_steps2(
    low = "black", high = "brown",
    show.limits=TRUE,
    nice.breaks=FALSE,
    na.value = "gray50",
    n = 4,
    name = "Tax Rate Change\nin Percentage Pts") +
  geom_sf_pattern(data = no_incentives, aes(geometry = geom), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = "white", alpha = .5, color = 'gray40')
```

```{r}
#| label: fig-ordereddotplot-amountofchange
#| fig-cap: "Ordered by amount of change in the composite tax rate. "
#| fig-height: 6
#| fig-width: 6
#| column: margin

# as a dot graph ## 
# create order of dots
order <- muni_ratechange |>  
  as_tibble() |> 
  filter(change_noInc > 0) |> 
  arrange(change_noInc) |>
  select(clean_name, change_noInc) |>
  distinct()


# make dot graph
muni_ratechange |> 
  filter(change_noInc > .005) |>
  filter(change_noInc > 0) |>

  select(clean_name, rate_current, rate_noInc, change_noInc) |> 
  distinct() |>
  pivot_longer(c("rate_current", "rate_noInc"), 
               names_to = "type", values_to = "tax_rate") |> 
  left_join(order) |>
    filter(change_noInc > 0 ) |>
  mutate(clean_name = if_else(clean_name == "Mc Cook", "McCook", clean_name)) |>
  ggplot(aes(x = tax_rate, y= reorder(clean_name, change_noInc)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), size=3, pch = 21, color = "black" )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer(palette="Paired", labels = c("Incentives", "No Incentives"), direction = 1) +
  labs(title = "Difference in Composite Tax Rate if Assessed at 25%",
       subtitle = "Ordered by Comp. Rate Change", x = "Composite Tax Rate (%)", y = "")
```

```{r}
#| label: fig-dotplot-bycurrentrate-frompinlevel
#| fig-cap: "Change in tax rate if incentive properties were assessed at 25% of their FMV instead of their reduced level of assessment. Only shows municipalities that had more than 1/2 percentage point change in tax rate."


# as a dot graph ## 
# create order of dots
order <- muni_ratechange |>  
  as_tibble() |> 
 filter(change_noInc >0) |>
  arrange(rate_current) |>
  select(clean_name, rate_current)

# make dot graph
muni_ratechange |> 
 filter(change_noInc > .005) |>
  select(clean_name, rate_current, rate_noInc) |> 
  distinct() |>
  arrange(rate_current) |>
  pivot_longer(c("rate_current", "rate_noInc"), 
               names_to = "type", values_to = "tax_rate") |> 
  inner_join(order) |>
  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), size=3, pch = 21, color = "black" 
             )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_x_continuous(labels = scales::percent)+
  scale_fill_brewer(palette="Paired", labels = c("Incentives", "No Incentives"), direction = 1)+

  
  labs(title = "Difference in Composite Tax Rate if Assessed at 25%",
       subtitle = "Ordered by Current Composite Tax Rate", x = "Composite Tax Rate (%)", y = "")
```



```{r}
#| label: fig-dotplot4dots
#| fig-cap: "Multiple tax rate scenarios. Only shows municipalities that had more than 1/2 percentage point change in tax rate."
#| fig-height: 6
#| fig-width: 6
#| eval: false
#| include: false

# as a dot graph ## 
# create order of dots
order <- muni_ratechange |>  
  as_tibble() |> 
  filter(change_noInc > 0) |>
  arrange(rate_current) |>
  select(clean_name, rate_current) |> distinct()

# make dot graph
muni_ratechange |> 
  filter(change_noInc > .005) |>
  select(clean_name, rate_current, rate_noInc, #rate_neither, 
         rate_vacant, rate_noExe) |> 
  distinct() |>
  arrange(rate_current) |>
  pivot_longer(c("rate_current", 
                 "rate_noInc", 
                 "rate_vacant", 
                 "rate_noExe"# ,
                #  "rate_neither"
), 
               names_to = "type", values_to = "tax_rate") |> 
  inner_join(order) |>
  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), size=3, pch = 21, color = "black" )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
legend.position = "bottom",
plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer(palette = "RdGy",
                    labels = c("Current Rate", 
                             #  "No Exemps & LoA is 25%",
                               "No Exemptions", 
                               "No Incentives:\nLoA 25%",
                               "Incententive Classification\nLoA = 0%"
                    ), 
                    direction = -1)+
    scale_x_continuous(labels = scales::percent)+

  labs(title = "Composite Tax Rate Scenarios",
       subtitle = "Ordered by Current Composite Tax Rate", 
       x = "Composite Tax Rate (%)", y = "")
```

```{r}
#| label: fig-dotplot4dots-allmunis
#| fig-cap: "Multiple taxrate scenarios. All municipalities that had a taxrate change from altering the level of assessment for incentive class properties."
#| fig-height: 12
#| fig-width: 6
# as a dot graph ## 
# create order of dots
order <- muni_ratechange |>  
  as_tibble() |> 
  filter(change_noInc > 0) |>
  arrange(rate_current) |>
  select(clean_name, rate_current) |> distinct()

# make dot graph
muni_ratechange |> 
  filter(change_noInc > 0) |>
  select(clean_name, rate_current, rate_noInc, #rate_neither, 
         rate_vacant, rate_noExe) |> 
  distinct() |>
  arrange(rate_current) |>
  pivot_longer(c("rate_current", 
                 "rate_noInc", 
                 "rate_vacant", 
                 "rate_noExe"# ,
                #  "rate_neither"
), 
               names_to = "type", values_to = "tax_rate") |> 
  inner_join(order) |>
  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), size=3, pch = 21, color = "black" )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
legend.position = "bottom",
plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer(palette = "RdGy",
                    labels = c("Current Rate", 
                             #  "No Exemps & LoA is 25%",
                               "No Exemptions", 
                               "No Incentives:\nLoA 25%",
                               "Incententive Classification\nLoA = 0%"
                    ), 
                    direction = -1) +
    scale_x_continuous(labels = scales::percent)+

  labs(title = "Composite Tax Rate Scenarios",
       subtitle = "Ordered by Current Composite Tax Rate", 
       x = "Composite Tax Rate (%)", y = "")
```

```{r}
#| label: fig-Figure9-dotplot3dots
#| fig-cap: "**Figure 9 in Incentive Report.** Only shows municipalities that had more than 1/2 percentage point change in tax rate."
#| fig-height: 6
#| fig-width: 6


# as a dot graph ## 
# create order of dots
order <- muni_ratechange |>  
  as_tibble() |> 
  filter(change_noInc > .005) |>
  arrange(rate_current) |>
  select(clean_name, rate_current) |> distinct()

# make dot graph
figure9_data <- muni_ratechange |> 
  filter(change_noInc > .005) |>
  select(clean_name, rate_current, rate_noInc, rate_vacant) |> 
  distinct() |>
  arrange(rate_current) |>
  pivot_longer(c("rate_current", 
                 "rate_noInc", 
                 "rate_vacant"
  ), 
  names_to = "type", values_to = "tax_rate") |> 
  inner_join(order) 

figure9_data|>
  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), size=3, pch = 21, color = "black" )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    legend.position = "bottom",
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg
  )+
  scale_fill_brewer(palette = "Greys", direction = -1,
                    labels = c("Current Rate", 
                               "No Incentive Classes: \nLoA = 25%",
                               "Incentive Classification\nLoA = 0%") 
  )+
    scale_x_continuous(labels = scales::percent)+
  labs(title = "Composite Tax Rate Scenarios",
       subtitle = "Ordered by Current Composite Tax Rate", 
       x = "Composite Tax Rate (%)", y = "")
```

```{r}
#| eval: false
#| include: false

library(ggrepel)
# make dot graph
muni_ratechange |> 
  filter( clean_name =="Markham" ## | clean_name == "Matteson"
          ) |>
  select(clean_name, rate_current, rate_noInc, rate_neither, rate_vacant, rate_noExe) |> 
  distinct() |>
  arrange(rate_current) |>
  pivot_longer(c("rate_current", "rate_noInc", 
                  "rate_vacant", "rate_noExe",
                  "rate_neither"), 
               names_to = "type", values_to = "tax_rate") |> 
  inner_join(order) |>
  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+
  geom_line(aes(group = clean_name))+ 
  geom_point(aes(fill=type), size=3, pch = 21, color = "black" )+
  geom_text_repel(aes(x=tax_rate),
                  hjust = 0,
                  vjust = -1,
                  min.segment.length = Inf,
                  size = 3,
                  angle = 30,
                  label = c("Current Rate", "If LoA 25%" ,
                            "If Vacant" , "If no Exemps",
                            "No Exemps & LoA is 25%") )+
  theme_minimal() + 
  theme( 
    legend.title = element_blank(),
    plot.title.position = "plot",
    plot.background = element_rect(fill='transparent', color=NA),
    legend.position = "none"  )+
  scale_fill_manual(
    values = c("#BDD7E7", "#6BAED6", "#3182BD", "#EFF3FF",  "#08519C")) +
  scale_x_continuous(labels = scales::percent)+
  scale_y_discrete(
    expand = expand_scale(mult = c(.1, 1)) ,
           #        limits = c("Markham")#, breaks = "Markham"
                   )  + 
  labs(
    x = "Composite Tax Rate (%)", 
    y = "")
```


```{r}
#| label: tbl-incentivePINs2022-revshifted
#| tbl-cap: "PIN level tax savings due to incentive classification. Also can be viewed as the shifted tax burden from PINs with incentive classification in 2022 to all other non-incentive PINs. Sorted from largest tax bill savings to smallest bill reduction."
#| layout-nrow: 2
#| eval: false
#| include: false

### Revenue Shifting - experimental sums

pin_data |> 
  filter(naive_rev_forgone > 0) |> 
  select(pin, class, fmv, naive_rev_forgone, untaxable_incent_eav, taxed_eav, everything()) |>
    mutate(across(is.numeric, round, digits = 0))


pin_data |>
  filter(naive_rev_forgone > 0) |> 
  summarize(fmv = sum(fmv),                                                   
            naive_rev_forgone = round(sum(naive_rev_forgone)),                      
            untaxable_incent_eav = sum(untaxable_incent_eav),                     
            taxed_eav = sum(taxed_eav)) |>
  mutate(across(is.numeric, scales::comma, accuracy = 1))

```

## Export Tables

```{r}
library(readxl)

# tablelist <- list(
#   "Muni Stats" = munilevel,
#   "Muni Rate Change" = muni_ratechange,
#   
#   "Cook Sums" = table_cook,
#   "Cook Class Sums" = cty_MC_table,
#   "Cook Rate Change" = cook_ratechange
# )

#writexl::write_xlsx(tablelist, "Output/calculations_report_content_20240927.xlsx")
# 
# readme <- c(
# 
#   "Muni names and share of FMV with incentive property",
#   "Muni names and share of FMV with incentive property",
#   "Muni names and share of FMV with incentive property",
#   
#   "Muni Share_all includes all municipalities and their share of FMV with incentives out of all FMV in the municipality.",
#   "IndustShare_all is same as Indust_share but includes all munis.",
#   "CommercShare_all is same as Commerc_share but includes all munis.") %>% 
#   as.data.frame()

if(params$year == 2022){
paper_tables <- list(
  # "README"= readme,
  # Table 2 is from yearly trends.  Incentive FMV by year
  # Figure 1 is from yearly trends.  Bar Chart - Aggregate Incentive FMV by year
  # Figure 2 is from yearly trends.  Line Chart - Indexed Incentive FMV
  # Figure 3 is from yearly trends.  Line Chart - FMV for single and multi family vs C&I FMV
  # Figure 5. Line Chart - Increase in FMV indexed to 2011 for Select property types


  "Table 3" = commerc_top10,
  "Table 4" = indust_top10,
  # Table 5 is from yearly trends file

  "Figure 4" = figure7,
  "Figure 5A" = figure7B,
  "figure 5B" = figure7C,
  # Table 6 is from yearly trends file
  
  "Table 8" = table8, # if assessment ratio was 25% instead of 10%
  "Table 9" = table9, # if properties with incentives were vacant (i.e. 0 FMV)

 "Figure 9 data" = figure9_data,   # dot plot 
   # Figure X is from yearly trends. FMV Growth by Incent Class and Land Use
   # Table X is from yearly trends. Table for figure X
   # Table X+1 is from yearly trends. Change from vacant land to incentive PIN
   # Table X+2. Regression models
  "Muni Share_all" = muni_incent_share,
  "IndustShare_all" = indust_share_full,
  "Commerc_Share_all" = commerc_share_full
# "All Cook Rate Scenarios" = cook_ratechange
)

writexl::write_xlsx(paper_tables, "../Output/incentive_report_tables_2025_03_25.xlsx")
}
```

