---
title: "The Use and Effects of Homestead Exemptions in Cook County"
---

```{r setup, warning=FALSE, message=FALSE}
#| code-fold: TRUE


library(tidyverse)
library(ptaxsim)
library(DBI)
library(httr)
library(jsonlite)
library(glue)
library(sf)
library(DT)

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

muni_shp <- read_sf("https://gis.cookcountyil.gov/traditional/rest/services/politicalBoundary/MapServer/2/query?outFields=*&where=1%3D1&f=geojson")


nicknames <- readxl::read_excel("../Necessary_Files/muni_shortnames.xlsx")
```

## Cook County's Use of Homestead Exemptions

### Figure 1 or 2?. Exemption Use

```{r}

muni_sums <- read_csv("../Output/ptaxsim_muni_level_2006to2023.csv") %>% 
  left_join(nicknames)

muni_cl_sums <- read_csv("../Output/ptaxsim_muni_class_summaries_2006to2023.csv") %>% 
  left_join(nicknames)
```

```{r}

year_examples <- c(2023)

for(i in year_examples){
  tbl <- muni_cl_sums %>% 
  filter(year == i) %>%
  group_by(year) %>% 
  summarize(AV = sum(muni_c_av), 
            EAV = sum(muni_c_eav), 
            Eq_AV = sum(muni_c_equalized_av),
            'Taxed EAV' = sum(muni_c_current_taxable_eav),
            'All Exemptions' = sum(muni_c_all_exemptions), 
            'GHE' = sum(muni_c_exe_homeowner), 
            'Senior Exemp.' = sum(muni_c_exe_senior), 
            'Freeze Exemp.' = sum(muni_c_exe_freeze), 
            'PINs in Muni' = sum(muni_c_pins_in_muni),
            'PINs with Exemptions' = sum(muni_c_has_HO_exemp))  %>% 
  pivot_longer(cols = c(AV:'PINs with Exemptions'), 
               names_to = "Totals", values_to = "Values") 
print(tbl)
}



```

### Figure 3. Percent Exempt

Total value of exemptions as a share of residential EAV, 2021

```{r}
year_examples <- c(2021, 2023)

for(i in year_examples){

median_exempt <- muni_sums %>%
  filter(year==i)%>%
  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv
) %>% 
  select(pct_fmv_exempt)

midpoint = scales::percent(median(median_exempt$pct_fmv_exempt), accuracy = 0.01)

print(muni_sums %>%
  filter(year==i)%>%
  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv ) %>%
    mutate(agency_name = ifelse(agency_name == "TOWN CICERO", "CITY OF CICERO", agency_name) ) %>%
 full_join(muni_shp, by = c("agency_name" = "AGENCY_DESC")) %>%
  ggplot(aes(fill = pct_fmv_exempt)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  theme_void()+ 
  labs(title = paste0(i), 
       subtitle =  "Exempt FMV / Municipality FMV",
       caption = sprintf("The municipality median is %s", midpoint)) +
    theme_void() + 
  theme(axis.ticks = element_blank(), 
        axis.text = element_blank())+
   scale_fill_steps2(high = "darkblue", low = "black",  mid = "beige",
                       n.breaks = 7, show.limits=TRUE,
                       na.value = NA,
                    nice.breaks = FALSE,
                   midpoint = median(median_exempt$pct_fmv_exempt),
                        name = "% FMV \nthat is exempt", label = scales::percent))
}
```


```{r}
year_examples <- c(2021, 2023)

for(i in year_examples){

median_exempt <- muni_sums %>%
  filter(year==i)%>%
  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv
) %>% 
  select(pct_fmv_exempt)

midpoint = scales::percent(median(median_exempt$pct_fmv_exempt), accuracy = 0.01)

print(muni_sums %>%
  filter(year==i)%>%
  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv ) %>%
    mutate(agency_name = ifelse(agency_name == "TOWN CICERO", "CITY OF CICERO", agency_name) ) %>%
 full_join(muni_shp, by = c("agency_name" = "AGENCY_DESC")) %>%
  ggplot(aes(fill = pct_fmv_exempt)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  theme_void()+ 
  labs(title = paste0(i), 
       subtitle =  "Exempt FMV / Municipality FMV",
       caption = sprintf("The municipality median is %s", midpoint)) +
    theme_void() + 
  theme(axis.ticks = element_blank(), 
        axis.text = element_blank())+
   scale_fill_steps(high = "darkblue", low = "pink",
                       n.breaks = 5, show.limits=TRUE,
                    limits = c(0, 0.35),
                       na.value = "gray50",
                    nice.breaks = FALSE,
                        name = "% FMV \nthat is exempt", label = scales::percent))
}
```


### Figure 4. Exempt Tax Base in Cook County

```{r}
#| label: tbl-exemptiontotals_for2023
#| tbl-cap: "Total Exempt EAV in 2023 in the City of Chicago and the Suburbs"


muni_cl_sums %>% 
  filter(year == 2023) %>% 
  select(clean_name, muni_c_exe_homeowner:muni_c_exe_vet_dis) %>%
  mutate(clean_name = ifelse(is.na(clean_name), "Unincorporated", clean_name),
    Geography = ifelse(clean_name == "Chicago", "City", "Suburbs"),
         Geography = ifelse(is.na(clean_name), "Unincorporated", Geography),
         Geography = factor(Geography, levels = c("Suburbs", "City", "Unincorporated"))) %>%
  group_by(Geography) %>%
  summarize("GHE" = sum(muni_c_exe_homeowner, na.rm=TRUE),
            "Senior Homestead" = sum(muni_c_exe_senior, na.rm=TRUE),
            "Senior Freeze" = sum(muni_c_exe_freeze, na.rm=TRUE),
            "Other Exemptions" = sum(muni_c_exe_longtime_homeowner+muni_c_exe_disabled+muni_c_exe_vet_returning+ muni_c_exe_vet_dis_lt50 + muni_c_exe_vet_dis_50_69+muni_c_exe_vet_dis_ge70)) %>%
  pivot_longer(cols = c(`GHE`:`Other Exemptions`), names_to = "Type" ) %>%
   mutate(Type = factor(Type, levels = c("GHE", "Senior Homestead", "Senior Freeze", "Other Exemptions" 
                                         #"Senior Freeze", "Senior Homestead", "GHE"
                                        )
                                        )) %>%
  ggplot(aes(x=Type, y = value/1000000000, fill = Geography
             )) +
  
  geom_col(
           position = "dodge" 
          ) + 
  theme_minimal() +
  labs(title = "Exempt EAV in Cook County, Tax Year 2023", 
       subtitle = "by Type and Geography", 
       y = "EAV (Billions)", x = "Exemption Type") + 
  scale_y_continuous() +
  scale_fill_manual(values = c("blue3", "deepskyblue3", "gray"), )
```

*Exempt Tax Base in Cook County by exemption type and geography, for tax year 2021*




![](images/clipboard-1115901107.png)



### Figure 5. Value of residential exemptions by type in Cook County, 2006 - 2023

```{r}
muni_cl_sums %>% 
  select(year, muni_c_exe_homeowner:muni_c_exe_vet_dis) %>%
  group_by(year) %>%
  summarize("GHE" = sum(muni_c_exe_homeowner, na.rm=TRUE),
            "Senior Homestead" = sum(muni_c_exe_senior, na.rm=TRUE),
            "Senior Freeze" = sum(muni_c_exe_freeze, na.rm=TRUE),
            "Other Exemptions" = sum(muni_c_exe_longtime_homeowner + muni_c_exe_disabled + muni_c_exe_vet_returning+ muni_c_exe_vet_dis_lt50 + muni_c_exe_vet_dis_50_69+muni_c_exe_vet_dis_ge70, na.rm = T)) %>%
  pivot_longer(cols = c(`GHE`:`Other Exemptions`), names_to = "Type" ) %>%
  mutate(Type = factor(Type, levels = c(#"GHE", "Senior Homestead", "Senior Freeze", 
                                        "Other Exemptions", "Senior Freeze", "Senior Homestead", "GHE"))) %>%
  ggplot(aes(x=year, y = value/1000000000, fill = Type)) +
  
  geom_bar( stat = "identity" ) + 
  theme_minimal() +
  labs(title = "Residential Exempt EAV in Cook County", 
       subtitle = "by Type and Geography, 2006-2023", 
       y = "EAV (Billions)", x ="",
       caption = "Values are NOT adjusted to current dollars") +
  scale_fill_manual(values = c("chartreuse2",  "darksalmon", "brown2", "blue4" )) +
                    scale_x_continuous(breaks = c(2006, 2010, 2015, 2020, 2023))
```


![](images/clipboard-3650281473.png)



## Effect on Composite Tax Rates

```{r}
#| label:  tbl-updated-code-taxrates
#| tbl-cap: "Table 1: Actual and Hypothetical Composite Tax Rates if GHE $0 in select Years"
#| results: asis

muni_sums <- read_csv("../Output/ptaxsim_muni_level_2006-2022.csv") %>% 
  left_join(nicknames)

muni_comp_rates <- muni_sums %>%
  select(year, clean_name, muni_current_rate_avg)

muni_cl_sums <- left_join(muni_cl_sums, muni_comp_rates, by = c("year", "clean_name"))

year_examples <- c(2021, 2022)

for(i in year_examples){
  
tbl <- muni_cl_sums %>%  
      filter(year == i) %>% 
      group_by(clean_name) %>% 
      summarize(muni_current_rate_avg = first(muni_current_rate_avg),
            muni_levy = sum(muni_c_final_tax_to_dist),
            muni_current_taxable_eav = sum(muni_c_current_taxable_eav),
            muni_exe_homeowner = sum(muni_c_exe_homeowner)) %>%
      mutate(        
            new_comp_muni_rate = muni_levy/(muni_current_taxable_eav + muni_exe_homeowner),
        new_comp_muni_rate = new_comp_muni_rate, 
        cur_comp_muni_rate = muni_current_rate_avg / 100,
        rate_change = cur_comp_muni_rate - new_comp_muni_rate) %>%
          
      select(clean_name, rate_change, cur_comp_muni_rate, new_comp_muni_rate, muni_levy) %>% 
    arrange(desc(rate_change)) %>%
     datatable(rownames = FALSE,
              colnames = c('Municipality' = 'clean_name', 
                           'Composite Tax Rate Change'='rate_change', 
                           'Current Comp. Rate' = 'cur_comp_muni_rate', 
                           'Hypothetical Rate' = 'new_comp_muni_rate', 
                           'Composite Levy' = 'muni_levy')
              ) %>%
    formatPercentage(c('Current Comp. Rate', 'Hypothetical Rate', 
                       'Composite Tax Rate Change'
    ), 
    digits = 2) %>%  
  formatCurrency('Composite Levy', digits = 0) 
   print(htmltools::tagList(tbl)) 
}

# 
# 
# MuniLevel_CompRates <- muni_sums %>% 
#   filter(year == 2021) %>%
#   select(clean_name, cur_comp_muni_rate, new_comp_muni_rate, tif_share, zero_bills, final_tax_to_dist) %>%
#   mutate(cur_comp_muni_rate = cur_comp_muni_rate/100,
# new_comp_muni_rate = new_comp_muni_rate / 100 ,
# rate_change = cur_comp_muni_rate - new_comp_muni_rate) %>%
#   select(clean_name, rate_change, cur_comp_muni_rate, new_comp_muni_rate, final_tax_to_dist) %>% arrange(desc(rate_change))
# 
# datatable(MuniLevel_CompRates, rownames = FALSE,
#           colnames = c('Municipality' = 'clean_name', 
#                        'Composite Tax Rate Change'='rate_change', 
#                        'Current Comp. Rate' = 'cur_comp_muni_rate', 
#                        'Hypothetical Rate' = 'new_comp_muni_rate', 
#                        #'%Rev to TIF' = 'tif_share', 'Count of $0 Tax Bills' = 'zero_bills', 
#                        'Composite Levy' = 'final_tax_to_dist'),
#           caption = "Table 1: 2021 Current and Hypothetical Composite Tax Rates if GHE $0") %>%
#   formatPercentage(c('Current Comp. Rate', 'Hypothetical Rate', 
#                     # '%Rev to TIF'
#                     'Composite Tax Rate Change'
#                      ), 
#                    digits = 2) %>%  
#   formatCurrency('Composite Levy', digits = 0)
```


```{r}
#| label:  tbl-updated-code-taxrates-2023file
#| tbl-cap: "Table 1: Actual and Hypothetical Composite Tax Rates if GHE $0 in select Years from new summary file"
#| results: asis

muni_sums <- read_csv("../Output/ptaxsim_muni_level_2006to2023.csv")

muni_comp_rates <- muni_sums %>%
  select(year, clean_name, muni_current_rate_avg)

#muni_cl_sums <- left_join(muni_cl_sums, muni_comp_rates, by = c("year", "clean_name"))

year_examples <- c(2021, 2023)

for(i in year_examples){
  
tbl <- muni_cl_sums %>%  
      filter(year == i) %>% 
      group_by(clean_name) %>% 
      summarize(muni_current_rate_avg = first(muni_current_rate_avg)/100,
            muni_levy = sum(muni_c_final_tax_to_dist),
            muni_current_taxable_eav = sum(muni_c_current_taxable_eav),
            muni_exe_homeowner = sum(muni_c_exe_homeowner)) %>%
      mutate(        
            new_comp_muni_rate = muni_levy/(muni_current_taxable_eav + muni_exe_homeowner),
        new_comp_muni_rate = new_comp_muni_rate, 
        cur_comp_muni_rate = muni_current_rate_avg,
        rate_change = cur_comp_muni_rate - new_comp_muni_rate) %>%
          
      select(clean_name, rate_change, cur_comp_muni_rate, new_comp_muni_rate, muni_levy) %>% 
    arrange(desc(rate_change)) %>%
     datatable(rownames = FALSE,
              colnames = c('Municipality' = 'clean_name', 
                           'Composite Tax Rate Change'='rate_change', 
                           'Current Comp. Rate' = 'cur_comp_muni_rate', 
                           'Hypothetical Rate' = 'new_comp_muni_rate', 
                           'Composite Levy' = 'muni_levy')
              ) %>%
    formatPercentage(c('Current Comp. Rate', 'Hypothetical Rate', 
                       'Composite Tax Rate Change'
    ), 
    digits = 2) %>%  
  formatCurrency('Composite Levy', digits = 0) 
   print(htmltools::tagList(tbl)) 
}

```


```{r}

cross_county_lines <- c("030440000", "030585000", "030890000", "030320000", "031280000",
                        "030080000", "030560000", "031120000", "030280000", "030340000",
                        "030150000","030050000", "030180000","030500000", "031210000")

eq2022 <- 2.9237 #example of eq factor proliferation

incentive_majorclasses <- c("6", "7A", "7B", "8A", "8B")

commercial_classes <- c(401:435, 490, 491, 492, 496:499,
                        500:535,590, 591, 592, 597:599, 
                        700:799,
                        800:835, 891, 892, 897, 899)  

industrial_classes <- c(480:489,493, 
                        550:589, 593,
                        600:699,
                        850:890, 893
                        )

ptax_pins <- read_csv("../Output/Dont_Upload/0_Joined_PIN_data_2023.csv")


ptax_pins <- ptax_pins %>% 
  mutate(class_1dig = str_sub(class, 1,1),
         class_group = case_when(
          (class_1dig == 5 & class %in% commercial_classes) ~ "5A",
          (class_1dig == 5 & class %in% industrial_classes) ~ "5B",
          class_1dig == 7 &  class < 742 ~ "7A",
          class_1dig == 7 &  class >= 742 ~ "7B",
          (class_1dig == 8 & class %in% commercial_classes ) ~ "8A",
          (class_1dig == 8 & class %in% industrial_classes ) ~ "8B",
          TRUE ~ as.character(class_1dig))) %>%
  mutate(
    # taxing district revenue = taxable eav * tax rate so rearrange the formula:
    taxed_eav = final_tax_to_dist / tax_code_rate*100,
    
    total_value_eav = (final_tax_to_dist + final_tax_to_tif)/ tax_code_rate * 100 + all_exemptions + abatements,
    
    exempt_eav_inTIF = ifelse(in_tif == 1, all_exemptions, 0),
    
    exempt_eav = all_exemptions + abatements,
    
    taxed_av =  taxed_eav / eq2022, # current value that taxing agencies can tax for their levies
    
    ## taxable AV = equalized assessed value net TIF increments, gross exemptions. 
    ## Used for calculating untaxable value further below
   # taxable_av = (final_tax_to_dist / tax_code_rate *100 + all_exemptions + abatements)/ eq2022, 
  
    # taxable_eav_fromincents =  ifelse(class >=600 & class < 900, taxable_av * eq2022, 0),

      ## untaxable value = exempt EAV from abatements and exemptions + TIF increment
    untaxable_value_eav = all_exemptions + abatements + 
      ## TIF increment EAV above frozen EAV, which becomes TIF revenue
      (final_tax_to_tif /  tax_code_rate*100) +
      
      ## difference between 25% and reduced level of assessment for incentive class properties. Excludes TIF increment when calculating the difference! 
      ifelse(between(class, 600, 899), 
             (taxed_av/loa*0.25 - taxed_av)*eq2022, 0),
   
    untaxable_incent_eav = ifelse(between(class, 600, 899), 
             (taxed_av/loa*0.25 - taxed_av)*eq2022, 0),
   
    #  manually adjust untaxable value of class 239 properties
    untaxable_value_eav = ifelse(class == 239, 
                                 equalized_av-taxed_eav, untaxable_value_eav), 
    
    untaxable_value_av = untaxable_value_eav / eq2022,
    untaxable_value_fmv = untaxable_value_av / loa,

    exempt_fmv = exempt_eav / eq2022 / loa, 
    
    fmv_inTIF = ifelse(in_tif==1, av/loa, 0),
   
    fmv_tif_increment = ifelse(final_tax_to_tif > 0, 
                               ((final_tax_to_tif / (tax_code_rate/100)) / eq2022 ) / loa, 0),
    fmv_incents_inTIF = ifelse(between(class, 600, 899) & in_tif == 1, 
                               fmv, 0),
    fmv_incents_tif_increment = ifelse(between(class, 600, 899) & final_tax_to_tif > 0 , 
                               ((final_tax_to_tif / (tax_code_rate/100)) / eq2022 ) / loa, 0),
    naive_rev_forgone =  untaxable_incent_eav * tax_code_rate/100) %>%
  select(tax_code, class, pin, fmv,
         untaxable_value_fmv, fmv_inTIF, fmv_tif_increment, fmv, total_billed, final_tax_to_dist, final_tax_to_tif, tax_code_rate, eav, equalized_av, av, everything())
```


```{r}
#| eval: false

muni_ratechange <- ptax_pins %>%
    mutate(class = as.numeric(class)) %>%         # Allows for joining later
    select(-c(propclass_1dig:av.y)) %>%
  filter(!clean_name  %in% c("Frankfort", "Homer Glen",  "Oak Brook", "East Dundee", "University Park",  "Bensenville", "Hinsdale", "Roselle", "Deer Park", "Deerfield")) %>% 
 # filter(!agency_num %in% cross_county_lines) %>%
  group_by(clean_name) %>%
  summarize(
    classgroup_PC = n(),
    # projects = n_distinct(both_ids), # mostly for industrial and commercial properties
    pins_withincents = sum(ifelse(class >= 600 & class < 900, 1,0)),
    fmv_incentive = sum(ifelse(class >=600 & class <900, fmv, 0), na.rm = TRUE),
    #fmv_taxed =  sum(taxed_fmv, na.rm=TRUE),
    fmv_incents_inTIFs = sum(ifelse(class >=600 & class <900 & final_tax_to_tif > 0, fmv, 0), na.rm = TRUE),
    fmv_inTIF = sum(ifelse(final_tax_to_tif > 0, fmv, 0), na.rm=TRUE),
    fmv_tif_increment = sum(fmv_tif_increment, na.rm=TRUE),
    fmv_untaxable_value = sum(untaxable_value_fmv , na.rm=TRUE),
    fmv_exemptions = sum(all_exemptions/eq2022/loa, na.rm=TRUE),
    fmv_abatements = sum(exe_abate/eq2022/loa, na.rm=TRUE),
    zero_bill = sum(zero_bill, na.rm=TRUE),
    fmv_residential = sum(ifelse(class %in% c(200:399), fmv, 0), na.rm = TRUE),
    fmv_C2 = sum(ifelse(class %in% c(200:299), fmv, 0), na.rm = TRUE),
    
    fmv_industrial = sum(ifelse(class %in% industrial_classes, fmv, 0), na.rm = TRUE),
    fmv_commercial = sum(ifelse(class %in% commercial_classes, fmv, 0), na.rm = TRUE),
    
    current_rate_avg = mean(tax_code_rate),
    avg_C2_bill_noexe = mean(ifelse(between(class,200,299) & all_exemptions == 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),
    avg_C2_bill_withexe = mean(ifelse(between(class,200,299) & all_exemptions > 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),
    av_taxed = sum(taxed_av, na.rm = TRUE),
    untaxable_value_av = sum(untaxable_value_av, na.rm=TRUE),
    av = sum(av),
    eav_taxed = sum(taxed_av*eq2022), 
    eav_untaxable = sum(untaxable_value_eav, na.rm=TRUE),
eav_tif_increment = sum(final_tax_to_tif/tax_code_rate, na.rm=TRUE),
    eav_max = sum(fmv*loa*eq2022, na.rm=TRUE),
    fmv = sum(fmv, na.rm=TRUE),
    pins_in_class = n(),
    all_exemptions = sum(all_exemptions),   # in EAV
    abatements = sum(exe_abate),            # in EAV
    eav_incents_inTIFs = sum(ifelse(class >=600 & class <=900 & in_tif == 1, eav, 0), na.rm = TRUE),
    final_tax_to_dist = sum(final_tax_to_dist),
    final_tax_to_tif = sum(final_tax_to_tif),
    eav = sum(eav),
    new_TEAV_noIncents = sum(ifelse(class >=600 & class <900,
      (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022), na.rm=TRUE),

    new_TEAV_noC6 = sum(ifelse( class >=600 & class <700, 
(taxed_av*eq2022/loa)*0.25 , taxed_av*eq2022)),
    new_TEAV_noC7 = sum(ifelse(class >=700 & class <800,
(taxed_av*eq2022/loa)*0.25, taxed_av*eq2022)),
    new_TEAV_noC8 = sum(ifelse(class >=800 & class <900, (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022)),
    
    new_TEAV_vacant_noIncents = sum(ifelse(class >=600 & class <900,
                                       0, taxed_av*eq2022))) %>%
  mutate(

new_TEAV_noExemps = eav_taxed + all_exemptions, # does not include abatements
new_TEAV_noAbates = eav_taxed + abatements, # include only abatements, not other exemption types

# amount of EAV from taxing an additional 15% of the AV if incentive properties didn't exist
forgone_EAV_incent = #class_group %in% incentive_majorclasses,
  #incent_prop == "Incentive", 
  new_TEAV_noIncents - eav_taxed) %>%
  #cbind(table_cook) %>%
  mutate(
    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties
    # Commercial and industrial assessed at 25%
    TEAV_max = eav_taxed + all_exemptions + abatements + eav_tif_increment + forgone_EAV_incent,
    
    # no exemptions or incentive classifications:
    TEAV_neither = eav_taxed + all_exemptions + forgone_EAV_incent,
    
    rate_noExe = final_tax_to_dist / new_TEAV_noExemps * 100,
    rate_noAbate = final_tax_to_dist / new_TEAV_noAbates * 100,
    rate_noInc = final_tax_to_dist / new_TEAV_noIncents * 100,
    rate_neither = final_tax_to_dist / TEAV_neither * 100, 
    rate_noTIFs = final_tax_to_dist / (eav_taxed + eav_tif_increment) * 100,
    rate_vacant = final_tax_to_dist / new_TEAV_vacant_noIncents* 100,
    rate_lowest = final_tax_to_dist / TEAV_max * 100,
    # rate_noC6 = levy / new_TEAV_noC6 * 100,
    # rate_noC7 = levy / TEAV_noC7 * 100,
    # rate_noC8 = levy / TEAV_noC8 * 100,
    rate_current = final_tax_to_dist / eav_taxed * 100,
    change_noInc = rate_current - rate_noInc,
    change_neither = rate_current - rate_neither,
    change_noTIF = rate_current - rate_noTIFs,
    change_noExe = rate_current - rate_noExe,
    change_vacant = rate_current - rate_vacant,
    change_lowest = rate_current - rate_lowest
  )  %>%
     mutate(across(contains("rate_"), round, digits = 2)) %>%
     mutate(across(contains("change_"), round, digits = 2))

write_csv(muni_ratechange, "../Output/muni_ratechange_2023.csv")
```


```{r readin-muniratechange}
muni_rate_change <- read_csv("../Output/muni_ratechange_2023.csv")

muni_ratechange %>% 
  select(clean_name, starts_with("change_")) %>% 
  DT::datatable(rownames = FALSE)

```

### Figure 6. Composite property tax rates with and without homestead exemptions, tax year 2021

### Table 1. Change in composite property tax rates due to exemptions, tax year 2021.

```{r}
#| code-fold: true


muni_sums <- read_csv("../Output/ptaxsim_muni_level_2006-2021.csv") %>% 
  filter(year == 2021) %>% 
  left_join(nicknames)
```

```{r}
MuniLevel_CompRates <- muni_sums %>% 
  select(clean_name, cur_comp_muni_rate, new_comp_muni_rate, tif_share, zero_bills, final_tax_to_dist) %>%
  mutate(current_rate_avg = cur_comp_muni_rate/100,
new_comp_muni_rate = new_comp_muni_rate / 100 ,
rate_change = current_rate_avg - new_comp_muni_rate) %>%
  select(clean_name, rate_change, current_rate_avg, new_comp_muni_rate, final_tax_to_dist) %>% arrange(desc(rate_change))

datatable(MuniLevel_CompRates, rownames = FALSE,
          colnames = c('Municipality' = 'clean_name', 'Composite Tax Rate Change'='rate_change', 'Current Comp. Rate' = 'current_rate_avg', 'Hypothetical Rate' = 'new_comp_muni_rate', 
                       #'%Rev to TIF' = 'tif_share', 'Count of $0 Tax Bills' = 'zero_bills', 
                       'Composite Levy' = 'final_tax_to_dist'),
          caption = "Table 1: Current and Hypothetical Composite Tax Rates if GHE $0") %>%
  formatPercentage(c('Current Comp. Rate', 'Hypothetical Rate', 
                    # '%Rev to TIF'
                    'Composite Tax Rate Change'
                     ), 
                   digits = 2) %>%  
  formatCurrency('Composite Levy', digits = 0)
```

### Figure 7. Map of Spatial Patterns in Composite Tax Rate Change 

Change in composite tax rate if exempt EAV was added back to the the taxable tax base (i.e. if there were no exemptions).




### Figure 7 Alternate. Composite Tax Rates for Municipalities

![](images/Composite_Rate_Change.png)

## Effect on Tax Burdens


### Figure 8. Dolton example of Share of levy paid by property type

*CMAP used a donut chart, we will use a bar chart that represents 100% on the x a axis.*
```{r}
MC_sums <- read_csv("../Output/ptaxsim_muni_MC_2006-2021.csv") %>% 
 # rename_all(~str_replace_all(., "muni_mc_","")) %>%
  filter(year == 2021)  %>% 
  left_join(nicknames)

MC_burden <- MC_sums %>% 
  mutate(hyp_taxable_eav = current_taxable_eav + exe_homeowner,
         class_taxes_current = current_taxable_eav * (cur_comp_muni_rate/100)
     ) %>%
  group_by(clean_name) %>%
  mutate(muni_eav = sum(eav),
         muni_levy = sum(final_tax_to_dist),
       hyp_muni_taxableEAV = sum(new_taxable_eav)
  ) %>%
  ungroup() %>%
  mutate(new_comp_rate = muni_levy / hyp_muni_taxableEAV,
         class_taxes_hyp = hyp_taxable_eav * (new_comp_rate),
         pct_eav = eav / muni_eav,
         # pct_taxburden_current = total_bill_current / muni_levy,
         # pct_taxburden_ghe0 = new_taxable_eav / muni_levy,
         pct_taxburden_current = class_taxes_current / muni_levy,
         pct_taxburden_ghe0 = class_taxes_hyp / muni_levy,
         burden_shift = (pct_taxburden_current - pct_taxburden_ghe0)*100)


current_burden_c2 <- MC_burden %>% 
  filter(major_class_code == 2) %>% 
  select(clean_name, pct_eav, burden_shift,  pct_taxburden_current, pct_taxburden_ghe0) %>% arrange(pct_eav)

MC_burden %>% filter(clean_name == "Dolton") %>% select(major_class_code, pct_taxburden_current, pct_taxburden_ghe0) %>% arrange(desc(pct_taxburden_current))
```


### Table 3. 

Difference in taxbills for those that do and do not claim homeowner exemption


### Table 4.

Municipalities with the largest and smallest reductions  in tax base (as a share of residential EAV due to exemptions) and median property values



### Figure 10. Tax Burden Shift from Current GHE

Share of municipal property tax levy paid by Class 2 properties with and without homestead exemptions, tax year 2021


![](images/clipboard-2721715046.png)

### Table 2. Change in share of property tax burden

_Table 2: Change in the share of property tax burden due to exemptions for single-family, multi-family, and commercial and industrial properties, tax year 2021_

```{r}
#| code-fold: true



datatable(current_burden_c2, rownames = FALSE,
          colnames = c('Municipality' = 'clean_name', 'Burden Shift, Pct Pt Change' = 'burden_shift', "C2 EAV/Muni EAV" = 'pct_eav', 'Current Tax Burden\nC2 Tax Collected / Muni Levy' = 'pct_taxburden_current', "Hypothetical Tax Burden\nHyp. C2 Tax Collected / Muni Levy" = 'pct_taxburden_ghe0'),
          caption = "Table 2: Current Share of Taxable EAV and Share of Levy Paid by Class 2 Properties"
           ) %>%
  formatPercentage(c(2,4,5), digits = 2) %>%
  formatRound(c(3), digits = 2)


```

#### Figure 10 Follow up. Current Tax Burden Map

```{r}
#| code-fold: true


MC_burden %>%
     # mutate(burden_current = ifelse(burden_current>1, 1, burden_current)) %>%

     filter(major_class_code == 2) %>%
  mutate(agency_name = ifelse(agency_name == "TOWN CICERO", "CITY OF CICERO", agency_name) ) %>%
  full_join(muni_shp, by = c("agency_name" = "AGENCY_DESC")) %>%

  ggplot(aes(fill = pct_taxburden_current)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  theme_void() + 
  theme(axis.ticks = element_blank(), axis.text = element_blank())+
  # scale_fill_gradientn(
   scale_fill_stepsn(colors = c("#ffffcc","#a1dab4" ,"#41b6c4","#2c7fb8", "#253494"),
                        show.limits=TRUE, 
                     limits = c(0,1),
                     na.value = "gray70",
                     n.breaks = 6,
                        name = "Burden with \nExemptions", 
                     labels = scales::percent
                     
                    )+
  labs(title = "Current share of property tax burden", 
       subtitle = "for Class = 2 Property Types")
```


### Figure 11. Zero Dollar Bills

```{r}
#muni_cl_sums %>% group_by(year) %>% ggplot()+ geom_bar(aes(x=year, fill=))
```

