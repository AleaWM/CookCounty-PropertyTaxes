---
title: "Burden Shift from Incentive Properties in [xx]" 
format: 
  html:
    df-print: paged
    code-fold: true
    code-download: true
    toc: true
    toc-location: left
    fig-cap-location: top
---

# Preliminary Setup

Load packages (which I think we can cut down). Cut down on digits?

```{r setup, warning = FALSE, message=FALSE}

library(tidyverse)

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

options(scipen = 999)

options(digits = 2)

```

Read in and merge data.

```{r}

nicknames <- readxl::read_excel("./Necessary_Files/muni_shortnames.xlsx")

MuniLevel <- read_csv("./Output/ptaxsim_muni_level_2006-2021.csv") %>%
  filter(year == 2021) %>%
  left_join(nicknames)

MC_sums <- read_csv("./Output/ptaxsim_muni_MC_2006-2021.csv") %>% 
  filter(year == 2021) %>% 
  left_join(nicknames)

eqfact21 <- 3.0027 #2021 CC Equalization Factor

```

Calculate rates, old tax base, and new tax base.

```{r, warning = FALSE}

incentive_sums <- MC_sums %>%
  group_by(clean_name) %>%
  mutate(current_rate = sum(total_bill_current)/sum(current_taxable_eav)) %>%
  ungroup() %>%
  mutate(
    incentive = ifelse(major_class_code %in% c("6A","6B", "6C", "7A","7B","7C","8"), "Incentive", "Non-Incentive")
    ) %>%
  #group_by(clean_name, incentive) %>%
  summarize(av = sum(av),
            eav = sum(eav),
            pins_in_muni = sum(pins_in_muni),
           # final_tax_to_dist = sum(final_tax_to_dist),
            current_taxable_eav = sum(current_taxable_eav),
           totTax = sum(total_bill_current), #changed to total bill current!
            current_rate,
            .by = c(clean_name, incentive)) %>%
  mutate(new_av = ifelse(incentive == "Incentive", av*2.5, av),
    new_taxable_eav = ifelse(incentive ==  "Incentive", new_av*eqfact21, current_taxable_eav)) %>%
  distinct()


```

Generate tax rates.

```{r}

incentive_sums <- incentive_sums %>% 
  group_by(clean_name) %>% 
  mutate(totmunilevy = sum(totTax),
         cur_muni_taxable_eav = sum(current_taxable_eav),
         new_muni_taxable_eav = sum(new_taxable_eav)) %>%
  ungroup() %>%
  mutate(new_comp_rate = totmunilevy / new_muni_taxable_eav * 100)

```

Let's figure out what this part of the code does!

HEY WHY CAN'T I USE is.na() in line 102????
Because it should be NA, not is.na().

```{r}

burden <- incentive_sums %>% 
  mutate(
    group_taxes_hyp = new_taxable_eav * (new_comp_rate),
    group_taxes_cur = current_taxable_eav * current_rate,
  #  pct_eav = eav / cur_muni_taxable_eav,
    pct_taxburden_current = (group_taxes_cur / totmunilevy)*100,
    pct_taxburden_no_incent = group_taxes_hyp / totmunilevy,
    burden_shift = round((pct_taxburden_current - pct_taxburden_no_incent), digits =2),
  avgPinIncent = ifelse(incentive == "Incentive", (new_av - av)/pins_in_muni, NA
)) %>% arrange(avgPinIncent)

burden
```
