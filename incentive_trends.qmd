---
title: "Incentive Classification Use Descriptive Statistics"
subtitle: "PIN Level of Analysis"
author: "MVH & AWM"
date: "June 12, 2024"
format: 
  html:
    embed-resources: true
    theme: lumen
    code-fold: true
    code-line-numbers: true
    code-overflow: wrap
    toc: true
    toc-location: left
knitr: 
  opts_chunk:
    warning: true
    message: false
---

# Data

```{r setup}
#| include: false

library(tidyverse)
library(glue)
library(DT)
library(flextable)

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       line_spacing = 1,
                       big.mark = ",",
                       )

options(DT.options = list())

# read in class summaries at the tax code level

df <- read_csv("./Output/ptaxsim_TC_Class_summaries_2006-2021.csv")

df %>%
  group_by(year) %>%
  summarize(n = n())

cde <- read_csv("./Necessary_Files/class_dict_expanded.csv") %>%
  rename(class = class_code)

df_all <- left_join(df, cde, by = "class")

# filter to industrial and commercial from 2012 to 2022

ind_comm_cc <- df_all %>%
  filter(between(class, 500, 899)) %>%
  filter(between(year, 2011, 2021)) %>%
  rename(land_use = Alea_cat)

#write_csv(ind_comm_cc, "pin_count_tables.csv")

```

```{r data_setup}

ind_comm_cc <- ind_comm_cc |>
  mutate(year = as.factor(year),
         land_use = as.factor(land_use),
         incent_prop = as.factor(incent_prop),
         agency_num = as.factor(agency_num),
         class_1dig = as.factor(class_1dig))

ind_comm_cc_lags <- ind_comm_cc |>
  group_by(year, land_use, incent_prop) |>
  arrange(year) |>
  mutate(
    proptype_pincount = n(),
    proptype_av = sum(TC_C_AV),
            n_incent = sum(ifelse(incent_prop == "Incentive", 1, 0)),
            n_nonincent = sum(ifelse(incent_prop == "Non-Incentive", 1, 0)),
            av_incent = sum(ifelse(incent_prop == "Incentive", TC_C_AV, 0)),
            av_nonincent = sum(ifelse(incent_prop == "Non-Incentive", TC_C_AV, 0))) |>
  
  
  # mutate(
  #   pincount_lag = lag(proptype_pincount, 1),
  #   av_lag = lag(proptype_av, 1),
  #   n_incent_lag = lag(n_incent, 1),
  #   n_nonincent_lag = lag(n_nonincent, 1),
  #   av_incent_lag = lag(av_incent, 1),
  #   av_nonincent_lag = lag(av_nonincent, 1)
  # )

ind_comm_cc_trends <- ind_comm_cc_lags |>
  group_by(year, land_use, incent_prop) |>
  reframe(pin_perc = (proptype_pincount - pincount_lag)/pincount_lag,
          av_perc = (proptype_av - av_lag)/av_lag) |>
  filter(year != 2011) |>
  distinct()
  

```

# County-Wide

```{r}
#| label: tbl-cooktotals
#| tbl-cap: "Commercial and Industrial PINs in Cook County (2012 - 2022)"
#| tbl-subcap: "Total, Incentive Class, and Non-Incentive Class PIN Counts"

year_pins <- ind_comm_cc %>%
  group_by(year) %>%
  summarize(n_year = n())

table <- ind_comm_cc %>%
  group_by(year) %>%
  group_by(year, land_use) %>%
  summarize(
    proptype_pincount = n(),
            n_incent = sum(ifelse(incent_prop == "Incentive", 1, 0)),
            n_nonincent = sum(ifelse(incent_prop == "Non-Incentive", 1, 0))) %>%
  mutate(pct_incent = n_incent / proptype_pincount) %>%
  #left_join(year_pins, by = "year") %>%
  arrange(desc(year)) %>%
  mutate(year = as.character(year))




flextable(table) %>% 
  set_header_labels(year = "Year", land_use = "Land Use", proptype_pincount = 'Total', n_incent = "Incent. Class", n_nonincent = "No Incent. Class",
                    pct_incent = "% Incent. Class") %>%
  set_table_properties( layout = "autofit", width = .75)

```

## Municipality

# Incentive Classification Use Over Time

## County-Wide

## Triad

## Municipality

# Outliers & Oddities

## Outliers

## Incentive Classifications & TIFs

## Introduction of Major Class 8

# Multiverse Analysis

```{r}

df_1 <- df %>%
  left_join(cde, by = "class") |>
  mutate(fmv = av_clerk/assessment_ratio) |>
  group_by(year, class) |>
  reframe(n = n(), class_year_fmv = sum(fmv)) |>
  group_by(year, class) |>
  arrange(year) |>
  mutate(base_year_fmv = first(class_year_fmv)) |>
  mutate(base_year_n = first(n)) |>
  ungroup() |>
  mutate(fmv_growth = class_year_fmv/base_year_fmv,
         n_growth = n/base_year_n)

```
