---
title: "Incentive Classification Use Descriptive Statistics"
subtitle: "PIN Level of Analysis"
author: "MVH & AWM"
date: "June 12, 2024"
format: 
  html:
    embed-resources: true
    theme: lumen
    code-fold: true
    code-line-numbers: true
    code-overflow: wrap
    toc: true
    toc-location: left
    df-print: paged
knitr: 
  opts_chunk:
    warning: true
    message: false
---

# Data

```{r setup}
#| include: false

library(tidyverse)
library(glue)
library(DT)
library(flextable)

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       line_spacing = 1,
                       big.mark = ",",
                       )

options(DT.options = list())

# read in class summaries at the tax code level

#df <- read_csv("./Output/ptaxsim_TC_Class_summaries_2006-2021.csv")
df <- read_csv("./Output/ptaxsim_muni_class_summaries_2006-2022.csv")
df %>%
  group_by(year) %>%
  summarize(n = n())

cde <- read_csv("./Necessary_Files/class_dict_expanded.csv") %>%
  rename(class = class_code)

df_all <- left_join(df, cde, by = "class")

# filter to industrial and commercial from 2012 to 2022

ind_comm_cc <- df_all %>%
  filter(between(class, 500, 899)) %>%
  #filter(between(year, 2011, 2021)) %>%
  rename(land_use = Alea_cat)

#write_csv(ind_comm_cc, "pin_count_tables.csv")

```

```{r data_setup}

ind_comm_cc <- ind_comm_cc |>
  mutate(year = as.factor(year),
         land_use = as.factor(land_use),
         incent_prop = as.factor(incent_prop),
        # agency_num = as.factor(agency_num),
         class_1dig = as.factor(class_1dig))

ind_comm_cc_lags <- ind_comm_cc |>
  ungroup() |>
  arrange(year) |>

  group_by(year, land_use, incent_prop) |>
  summarize(
    proptype_pincount = sum(pins_in_muni, na.rm=TRUE),
    proptype_av = sum(av, na.rm=TRUE),
            n_incent = sum(ifelse(incent_prop == "Incentive", pins_in_muni, 0), na.rm = TRUE),
                           n_nonincent = sum(ifelse(incent_prop == "Non-Incentive", pins_in_muni, 0), na.rm=TRUE),
            av_incent = sum(ifelse(incent_prop == "Incentive", av, 0), na.rm=TRUE),
            av_nonincent = sum(ifelse(incent_prop == "Non-Incentive", av, 0), na.rm=TRUE)) |>
    mutate(
    pincount_lag = plm::lag(proptype_pincount, 1),
    av_lag = plm::lag(proptype_av, 1),
    n_incent_lag = plm::lag(n_incent, 1),
    n_nonincent_lag = plm::lag(n_nonincent, 1),
    av_incent_lag = plm::lag(av_incent, 1),
    av_nonincent_lag = plm::lag(av_nonincent, 1)
  )

ind_comm_cc_trends <- ind_comm_cc_lags |>
  group_by(year, land_use, incent_prop) |>
  reframe(pin_perc = (proptype_pincount - pincount_lag)/pincount_lag,
          av_perc = (proptype_av - av_lag)/av_lag) |>
  filter(year != 2011) |>
  distinct()
  

```

# County-Wide

```{r}
#| label: tbl-cooktotals
#| tbl-cap: "Commercial and Industrial PINs in Cook County (2012 - 2022)"

# #| tbl-subcap: "Total, Incentive Class, and Non-Incentive Class PIN Counts"

year_pins <- ind_comm_cc %>%
  group_by(year) %>%
  summarize(n_year = sum(pins_in_muni))

table <- ind_comm_cc %>%
  group_by(year) %>%
  group_by(year, land_use) %>%
  summarize(
    proptype_pincount = sum(pins_in_muni),
            n_incent = sum(ifelse(incent_prop == "Incentive", pins_in_muni, 0)),
            n_nonincent = sum(ifelse(incent_prop == "Non-Incentive", pins_in_muni, 0))) %>%
  mutate(pct_incent = n_incent / proptype_pincount) %>%
  #left_join(year_pins, by = "year") %>%
  arrange(desc(year)) %>%
  mutate(year = as.character(year))




flextable(table) %>% 
  set_header_labels(year = "Year", land_use = "Land Use", proptype_pincount = 'Total', n_incent = "Incent. Class", n_nonincent = "No Incent. Class",
                    pct_incent = "% Incent. Class") %>%
  set_table_properties( layout = "autofit", width = .75)

```

## Municipality

# Incentive Classification Use Over Time

## County-Wide

## Triad

## Municipality

# Outliers & Oddities

## Outliers

## Incentive Classifications & TIFs

## Introduction of Major Class 8

# Multiverse Analysis

```{r}

df_1 <- df_all %>%
  mutate(fmv = av/assess_ratio) |>
  group_by(class, year) |>
  summarize(n = sum(pins_in_muni), 
            class_year_fmv = sum(fmv, na.rm=TRUE),

           #   levy_idx = total_final_levy / (total_final_levy[year == "2011"]),
  #av_idx = av / (av[year == "2011"]),
  ) |>
 # group_by(year, class) |>
 # arrange(year) |>mutate() |>
 # mutate() |>
 # ungroup() |>
  mutate(            
   # base_year_fmv = class_year_fmv[year == "2006"],
        base_year_fmv = class_year_fmv[year == min(year)],
            base_year_n = n[year == min(year)],

            #base_year_n = n[year == "2006"],
            fmv_growth = class_year_fmv/base_year_fmv,
         n_growth = n/base_year_n
       ) |>
  filter(class != 0)

df_1
```

```{r}

df_1 <- df_all %>%
  mutate(fmv = av/assess_ratio) |>
  group_by(class, year) |>
  summarize(n = sum(pins_in_muni), 
            class_year_fmv = sum(fmv, na.rm=TRUE),

           #   levy_idx = total_final_levy / (total_final_levy[year == "2011"]),
  #av_idx = av / (av[year == "2011"]),
  ) |>
 # group_by(year, class) |>
 # arrange(year) |>mutate() |>
 # mutate() |>
 # ungroup() |>
  mutate(            
   # base_year_fmv = class_year_fmv[year == "2006"],
        base_year_fmv = class_year_fmv[year == min(year)],
            base_year_n = n[year == min(year)],

            #base_year_n = n[year == "2006"],
            fmv_growth = class_year_fmv/base_year_fmv,
         n_growth = n/base_year_n
       ) |>
  filter(class != 0)

df_1
```
```{r}

df_1 <- df_all %>%
  mutate(fmv = av/assess_ratio) |>
  group_by(Alea_cat, incent_prop, year) |>
  summarize(n = sum(pins_in_muni), 
            class_year_fmv = sum(fmv, na.rm=TRUE),

  ) |>

  mutate(            
   # base_year_fmv = class_year_fmv[year == "2006"],
        base_year_fmv = class_year_fmv[year == min(year)],
            base_year_n = n[year == min(year)],

            #base_year_n = n[year == "2006"],
            fmv_growth = class_year_fmv/base_year_fmv,
         n_growth = n/base_year_n
       ) 

df_1 %>% select(year, Alea_cat, incent_prop, fmv_growth, n_growth) %>% filter(year == 2022)
```
