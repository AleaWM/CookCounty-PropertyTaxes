---
title: "Assessor Neighborhoods"
author: "AWM"
format: 
  html:
    code-fold: true
---

# Using Assessor Neighborhoods

```{r setup, warning = FALSE, message = FALSE}
library(tidyverse)
library(ptaxsim)
library(DBI)
library(httr)
library(jsonlite)
library(glue)
library(sf)

knitr::opts_chunk$set(warning = FALSE, message = FALSE)


#NBHs<- read_csv("Assessor_-_Neighborhood_Boundaries.csv")

NBHs <- read_sf("https://datacatalog.cookcountyil.gov/resource/pcdw-pxtg.geojson")
```

## Aggregating pin data to new shapes!

**AA-SS-BBB-PPP-UUUU**

-   **AA** is the **AREA** number (sequential township)

-   **SS** is the **SUBAREA** number (section)

-   **BBB** is the **BLOCK** number

-   **PPP** is the **PARCEL** number

-   **UUUU** is the **UNIT** number for condominiums and leaseholds (zeros in this portion of the PIN indicate non-condo and non-leasehold PINs)

-   ::: {.callout-note appearance="minimal"}
    Assessor neighborhoods are 5 digits: first 2 for the township, last 3 are for the neighborhood within the township. These do not resemble the neighborhoods that many of us may think of but are instead of groups of properties with similar characteristics **(that are taxed in similar rates? double check)**
    :::

Pull pins, neighborhood codes, property class, assessment triad, and other variables from Parcel Universe using the GET() command. Pulls data from online API, not PTAXSIM database. I am using this instead of PTAXSIM because neighborhood codes are not included in PTAXSIM tables: Tax codes are the smallest unit of measurement. **NOTE: Tax codes and neighborhoods do not appear to share borders?**

```{r eval = FALSE}
base_url <- "https://datacatalog.cookcountyil.gov/resource/tx2p-k2g9.json"

nbh_pins <- GET(
  base_url,
  query = list(
    tax_year = 2021,
 #   ward_num = 49,
   # property_city = "ROGERS PARK",
    `$select` = paste0(c("pin", "pin10", 
                         "class", 
                         "township_code", "township_name",
                         "nbhd_code", "census_puma_geoid",
                         #"lat","lon", 
                         "triad_name" ,
                          "env_flood_fema_sfha","env_flood_fema_data_year",
                         "env_flood_fs_risk_direction", "env_flood_fs_factor"
                         ),
   collapse = ","),
   `$limit` = 500000000L
  )
)

nbh_pins2 <- fromJSON(rawToChar(nbh_pins$content))
head(nbh_pins2)

nbh_pins2 %>% filter(env_flood_fema_sfha== TRUE) %>% head()
```

29,545 pins are in SFHA flood plains. Neat.

```{r eval = FALSE}

ptaxsim_db_conn <- DBI::dbConnect(RSQLite::SQLite(), "./ptaxsim.db/ptaxsim-2021.0.4.db")


# 
# # Load pins
# t_pins <- DBI::dbGetQuery(
#   ptaxsim_db_conn,
#   "
#   SELECT DISTINCT pin
#   FROM pin
#   "
# )

t_pins <- nbh_pins2$pin
t_years <- 2021



# Set exemption value
t_pin_dt_new_exe <- lookup_pin(t_years, t_pins)

# t_pin_dt_new_exe <- t_pin_dt_new_exe %>% 
#   mutate(area = str_sub(pin, 1, 2), # township
#        subarea = str_sub(pin, 3, 4), 
#        block = str_sub(pin, 5, 7),
#        parcel = str_sub(pin, 8, 10),
#        unit = str_sub(pin, 11, 14) # zeros are non-condos
#        
# )

head(t_pin_dt_new_exe)


# stores tax_code with what is returned by lookup_tax_code(year,pin)
t_pin_dt_new_exe[, tax_code := lookup_tax_code(year, pin)]
  

# sums up total exemptions for each tax code for each year
t_tc_sum_new_exe <- t_pin_dt_new_exe[
    , .(exe_total = sum(exe_homeowner + exe_senior + exe_freeze + exe_longtime_homeowner + 
         exe_disabled + exe_vet_returning + exe_vet_dis_lt50 + exe_vet_dis_50_69 + exe_vet_dis_ge70 + exe_abate)),
    by = .(year, tax_code)
  ]


t_pin_dt_new_exe <- left_join(t_pin_dt_new_exe, nbh_pins2, by = c("pin", "class"))


# sums up total exemptions for each tax code for each year
nbh_sum_new_exe <- t_pin_dt_new_exe[
    , .(exe_total = sum(exe_homeowner + exe_senior + exe_freeze + exe_longtime_homeowner + 
         exe_disabled + exe_vet_returning + exe_vet_dis_lt50 + exe_vet_dis_50_69 + exe_vet_dis_ge70 + exe_abate)),
    by = .(year, nbhd_code)
  ]
  
# sums up total exemptions for each tax code for each year
nbh_tc_sums_exe <- t_pin_dt_new_exe[
    , .(exe_total = sum(exe_homeowner + exe_senior + exe_freeze + exe_longtime_homeowner + 
         exe_disabled + exe_vet_returning + exe_vet_dis_lt50 + exe_vet_dis_50_69 + exe_vet_dis_ge70 + exe_abate)),
    by = .(year, nbhd_code, tax_code)
  ]
  
nbh_sum_new_exe <- nbh_sum_new_exe %>% 
  mutate(township = str_sub(nbhd_code,1,2),
         nbhd = str_sub(nbhd_code, 3,5))



```

```{r eval = FALSE}
taxbills_current <- tax_bill(
    year_vec = t_years,
    pin_vec = t_pins, simplify = FALSE
  )

#sapply(taxbills_current, function(x) sum(is.na(x)))


# 1,825,816 billed properties with 14-digit PINs  
pin14_bills_current <- taxbills_current %>%
  group_by(tax_code, class, pin) %>%
  
  mutate(total_bill = final_tax_to_dist + final_tax_to_tif) %>% # from each taxing agency
  
  summarize(total_billed = sum(total_bill, na.rm = TRUE), # total on someone's property tax bill
            av = first(av),
            eav = first(eav),
            pin_count_in_parcel = n(),
            final_tax_to_dist = sum(final_tax_to_dist, na.rm = TRUE),
            final_tax_to_tif = sum(final_tax_to_tif, na.rm = TRUE),
            tax_amt_exe = sum(tax_amt_exe, na.rm = TRUE), # revenue lost due to exemptions
            tax_amt_pre_exe = sum(tax_amt_pre_exe, na.rm = TRUE), # total rev before all exemptions
            tax_amt_post_exe = sum(tax_amt_post_exe, na.rm = TRUE), # total rev after all exemptions
            rpm_tif_to_cps = sum(rpm_tif_to_cps, na.rm = TRUE), # not used
            rpm_tif_to_rpm = sum(rpm_tif_to_rpm, na.rm=TRUE), # not used
            rpm_tif_to_dist = sum(rpm_tif_to_dist, na.rm=TRUE), # not used
            tif_share = mean(tif_share, na.rm=TRUE), # not used
  )  %>% 
  mutate(propclass_1dig = str_sub(class, 1, 1))

rm(taxbills_current)


pin14_bills_current <- left_join(pin14_bills_current, nbh_pins2,)
head(pin14_bills_current)

pin14_bills_current <- pin14_bills_current %>% 
  rename(count_taxing_agencies = pin_count_in_parcel)



TC_taxrates <- DBI::dbGetQuery(
  ptaxsim_db_conn,
  glue_sql("
  SELECT DISTINCT tax_code_num, tax_code_rate
  FROM tax_code
  WHERE year = 2021
  ",
  .con = ptaxsim_db_conn
  )
)



Current_Taxrates_per_nbh_TC <- pin14_bills_current %>% 
 left_join(TC_taxrates, by = c("tax_code" = "tax_code_num")) %>%
  mutate(nbhd_3 = str_sub(nbhd_code, 3,5)) %>%

  group_by(nbhd_code, nbhd_3, tax_code, tax_code_rate) %>%
  filter(!is.na(nbhd_code)) %>%
  
  summarize(dist_rev_needed = sum(final_tax_to_dist, na.rm = TRUE), # amount billed by munis with current exemptions in place
            nonTIF_EAV_post_exemps = sum(final_tax_to_dist/(tax_code_rate/100), na.rm = TRUE),
            TIF_increment_EAV = sum(final_tax_to_tif/(tax_code_rate/100), na.rm=TRUE),  
            Exempt_EAV = sum(tax_amt_exe/(tax_code_rate/100), na.rm=TRUE), 
            Total_EAV = sum((tax_amt_exe + final_tax_to_dist + final_tax_to_tif)/(tax_code_rate/100), na.rm = TRUE)) %>%

  mutate(tax_rate_current = dist_rev_needed/nonTIF_EAV_post_exemps,
         nonTIF_EAV_pre_exemps = nonTIF_EAV_post_exemps + Exempt_EAV,
         taxrate_new = dist_rev_needed/nonTIF_EAV_pre_exemps,
         taxrate_change = tax_rate_current-taxrate_new) %>% 
 select(nbhd_code, tax_code, taxrate_change, nbh_current_rate=tax_rate_current, nbh_new_rate = taxrate_new, everything()) %>% 
  arrange(desc(tax_code))


Current_Taxrates_per_nbh_TC


Current_Taxrates_per_nbh_class <- pin14_bills_current %>% 
 left_join(TC_taxrates, by = c("tax_code" = "tax_code_num")) %>%
  group_by(nbhd_code, class) %>%
  
  summarize(nbh_rate = mean(tax_code_rate, na.rm=TRUE),
            pin_count = n(),
            dist_rev_needed = sum(final_tax_to_dist, na.rm = TRUE), # amount billed by munis with current exemptions in place
            nonTIF_EAV_post_exemps = sum(final_tax_to_dist/(nbh_rate/100), na.rm = TRUE),
            TIF_increment_EAV = sum(final_tax_to_tif/(nbh_rate/100), na.rm=TRUE),  
            Exempt_EAV = sum(tax_amt_exe/(nbh_rate/100), na.rm=TRUE), 
            Total_EAV = sum((tax_amt_exe+final_tax_to_dist+final_tax_to_tif)/(nbh_rate/100), na.rm = TRUE)) %>%

  mutate(tax_rate_current = dist_rev_needed/nonTIF_EAV_post_exemps,
         nonTIF_EAV_pre_exemps = nonTIF_EAV_post_exemps + Exempt_EAV,
         taxrate_new = dist_rev_needed/nonTIF_EAV_pre_exemps,
         taxrate_change = tax_rate_current-taxrate_new) %>% 
 select(nbhd_code, class, taxrate_change, tax_rate_current, taxrate_new, everything()) %>% 
  arrange(desc(tax_rate_current))

Current_Taxrates_per_nbh_class



Current_Taxrates_per_nbh <- pin14_bills_current %>% 
 left_join(TC_taxrates, by = c("tax_code" = "tax_code_num")) %>%
    mutate(nbhd_3 = str_sub(nbhd_code, 3,5)) %>%
  group_by(nbhd_code, nbhd_3) %>%
  
  summarize(nbh_rate = mean(tax_code_rate, na.rm=TRUE),
            pin_count = n(),
            dist_rev_needed = sum(final_tax_to_dist, na.rm = TRUE), # amount billed by munis with current exemptions in place
            nonTIF_EAV_post_exemps = sum(final_tax_to_dist/(nbh_rate/100), na.rm = TRUE),
            TIF_increment_EAV = sum(final_tax_to_tif/(nbh_rate/100), na.rm=TRUE),  
            Exempt_EAV = sum(tax_amt_exe/(nbh_rate/100), na.rm=TRUE), 
            Total_EAV = sum((tax_amt_exe+final_tax_to_dist+final_tax_to_tif)/(nbh_rate/100), na.rm = TRUE)) %>%

  mutate(tax_rate_current = dist_rev_needed/nonTIF_EAV_post_exemps,
         nonTIF_EAV_pre_exemps = nonTIF_EAV_post_exemps + Exempt_EAV,
         taxrate_new = dist_rev_needed/nonTIF_EAV_pre_exemps,
         taxrate_change = tax_rate_current-taxrate_new) %>% 
 select(nbhd_code, nbh_rate, nbhd_3, taxrate_change, tax_rate_current, taxrate_new, everything()) %>% 
  arrange(desc(tax_rate_current)) 


Current_Taxrates_per_nbh

```

```{r eval=FALSE}
# Calculate new taxable bases by adding agency total and the exempt eav that would now be taxable in this situation
t_agency_dt_new_exe <- lookup_agency(t_years, t_pin_dt_new_exe$tax_code)

## add exempt EAV to the current taxable EAV
t_agency_dt_new_exe[
    t_tc_sum_new_exe,
    on = .(year, tax_code),
    agency_total_eav := agency_total_eav + exe_total
  ]
  
# Recalculate tax bills
# t_pin_dt_new_exe <- t_pin_dt_new_exe[
#     , exe_homeowner:= 0
#   ][
#     , c("tax_code") := NULL
#   ]

exe_cols <- names(t_pin_dt_new_exe)[startsWith(names(t_pin_dt_new_exe), "exe_")]

t_pin_dt_new_exe <- t_pin_dt_new_exe[, (exe_cols) := 0][, c("tax_code") := NULL]

bills <- tax_bill(
    year_vec = t_years,
    pin_vec = t_pins,
    agency_dt = t_agency_dt_new_exe,
    pin_dt = t_pin_dt_new_exe
  )




rates2 <- bills %>%
    dplyr::group_by(year, pin) %>%
    dplyr::summarise(final_tax = sum(final_tax)) %>%
    dplyr::select(year, pin) 
```

```{r eval=FALSE}
write_csv(nbh_sum_new_exe, "./Output/8_nbh_sum_new_exe.csv")
write_csv(Current_Taxrates_per_nbh, "./Output/Current_Taxrates_per_nbh.csv")
write_csv(Current_Taxrates_per_nbh_TC, "./Output/Current_Taxrates_per_nbh_TC.csv")
```

### Map

```{r}
nbh_sum_new_exe <- read_csv("./Output/8_nbh_sum_new_exe.csv") %>% mutate(nbhd_code = as.character(nbhd_code))

nbh_sum_new_exe %>% 
  full_join(NBHs, by = c("nbhd_code" = "town_nbhd")) %>% 
  ggplot(aes(fill = exe_total)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  labs(title = "Exemptions in Neighborhoods", 
  caption = "Sum of all Exemptions") +
  theme_void() + 
   theme(axis.ticks = element_blank(), axis.text = element_blank()) +
scale_fill_steps2(
  high = "darkblue", low = "orange",
  midpoint = median(nbh_sum_new_exe$exe_total, na.rm = TRUE),
 nice.breaks = FALSE,
  show.limits=TRUE,
na.value = "gray",
  name = "Dollars",
  labels = scales::dollar
)

nbh_sum_new_exe %>% 
  filter(exe_total < 30000000) %>% 
  full_join(NBHs, by = c("nbhd_code" = "town_nbhd")) %>% 
  ggplot(aes(fill = exe_total)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  labs(title = "Exemptions in Neighborhoods", 
  caption = "Sum of all Exemptions. 
  Removes exemption totals above $30 million to increase visual variation.") +
  theme_void() + 
   theme(axis.ticks = element_blank(), axis.text = element_blank()) +
scale_fill_steps2(
  high = "darkblue", low = "orange",
  midpoint = median(nbh_sum_new_exe$exe_total, na.rm = TRUE),
 nice.breaks = FALSE,
  show.limits=TRUE,
na.value = NA,
  name = "Dollars",
  labels = scales::dollar
)


```

```{r}
Current_Taxrates_per_nbh <- read_csv("./Output/8_Current_Taxrates_per_nbh.csv") %>% mutate(nbhd_code = as.character(nbhd_code))

Current_Taxrates_per_nbh %>% 
  arrange(nbh_rate) %>%
  inner_join(NBHs, by = c("nbhd_code" = "town_nbhd")) %>% 
  ggplot(aes(fill = nbh_rate)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  labs(title = "Current Tax Rates in Neighborhoods", caption = "Current Median Composite Tax Rate at the neighborhood level is 10.15%") +
  theme_void() + 
   theme(axis.ticks = element_blank(), axis.text = element_blank()) +
  scale_fill_steps2(
    high = "#420420", low = "black",
   midpoint = median(Current_Taxrates_per_nbh$nbh_rate),
                   show.limits=TRUE,
   na.value = NA,
 nice.breaks=FALSE,
                    n =7,
                       name = "Current Tax Rate (%)")


Current_Taxrates_per_nbh %>% 
  inner_join(NBHs, by = c("nbhd_code" = "town_nbhd")) %>% 
  arrange(nbh_rate) %>%
  ggplot(aes(fill = nbh_rate)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  labs(title = "Current Tax Rates in Neighborhoods", caption = "Current Median Composite Tax Rate at the neighborhood level is 10.15%.") +
  theme_void() + 
   theme(axis.ticks = element_blank(), axis.text = element_blank()) +
  scale_fill_steps2(
    high = "#420420", low = "black",
   midpoint = median(Current_Taxrates_per_nbh$nbh_rate),
                   show.limits=TRUE,
   na.value = NA,
 # nice.breaks=FALSE,
 #                   n =5,
                       name = "Current Tax Rate (%)")
  

```

```{r}
Current_Taxrates_per_nbh %>% 
  inner_join(NBHs, by = c("nbhd_code" = "town_nbhd")) %>% 
  arrange(nbh_rate) %>%
  ggplot(aes(fill = taxrate_change)) + 
  geom_sf(aes(geometry = geometry), color = "black") + 
  labs(title = "Tax Rate Change in Neighborhoods", caption = "Change in Composite Tax Rate at the neighborhood level is 1.15 percentage points.
       All exemptions were removed when recalculating tax rates. 
       Levy held constant.") +
  theme_void() + 
   theme(axis.ticks = element_blank(), axis.text = element_blank()) +
  scale_fill_steps2(
    high = "#420420", low = "black",
   midpoint = median(Current_Taxrates_per_nbh$taxrate_change),
                   show.limits=TRUE,
   na.value = "gray",
  nice.breaks=FALSE,
                    n =6,
                       name = "Tax Rate Change")
```
