---
title: "Statistical Models Measuring the Effect of Incentives"
subtitle: "Fixed Effects, ln()/ln() models, pooled OLS"
author: "MVH & AWM"
date: 07/25/2024
date-modified: last-modified
date-format: long
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    tbl-cap-location: top
    fig-cap-location: top
    df-print: paged
---

# Preliminary Code

```{r setup}
#| output: false

options(scipen = 999, digits = 4) #no scientific notation

# Load packages

library(tidyverse)
library(glue)
library(plm)
library(modelsummary)
library(sandwich)

comm_ind <- read_csv("./Output/comm_ind_PINs_2011-2022_balanced.csv") 

comm_ind <- comm_ind |>
  ## set variable types 
  mutate(across(c(class, improvement_ind, has_AB_exemp, fmv_NA_indicator, in_tif), as.character))

comm_ind <- comm_ind |>
  # Change to factors; set reference levels
  mutate(incent_change = as.factor(incent_change),
         landuse_change = as.factor(landuse_change),
         triad = as.factor(Triad),
         in_tif = as.factor(in_tif),
         land_use = as.factor(land_use),
         incent_prop = as.factor(incent_prop),
         clean_name = as.factor(clean_name),
         fmv_growth_2011 = round(fmv_growth_2011)) |>
  mutate(incent_change = relevel(incent_change, ref = "Never Incentive"),
         landuse_change = relevel(landuse_change, ref = "Always Commercial"),
         incent_prop = relevel(incent_prop, ref = "Non-Incentive"),

         triad = relevel(triad, ref = "North"),
         land_use = relevel(land_use, ref = "Commercial")
         ) |>
  # Create binary variables
  mutate(incent_change_bin = as.factor(ifelse(incent_change == 
                                                "Changes Sometime", 1, 0)),
         prop_use_change_bin = as.factor(ifelse(landuse_change == 
                                                  "Changes Land Use", 1, 0)),
         is_chicago = as.factor(ifelse(clean_name == "Chicago", 1, 0))
         ) |>
  rename(fmv_2011 = base_year_fmv_2011) |>
  arrange(pin, year)

# 1,190,580 obs. (MVH 8/2) 
comm_ind_temp <- comm_ind  |>
  # 1121436 obs. (lose 69,144) (MVH 8/2)
  filter(!is.na(fmv_2011)) |>
  # 1121436 obs. (MVH 8/2)
  filter(!is.na(fmv)) |>
  # 1,121,436 obs. (lose no obs) (MVH 8/2)
  filter(!is.na(fmv_growth_2011))

# Create panel data

comm_ind_temp <- comm_ind_temp |> 
  select(pin, class, year, clean_name, fmv, fmv_growth_2011, fmv_2011, incent_prop, 
         land_use, major_class_code, landuse_change, incent_change, triad, 
         incent_change_bin, prop_use_change_bin,
         in_tif) |>
  filter(fmv_2011 > 10)

comm_ind_raw <- comm_ind_temp


comm_ind_panel_pin <- pdata.frame(comm_ind_temp, index = c("pin", "year"))

is.pbalanced(comm_ind_panel_pin)

comm_ind_panel_muni <- pdata.frame(comm_ind_temp, index = c("clean_name", "year"))

is.pbalanced(comm_ind_panel_muni)


```

# Data Exploration

```{r dataexploration}

comm_ind_raw |>
  ggplot(aes(fmv_growth_2011)) +
  geom_histogram(bins = 100) +
  theme_classic()

comm_ind_raw |>
  select(fmv_growth_2011) |>
  summarize(max = max(fmv_growth_2011), min = min(fmv_growth_2011), mean(fmv_growth_2011), median(fmv_growth_2011), sd = sd(fmv_growth_2011))

comm_ind_raw |>
  arrange(desc(fmv_growth_2011)) |>
  group_by(pin) |>
  arrange(first(fmv_growth_2011)) |>
  ungroup() |>
  select(year, pin, fmv, fmv_growth_2011, clean_name, fmv_2011)

comm_ind_raw_2022 <- comm_ind_raw |>
  filter(year == 2022)


# Look at FMV growth
comm_ind_raw_2022 |>
  summarize(min_growth = min(fmv_growth_2011), max_growth = max(fmv_growth_2011), 
            mean_growth = mean(fmv_growth_2011), med_growth = median(fmv_growth_2011),
            sd_growth = sd(fmv_growth_2011))

# Look at fmv_2011

comm_ind_raw_2022 |>
  summarize(min_fmv = min(fmv_2011), max_fmv = max(fmv_2011), 
            mean_fmv = mean(fmv_2011), med_fmv = median(fmv_2011),
            sd_fmv = sd(fmv_2011))

comm_ind_raw_2022 |>
  ggplot() +
  geom_freqpoly(aes(fmv_growth_2011, color = "FMV Growth 2011")) +
  geom_freqpoly(aes(fmv_2011, color = "FMV 2011")) +
  labs(
    title = "Distribution of 2011 FMV Values and Growth Rates (2022 Data)",
    x = "FMV",
    y = "n",
    color = "Legend"
  ) +
  theme_classic()

comm_ind_raw_2022 |>
  ggplot() +
  geom_point(aes(x = fmv_2011, y = fmv_growth_2011, color = land_use)) +
    labs(
    title = "Relationship between 2011 FMV Values and Growth Rates (2022 Data)",
    x = "2011 FMV",
    y = "FMV Growth",
    color = "Land Use"
  ) +
  theme_classic()


comm_ind_raw_2022 |>
  filter(fmv_growth_2011 < 20000) |>
  filter(fmv_2011 < 200000000) |>
  ggplot() +
  geom_point(aes(x = fmv_2011, y = fmv_growth_2011, color = land_use)) +
    labs(
    title = "Relationship between 2011 FMV Values and Growth Rates (2022 Data)",
    x = "2011 FMV",
    y = "FMV Growth",
    color = "Land Use"
  ) +
  theme_classic()

comm_ind_raw_2022 |>
  filter(land_use %in% c("Industrial", "Commercial")) |>
  ggplot() +
  geom_point(aes(x = fmv_2011, y = fmv_growth_2011, color = land_use)) +
    labs(
    title = "Relationship between 2011 FMV Values and Growth Rates (2022 Data)",
    x = "2011 FMV",
    y = "FMV Growth",
    color = "Land Use"
  ) +
  theme_classic()

```
## Evaluating Outliers

### Growth Outliers

```{r outliers}
#| tbl-cap: "Observations > 2 standard deviations above growth mean"

comm_ind_raw_2022 |>
  filter(fmv_growth_2011 > 2.958 + 2*195.3) |>
  arrange(desc(fmv_growth_2011)) |>
  select(pin, class, clean_name, land_use, incent_prop, fmv, fmv_growth_2011, fmv_2011)

```

- 17 PINs are two or more standard deviations above the mean.
- None have incentive classifications
- 13 of the 17 are Commercial
- 12 of the 17 are in Chicago
- 7 of 17 had FMVs in 2011 under $1k (not arms length transactions?)



# Fixed Effects Models

```{r panel_data_setup}



# comm_ind_panel_muni <- comm_ind_panel_muni |>
#   mutate(fmv_growth_2011 = fmv/fmv_2011,
#          fmv_growth_2011 = as.numeric(as.character(fmv_growth_2011)))

```

## Pin-level FE Models

```{r pin_FE}

pin_fe_models <- list(
  
      pin_fe_mod_1 = plm(fmv_growth_2011 ~ incent_prop*land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_pin),
  
      pin_fe_mod_2 = plm(fmv_growth_2011 ~ lag(incent_prop) + land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_pin),

      pin_fe_mod_3 = plm(fmv_growth_2011 ~ lag(incent_prop) + land_use  + major_class_code,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_pin)
              )

modelsummary(pin_fe_models,
             stars = TRUE)

```

## Muni-Level FE Models

```{r muni_FE_original}

muni_fe_models <- list(
  
  muni_fe_model_1 = plm(fmv_growth_2011 ~ land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni),
  
  muni_fe_model_2 = plm(fmv_growth_2011 ~ major_class_code + land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni),
  
  muni_fe_model_3 = plm(fmv_growth_2011 ~ incent_prop*land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni),
  
  muni_fe_model_4 = plm(fmv_growth_2011 ~ incent_prop + land_use + 
                         + in_tif,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni)
  )

modelsummary(muni_fe_models,
             stars = TRUE)

```

```{r muni_FE_awm}

awm_list <- list(

    awm_1 = plm(fmv_growth_2011 ~ land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni),
  
    awm_2 = plm(fmv_growth_2011 ~ major_class_code + land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni),
  
    awm_3 = plm(fmv_growth_2011 ~ incent_prop*land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni),
  
    awm_4 = plm(fmv_growth_2011 ~ incent_prop + land_use + 
                         + in_tif,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni)
)

modelsummary(awm_list,
             stars = TRUE)

```

> Models below run but they do not finish going through the modelsummary() command. Set chunk below to eval: false. 


```{r muni_FE_original_usesmodelsummary}


  pin_fe_model_1 = plm(fmv_growth_2011 ~ land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni)
  
  pin_fe_model_2 = plm(fmv_growth_2011 ~ major_class_code + land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni)
  
  pin_fe_model_3 = plm(fmv_growth_2011 ~ incent_prop*land_use,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni)
  
  pin_fe_model_5 = plm(fmv_growth_2011 ~ incent_prop + land_use + 
                         + in_tif,
                       model = "within",
                       effect = "twoways",
                       data = comm_ind_panel_muni)
  
models <- list(pin_fe_model_1, pin_fe_model_2, pin_fe_model_3, pin_fe_model_5)

modelsummary(models = models,
             stars = TRUE
             )

```


```{r}

model_list <- list(

    mod_1 = plm(fmv_growth_2011 ~ land_use,
        model = "within",
        effect = "twoways",
        data = comm_ind_panel_muni
      ),
    
    mod_2 = plm(fmv_growth_2011 ~ prop_use_change_bin,
        model = "within",
        effect = "twoways",
        data = comm_ind_panel_muni
      ),
    
    mod_3 = plm(fmv_growth_2011 ~ land_use + prop_use_change_bin,
                 model = "within",
                 effect = "twoways",
                 data = comm_ind_panel_muni
                 ),
    
    mod_4 = plm(fmv_growth_2011 ~ land_use + prop_use_change_bin
                 + land_use*prop_use_change_bin,
                 model = "within",
                 effect = "twoways",
                 data = comm_ind_panel_muni
                 )
)

modelsummary(model_list)

```

```{r generate_ind_data}
#| tbl-cap: "Industrial Properties ONLY"
#| output: false

# 307920 obs. (MVH 8/2)
# Kept all observations that were industrial at least one year.

ind_panel_muni <- comm_ind_panel_muni |>
  mutate(ind_bin = ifelse(land_use == "Industrial", 1, 0)) |>
  group_by(pin) |>
  mutate(pin_ind_count = sum(ind_bin)) |>
  ungroup() |>
  filter(pin_ind_count >= 1)

ind_panel_muni |>
  # Still 307920 obs.
  summarize(sum(!is.na(fmv_growth_2011)), sum(!is.na(landuse_change)), sum(!is.na(incent_change)))

is.pbalanced(ind_panel_muni)

```
The models with just the industrial PINs similarly doesn't run.
```{r just_industrial}
#| eval: false

ind_list <- list(
  
  land_use_model <- plm(fmv_growth_2011 ~ landuse_change,
                           model = "within",
                           effect = "twoways",
                           data = ind_panel_muni),
  
  incentive_change_model <- plm(fmv_growth_2011 ~ incent_change,
                                  model = "within",
                                  effect = "twoways",
                                  data = ind_panel_muni),
  
  incentive_interact_model <- plm(fmv_growth_2011 ~ incent_change + landuse_change,
                                  model = "within",
                                  effect = "twoways",
                                  data = ind_panel_muni),
  
  interactive_incent_model <- plm(fmv_growth_2011 ~ landuse_change + incent_change +
                                    landuse_change*incent_change,
                                  model = "within",
                                  effect = "twoways",
                                  data = ind_panel_muni)
)

modelsummary(ind_list,
             stars = TRUE)

```

```{r}
#| tbl-cap: "<b>2011-2022 PIN FMV Growth Rate</b><br><i>Industrial and Commercial PINs, 2011-2022</i>"

pin_model_list <- list(
  
  model_1 <- plm(fmv_growth_2011 ~ land_use,
                      model = "within",
                      effect = "twoways",
                      data = comm_ind_panel_pin),
    
  model_2 <- plm(fmv_growth_2011 ~ incent_prop,
                      model = "within",
                      effect = "twoways",
                      data = comm_ind_panel_pin)
)

modelsummary(pin_model_list,
             stars = TRUE
             )

```


```{r}
#| tbl-cap: "Municipal Fixed Effects"

muni_model_list <- list(
  
  model_1 <- plm(fmv_growth_2011 ~ land_use,
                  model = "within",
                  effect = "twoways",
                  data = comm_ind_panel_muni),

  model_2 <- plm(fmv_growth_2011 ~ incent_prop,
                  model = "within",
                  effect = "twoways",
                  data = comm_ind_panel_muni)
)

modelsummary(muni_model_list,
             stars = TRUE
             )    

```

Since PINs are already "always incentive"/"never incentive"/"sometimes incentive" for every year, this model will not run. it is inherently part of the PIN FE.
```{r pin_twfe_change_vars}
#| eval: false
#| tbl-cap: "Municipality Fixed Effects, Variable of Interest: Changed Land Use or Change Incentive Classification"


pin_change_model_list <- list(
  
  model_1 <- plm(fmv_growth_2011 ~ prop_use_change_bin,
                      model = "within",
                      effect = "twoways",
                      data = comm_ind_panel_pin),
    
  model_2 <- plm(fmv_growth_2011 ~ incent_change_bin,
                      model = "within",
                      effect = "twoways",
                      data = comm_ind_panel_pin)
)


modelsummary(pin_change_model_list,
             stars = TRUE
             )
```

```{r muni_twfe_change_vars}
#| tbl-cap: "Municipality Fixed Effects, Variable of Interest: Changed Land Use or Change Incentive Classification"


muni_change_model_list <- list(
  
  model_1 <- plm(fmv_growth_2011 ~ prop_use_change_bin,
                      model = "within",
                      effect = "twoways",
                      data = comm_ind_panel_muni),
    
  model_2 <- plm(fmv_growth_2011 ~ incent_change_bin,
                      model = "within",
                      effect = "twoways",
                      data = comm_ind_panel_muni)
)

modelsummary(muni_change_model_list,
             stars = TRUE
             )
```

## Predicting Incentive Classifications

[tbd]

# Elasticity Models

[tbd]

```{r time_filter}
#| include: false

df_2022 <- comm_ind |>
  filter(year == 2022) |>
  filter(!is.na(fmv_growth_2011))

```

# OLS Models (As ordinary as possible.)

```{r tbl-naive_model}
#| tbl-cap: "<b>2011-2022 PIN FMV Growth</b><br><i>Naive Model</i>"

naive_ols <- lm(fmv_growth_2011 ~ incent_change + prop_use_change_bin,
                data = df_2022)

comm_coef_map <- c('incent_changeChanges Sometime' = '<b>Changed Incentive<b>',
                  'change_prop_use_bin1' = 'Changed Prop. Use',
                  'fmv_2011' = 'Base FMV (2011)',
                  'in_tif1' = 'TIF',
                  'triadCity' = 'City Triad',
                  'triadSouth' = "South Triad",
                  'triadNorth' = 'North Triad'
                  )

fit_format <- function(x) format(round(x, 2), big.mark=",")

fit <- list(
  list("raw" = "nobs", "clean" = "N", "fmt" = fit_format),
  list("raw" = "df", "clean" = "DF", "fmt" = fit_format),
  list("raw" = "adj.r.squared", "clean" = "R2 Adj.", "fmt" = fit_format),
  list("raw" = "F", "clean" = "F-stat.", "fmt" = fit_format),
  list("raw" = "p.value", "clean" = "p-value", "fmt" = fit_format)
)

naive_summ <- modelsummary(naive_ols,
                        #  title = 'Naive Model',
             fmt = function(x) round(x, 2),
             stars = TRUE,
             coef_omit = 'clean_name',
             coef_map = comm_coef_map,
             gof_map = fit,
            # note = 'All models include municipality-level control variables.'
             )

naive_summ

```

#### Dependent Variable: 2011-2022 PIN FMV Growth (With Municipal Dummies)

```{r tbl-Table2}
#| eval: false
#| tbl-cap: "<b>2011-2022 PIN FMV Growth</b><br><i>2022 Comm./Ind. PINs</i>"


muni_dummy_models <- list(

 "(1)" <- lm(fmv_growth_2011 ~ incent_change_bin + clean_name,
                data = df_2022),

 "(2)" <- lm(fmv_growth_2011 ~ incent_change_bin + fmv_2011 + clean_name,
                data = df_2022),

 "(3)" <- lm(fmv_growth_2011 ~ incent_change_bin + fmv_2011 + triad 
                   + clean_name,
                data = df_2022),

 "(4)" <- lm(fmv_growth_2011 ~ incent_change_bin + fmv_2011 + triad 
                   + prop_use_change_bin + clean_name,
                data = df_2022),

 "(5)" <- lm(fmv_growth_2011 ~ incent_change_bin + fmv_2011 + triad 
                   + prop_use_change_bin + land_use + in_tif 
                   + clean_name,
                data = df_2022),

 "(6)" <- lm(fmv_growth_2011 ~ incent_change_bin + fmv_2011 + triad 
                   + prop_use_change_bin + land_use + in_tif 
                   + clean_name,
                data = df_2022)
)

cfm <- c(#'incent_changeChanges Sometime' = 'Changed Incentive',
                  'change_incent_bin1' = '<b>Changed Incentive</b>',
                  'change_prop_use_bin1' = 'Changed Prop. Use',
                  'fmv_2011' = 'Base FMV (2011)',
                  'in_tif1' = 'TIF',
                  'triadCity' = 'City Triad',
                  'triadSouth' = "South Triad",
                  'triadNorth' = 'North Triad',
         'land_useIndustrial' = 'Industrial',
         'land_useCommercial' = 'Commercial',
         'land_useLand' = 'Empty Land',
         'land_useOther Residential' = 'Residential',	
         'land_useOwner Occupied' = 'Owner Occupied',	
         'land_useRental' = 'Rental'
                  )

fit_format <- function(x) format(round(x, 2), big.mark=",")

fit <- list(
  list("raw" = "nobs", "clean" = "N", "fmt" = fit_format),
  list("raw" = "df", "clean" = "DF", "fmt" = fit_format),
  list("raw" = "adj.r.squared", "clean" = "R2 Adj.", "fmt" = fit_format),
  list("raw" = "F", "clean" = "F-stat.", "fmt" = fit_format),
  list("raw" = "p.value", "clean" = "p-value", "fmt" = fit_format)
)

muni_dummy_summ <- modelsummary(muni_dummy_models,
             fmt = function(x) round(x, 2),
             stars = TRUE,
             coef_omit = 'clean_name',
            # coef_map = cfm,
             gof_map = fit,
              notes = 'All models include municipality-level control variables.'
             )

muni_dummy_summ

```

```{r comm_data}

df_2022_comm <- df_2022 |>
  filter(land_use == "Commercial")

```

#### Dependent Variable: 2011-2022 PIN FMV Growth (Commercial Subset)

```{r tbl-comm_models}
#| tbl-cap: "<b>2011-2022 PIN FMV Growth</b><br><i>2022 Commercial PINs</i>"

comm_models <- list(
  
  "(1)" = lm(fmv_growth_2011 ~ incent_change + clean_name,
                data = df_2022_comm),

  "(2)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + clean_name,
                data = df_2022_comm),

  "(3)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + triad 
                   + clean_name,
                data = df_2022_comm),

  "(4)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + triad 
                   + prop_use_change_bin + clean_name,
                data = df_2022_comm),

  "(5)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + triad 
                   + prop_use_change_bin + in_tif 
                   + clean_name,
                data = df_2022_comm)
  )

comm_coef_map <- c('incent_changeChanges Sometime' = '<b>Changed Incentive</b>',
                  'change_prop_use_bin1' = 'Changed Prop. Use',
                  'fmv_2011' = 'Base FMV (2011)',
                  'in_tif1' = 'TIF',
                  'triadCity' = 'City Triad',
                  'triadSouth' = "South Triad",
                  'triadNorth' = 'North Triad'
                  )

fit_format <- function(x) format(round(x, 2), big.mark=",")

fit <- list(
  list("raw" = "nobs", "clean" = "N", "fmt" = fit_format),
  list("raw" = "df", "clean" = "DF", "fmt" = fit_format),
  list("raw" = "adj.r.squared", "clean" = "R2 Adj.", "fmt" = fit_format),
  list("raw" = "F", "clean" = "F-stat.", "fmt" = fit_format),
  list("raw" = "p.value", "clean" = "p-value", "fmt" = fit_format)
)

comm_summ <- modelsummary(comm_models,
             fmt = function(x) round(x, 2),
             stars = TRUE,
             coef_omit = 'clean_name',
             coef_map = comm_coef_map,
             gof_map = fit,
             notes = 'All models include municipality-level control variables.'
             )

comm_summ

```

```{r ind_data}

df_2022_ind <- df_2022 |>
  filter(land_use == "Industrial")

```

#### Dependent Variable: 2011-2022 PIN FMV Growth (Industrial Subset)

```{r tbl-ind_models}
#| tbl-cap: "<b>2011-2022 PIN FMV Growth</b><br><i>2022 Industrial PINs</i>"

ind_models <- list(
  
  "(1)" = lm(fmv_growth_2011 ~ incent_change + clean_name,
                data = df_2022_ind),

  "(2)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + clean_name,
                data = df_2022_ind),

  "(3)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + triad 
                   + clean_name,
                data = df_2022_ind),

  "(4)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + triad 
                   + prop_use_change_bin + clean_name,
                data = df_2022_ind),

  "(5)" = lm(fmv_growth_2011 ~ incent_change + fmv_2011 + triad 
                   + prop_use_change_bin + in_tif 
                   + clean_name,
                data = df_2022_ind)
                    
  )

ind_coef_map <- c(#'(Intercept)' = 'Constant',
                  #'incent_changeAlways Incentive' = 'Incentive (Always)',
                  'incent_changeChanges Sometime' = '<b>Changed Incentive</b>',
                  'change_prop_use_bin1' = 'Changed Prop. Use',
                  'fmv_2011' = 'Base FMV (2011)',
                  'in_tif1' = 'TIF',
                  'triadCity' = 'City Triad',
                  'triadSouth' = "South Triad",
                  'triadNorth' = 'North Triad'
                  )

fit_format <- function(x) format(round(x, 2), big.mark=",")

fit_f <- function(x) format(round(x, 3))

fit <- list(
  list("raw" = "nobs", "clean" = "N", "fmt" = fit_format),
  list("raw" = "df", "clean" = "DF", "fmt" = fit_format),
  list("raw" = "adj.r.squared", "clean" = "R2 Adj.", "fmt" = fit_format),
  list("raw" = "F", "clean" = "F-stat.", "fmt" = fit_f),
  list("raw" = "p.value", "clean" = "p-value", "fmt" = fit_format)
)

ind_summ <- modelsummary(ind_models,
             fmt = function(x) round(x, 2),
             stars = TRUE,
             coef_omit = 'clean_name',
             #coef_map = ind_coef_map,
             gof_map = fit,
             notes = 'All models include municipality-level control variables.'
             )

ind_summ

```

### Data WTF

```{r}

summary(comm_ind_panel_muni$fmv)

summary(comm_ind_panel_muni$fmv_growth_2011)

summary(comm_ind_panel_muni$fmv_2011)

```
