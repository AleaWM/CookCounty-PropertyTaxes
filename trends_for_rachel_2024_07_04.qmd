---
title: "Incentive Classification Use Over Time (2011-2022)"
subtitle: "PIN-level Trends in Value & Frequency of Use"
author: "Michael Van Hulle & Alea Wilbur-Mujtaba"
date: "July 5, 2024"
format: 
  html:
    embed-resources: true
    theme: lumen
    code-fold: true
    code-line-numbers: true
    code-overflow: wrap
    toc: true
    toc-location: left
    df-print: paged
knitr: 
  opts_chunk:
    warning: true
    message: false
---

# Top of Code


```{r setup}
# Load libraries

library(tidyverse)
library(glue)
library(DT)
library(flextable)
library(kableExtra)

# Set table formatting defaults--change theme to something less ugly.

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       #line_spacing = 1,
                       big.mark = ","
                       )

options(DT.options = list())



ccao_loa <- read_csv("./inputs/ccao_loa.csv") %>%
    mutate(class_code = as.character(class_code)) %>%
    mutate(loa = as.numeric(loa)) %>% 
    mutate(loa = ifelse(loa == 0, NA, loa)) |>
  rename(ar = loa)

# Read in muni class level data 2006-2021: 87610 obs of 41 variables
df <- read_csv("./Output/ptaxsim_muni_class_summaries_2006-2022.csv") |>
  rename(n_pins = muni_c_pins_in_muni,
         av = muni_c_av) |>
  mutate(class = as.character(class))

# Import relevant variables from extended class dictionary
class_dict <- read_csv("./Necessary_Files/class_dict_expanded.csv") |>
  select(class = class_code, 
         land_use = Alea_cat, 
         incent_prop, 
       #   ar = assess_ratio This is only the LOA for recent tax years. Rates have changed over time! 
         ) |>
    mutate(class = as.character(class))

# Join summaries w/ class dictionary
df_temp <- left_join(df, class_dict, by = "class")
df_temp <- left_join(df_temp, ccao_loa, by = c("class" = "class_code", "year"))

FitFlextableToPage <- function(ft, pgwidth = 6){

  ft_out <- ft %>% autofit()

  ft_out <- width(ft_out, width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))
  return(ft_out)
}

```

# Tables

## County-Wide Summaries

### All Commercial and Industrial PINs

```{r}
#| label: tbl-2022and2021-county-sums
#| tbl-cap: "County level stats aggregated from PIN level data. Includes ALL commercial and industrial PINs."
#| tbl-subcap: 
#|   - "County level stats aggregated from PIN level data. Includes ALL commercial and industrial PINs. (2022)"
#|   - "2021"
#| layout-ncol: 2

q = c(.25, .5, .75)

county_summary <- df_temp |>
  # Filter to industrial and commercial properties: 26969 obs.
  filter(land_use %in% c("Industrial", "Commercial")) |>
  
  # Want to remove the NFPs <---- do we though?? not for profits get incentive classifications too?
  # filter(!between(class, 400, 499)) |>
  
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  mutate(fmv = ifelse(is.na(fmv), 0, fmv)) |>
  # Calculate AV values if no incentives (could have calculated with AR)
#  mutate(no_incent_av = fmv*.25) |>
  # Reframe to relevant variables
  group_by(year#, incent_prop, land_use 
) |>
  arrange(desc(fmv)) %>%
  
  summarize(n_pins = sum(n_pins, na.rm=TRUE), 
            min_fmv_all = min(fmv, na.rm = TRUE),
            quant25_all_fmv = round(quantile(fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(fmv, probs = q[3])),
            max_fmv_all = max(fmv, na.rm=TRUE),
            fmv_mean = mean(fmv, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE))
  
vars_4fn <- c("n_pins", "min_fmv_all", "quant25_all_fmv", "quant50_all_fmv", "quant75_all_fmv", "max_fmv_all", "fmv_mean", "fmv")

labels_4fn <- c("PIN Count", "Min. FMV", "25th Quantile", "50th Quantile", "75th Quantile", "Max. FMV", "Avg. FMV", "Total FMV")

df_labels <- data.frame(vars_4fn, labels_4fn)


 county_summary %>%
  filter(year == 2022) %>%
  pivot_longer(cols = n_pins:fmv, names_to = "Variables") %>% select(-year) %>%
   mutate(Variables = ifelse(Variables %in% df_labels$vars_4fn, df_labels$labels_4fn, "Need Name")) %>%
  flextable() %>% set_header_labels(value = "2022 FMV Values") %>%
   FitFlextableToPage()

 county_summary |>
  filter(year == 2021) |>
  pivot_longer(cols = n_pins:fmv, names_to = "Variables") %>% select(-year) %>%
   mutate(Variables = ifelse(Variables %in% df_labels$vars_4fn, df_labels$labels_4fn, "Need Name")) %>% 
   flextable() %>%
   set_header_labels(value = "2021 FMV Values") %>%
   FitFlextableToPage()

 

```



```{r}
#| label: tbl-2022-county-sums
#| tbl-cap: "County level stats aggregated from PIN level data. Includes ALL commercial and industrial PINs. (2022)"
#| eval: false
#| include: false

q = c(.25, .5, .75)

county_summary <- df_temp |>
  # Filter to industrial and commercial properties: 26969 obs.
  filter(land_use %in% c("Industrial", "Commercial")) |>
  
  # Want to remove the NFPs <---- do we though?? not for profits get incentive classifications too?
  # filter(!between(class, 400, 499)) |>
  
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  mutate(fmv = ifelse(is.na(fmv), 0, fmv)) |>
  # Calculate AV values if no incentives (could have calculated with AR)
#  mutate(no_incent_av = fmv*.25) |>
  # Reframe to relevant variables
  group_by(year#, incent_prop, land_use 
) |>
  arrange(desc(fmv)) %>%
  
  summarize(n_pins = sum(n_pins, na.rm=TRUE), 
            min_fmv_all = min(fmv, na.rm = TRUE),
            quant25_all_fmv = round(quantile(fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(fmv, probs = q[3])),
            max_fmv_all = max(fmv, na.rm=TRUE),
            fmv_mean = mean(fmv, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE))

county_summary %>% filter(year == 2022) %>% pivot_longer(cols = n_pins:fmv, names_to = "Variables") %>% select(-year) %>%
   mutate(Variables = ifelse(Variables %in% df_labels$vars_4fn, df_labels$labels_4fn, "Need Name")) %>% 
   flextable() %>%
   set_header_labels(value = "2022 FMV Values") %>%
   FitFlextableToPage()
```


```{r}
#| label: tbl-2021-county-sums
#| tbl-cap: "County level stats aggregated from PIN level data. Includes ALL commercial and industrial PINs. (2021)"
#| eval: false
#| include: false

county_summary |>
  filter(year == 2021) %>%   pivot_longer(cols = n_pins:fmv, names_to = "Variables") %>% select(-year) %>%
   mutate(Variables = ifelse(Variables %in% df_labels$vars_4fn, df_labels$labels_4fn, "Need Name")) %>% 
   flextable() %>%
   set_header_labels(value = "2021 FMV Values") %>%
   FitFlextableToPage()

```

### All Incentive Commercial and Industrial Properties

```{r}
#| label: tbl-2022-county-incentive-sums
#| tbl-cap: "County level stats aggregated from PIN level data. Includes ALL commercial and industrial **incentive** class PINs."
#| layout-ncol: 2


q = c(.25, .5, .75)

county_incentives <- df_temp |>
  # Filter to industrial and commercial properties: 26969 obs.
  filter(land_use %in% c("Industrial", "Commercial")) |>
  filter(incent_prop == "Incentive") |>

  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  mutate(fmv = ifelse(is.na(fmv), 0, fmv)) |>
  group_by(year#, incent_prop, land_use 
) |>
  arrange(desc(fmv)) %>%
  
  summarize(n_pins = sum(n_pins, na.rm=TRUE), 
            min_fmv_all = min(fmv, na.rm = TRUE),
            quant25_all_fmv = round(quantile(fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(fmv, probs = q[3])),
            max_fmv_all = max(fmv, na.rm=TRUE),
            fmv_mean = mean(fmv, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE))

county_incentives %>% filter(year == 2022) %>%  
  pivot_longer(cols = n_pins:fmv, names_to = "Variables") %>% select(-year) %>%
   mutate(Variables = ifelse(Variables %in% df_labels$vars_4fn, df_labels$labels_4fn, "Need Name")) %>% 
   flextable() %>%
   set_header_labels(value = "2022 Values") %>%
   FitFlextableToPage()


county_incentives %>% filter(year == 2021) %>% 
  pivot_longer(cols = n_pins:fmv, names_to = "Variables") %>% select(-year) %>%
   mutate(Variables = ifelse(Variables %in% df_labels$vars_4fn, df_labels$labels_4fn, "Need Name")) %>% 
   flextable() %>%
   set_header_labels(value = "2021 Values") %>%
   FitFlextableToPage()
```

### Industrial Incentive vs. Commercial Incentive

```{r}
#| label: tbl-2022-create-county-trends
#| tbl-cap: "**Industrial Incentive vs Commercial Incentive Values** Aggregated from PIN level data. Tax Years 2022 and 2021."


county_trends <- df_temp |> #see df_temp created above

  # Filter to industrial and commercial properties
  filter(land_use %in% c("Industrial", "Commercial")) |>
  # Want to remove the NFPs: 24882 obs.
  #filter(!between(class, 400, 499)) |>
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  mutate(fmv = ifelse(is.na(fmv), 0, fmv)) |>
  group_by(year, incent_prop, land_use) |>
  summarize(n_pins = sum(n_pins, na.rm=TRUE), 
            av = sum(av, na.rm=TRUE), 
            fmv = sum(fmv, na.rm=TRUE),
            ) |>
  ungroup() |>
  arrange(year) 

county_trends <- county_trends |>
  group_by(incent_prop, land_use) |>
  arrange(year) |>
  mutate(lag_n_pins = lag(n_pins),
         lag_av = lag(av),
         lag_fmv = lag(fmv)) |>
  ungroup() |>
  
  # Select relevant variables
  select(year, land_use, incent_prop, n_pins, lag_n_pins, av, lag_av, 
         fmv, lag_fmv) |>
  # Calculate YoY deltas
  group_by(year, land_use, incent_prop) |>
  mutate(yoy_pin_delta = (n_pins - lag_n_pins) / lag_n_pins,
         yoy_av_delta = (av - lag_av) / lag_av,
         yoy_fmv_delta = (fmv - lag_fmv) / lag_fmv)

county_trends %>% filter(year == 2022)  %>% 
  pivot_longer(cols = n_pins:yoy_fmv_delta, names_to = "Variables")  %>%
   select(-year) %>%
 #  mutate(Variables = ifelse(Variables %in% df_labels$vars_4fn, df_labels$labels_4fn, "Need Name")) %>% 
  flextable()



county_trends |> 
  filter(year == 2021) |> flextable()

```

## Analysis at Municipal Level (to find median municipalities)

### 2022

```{r}
#| label: tbl-2022-muni-sums
#| tbl-cap: "Industrial and Commercial Properties aggregated to Municipality level. Includes all industrial and commercial properties, both with and without incentives. (2022)"


# Make new and select relevant county-wide PIN variables
muni_data <- df_temp |>
  # Filter to industrial and commercial properties: 26969 obs.
  filter(land_use %in% c("Industrial", "Commercial")) |>
  
  # Want to remove the NFPs <---- do we though?? not for profits get incentive classifications too?
  # filter(!between(class, 400, 499)) |>
  
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  mutate(fmv = ifelse(is.na(fmv), 0, fmv)) |>

  group_by(year, clean_name#, incent_prop, land_use
  ) |>
  arrange(desc(fmv)) %>%

  summarize(n_pins = sum(n_pins, na.rm=TRUE), 
            min_fmv_all = min(fmv, na.rm = TRUE),
            quant25_all_fmv = round(quantile(fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(fmv, probs = q[3])),
            max_fmv_all = max(fmv, na.rm=TRUE),
            fmv_mean = mean(fmv, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE))
muni_data %>% filter(year == 2022)
```

### 2021

```{r}
#| label: tbl-2021-muni-sums
#| tbl-cap: "Industrial and Commercial Properties aggregated to Municipality level. Includes all industrial and commercial properties, both with and without incentives. (2021)"

muni_data |>
  filter(year == 2021)

```

### 2022

```{r}
#| label: tbl-2022-muni-landuse-sums
#| tbl-cap: "Industrial and Commercial Properties aggregated to Municipality level. Includes all industrial and commercial properties, both with and without incentives. (2022)"


# Make new and select relevant county-wide PIN variables
muni_landuse_data <- df_temp |>
  # Want to remove the NFPs
  #filter(!between(class, 400, 499)) |>
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
    mutate(fmv = ifelse(is.na(fmv), 0, fmv)) |>

  group_by(year, clean_name, incent_prop, land_use) |>
  summarize(n_pins = sum(n_pins, na.rm=TRUE), 
            min_fmv_all = min(fmv, na.rm = TRUE),
            quant25_all_fmv = round(quantile(fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(fmv, probs = q[3])),
            max_fmv_all = max(fmv, na.rm=TRUE),
            fmv_mean = mean(fmv, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE))

muni_landuse_data %>% filter(year == 2022)
```

### 2021

```{r}
#| label: tbl-2021-muni-landuse-sums
#| tbl-cap: "Industrial and Commercial Properties aggregated to Municipality level. Includes all industrial and commercial properties, both with and without incentives. (2021)"

muni_landuse_data |>
  filter(year == 2021)

```

### 2022

```{r}
#| label: tbl-2022-muni-incentive-sums
#| tbl-cap: "Incentive Class Industrial and Commercial Properties aggregated to Municipality level. Includes all industrial and commercial properties with incentives property classes (including 400-level properties) (2022)"


# Make new and select relevant county-wide PIN variables
muni_incentive_data <- df_temp |>
  # Want to remove the NFPs
  filter(incent_prop == "Incentive") |>
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  mutate(fmv = ifelse(is.na(fmv), 0, fmv)) |>

  group_by(year, clean_name) |>
  summarize(n_pins = sum(n_pins, na.rm=TRUE), 
            min_fmv_all = min(fmv, na.rm = TRUE),
            quant25_all_fmv = round(quantile(fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(fmv, probs = q[3])),
            max_fmv_all = max(fmv, na.rm=TRUE),
            fmv_mean = mean(fmv, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE))

muni_incentive_data %>% filter(year == 2022)
```

### 2021

```{r}
#| label: tbl-2021-muni-incentive-sums
#| tbl-cap: "Incentive Class Industrial and Commercial Properties aggregated to Municipality level. Includes all industrial and commercial properties with incentives property classes (including 400-level properties) (2021)"

muni_incentive_data |>
  filter(year == 2021)

```

### Finding the "Median" Municipality


```{r}
#| label: tbl-2022-countyfrommuni
#| tbl-cap: "For all commercial and industrial PINs. County level stats created from the aggregated municipalities. (2022)"


county_total_from_muni_data <- muni_data |>
  group_by(year) |>
  summarize(
         cty_pins = sum(n_pins, na.rm=TRUE),
            min_fmv_all = min(min_fmv_all, na.rm = TRUE),
            quant25_all_fmv = round(quantile(quant25_all_fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(quant50_all_fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(quant75_all_fmv, probs = q[3])),
            max_fmv_all = max(max_fmv_all, na.rm=TRUE),
            fmv_mean = mean(fmv_mean, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE))

county_total_from_muni_data %>% filter(year == 2022)
```

```{r}
#| label: tbl-2021-countyfrommuni
#| tbl-cap: "For all commercial and industrial PINs. County level stats created from the aggregated municipalities. (2021)"

county_total_from_muni_data |>
  filter(year == 2021)

```

```{r 2022_munis_to_county}
county_incent_from_munis <- muni_incentive_data %>%
   group_by(year) |>
  summarize(
     n_munis = n(),
         cty_pins = sum(n_pins, na.rm=TRUE),
            min_fmv_all = min(min_fmv_all, na.rm = TRUE),
            quant25_all_fmv = round(quantile(quant25_all_fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(quant50_all_fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(quant75_all_fmv, probs = q[3])),
            max_fmv_all = max(max_fmv_all, na.rm=TRUE),
            fmv_mean = mean(fmv_mean, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE), 
        
         )
county_incent_from_munis %>% filter(year == 2022)
```

```{r 2021_munis_to_county}

county_incent_from_munis |>
  filter(year == 2021)

```

```{r}
#| label: tbl-2022-countyfrommuni-incentiveprops
#| tbl-cap: "For all commercial and industrial PINs. County level stats created from the aggregated municipalities. (2022)"

county_landuse_incentives <- muni_landuse_data |>
  filter(incent_prop == "Incentive") |>
  group_by(year, land_use) |>
  summarize(
         cty_pins = sum(n_pins, na.rm=TRUE),
            min_fmv_all = min(min_fmv_all, na.rm = TRUE),
            quant25_all_fmv = round(quantile(quant25_all_fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(quant50_all_fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(quant75_all_fmv, probs = q[3])),
            max_fmv_all = max(max_fmv_all, na.rm=TRUE),
            fmv_mean = mean(fmv_mean, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE),
         muni_count = n()) |>
  ungroup() |>
    group_by(year) |>
  mutate(
         tot_cty_pins = sum(cty_pins, na.rm=TRUE),
            tot_min_fmv_all = min(min_fmv_all, na.rm = TRUE),
            tot_quant25_all_fmv = round(quantile(quant25_all_fmv, probs = q[1], na.rm=TRUE)),
            tot_quant50_all_fmv = round(quantile(quant50_all_fmv, probs = q[2], na.rm=TRUE)),
            tot_quant75_all_fmv = round(quantile(quant75_all_fmv, probs = q[3], na.rm=TRUE)),
            tot_max_fmv_all = max(max_fmv_all, na.rm=TRUE),
            tot_fmv_mean = mean(fmv_mean, na.rm=TRUE),
            tot_fmv = sum(fmv, na.rm=TRUE))
county_landuse_incentives %>% filter(year == 2022)
```

```{r}
#| label: tbl-2021-countyfrommuni-incentiveprops
#| tbl-cap: "For all commercial and industrial PINs. County level stats created from the aggregated municipalities. (2021)"

county_landuse_incentives |>
  filter(year == 2021)

```

```{r }
#| label: tbl-2022-countyfrommuni-incentiveprops-together
#| tbl-cap: "For all incentive commercial and industrial PINs. County level stats created from the aggregated municipalities. (2022)"

county_landuse_incentives <- muni_landuse_data |>
  filter(incent_prop == "Incentive") |>
  group_by(year) |>
  summarize(
         cty_pins = sum(n_pins, na.rm=TRUE),
            min_fmv_all = min(min_fmv_all, na.rm = TRUE),
            quant25_all_fmv = round(quantile(quant25_all_fmv, probs = q[1])),
            quant50_all_fmv = round(quantile(quant50_all_fmv, probs = q[2])),
            quant75_all_fmv = round(quantile(quant75_all_fmv, probs = q[3])),
            max_fmv_all = max(max_fmv_all, na.rm=TRUE),
            fmv_mean = mean(fmv_mean, na.rm=TRUE),
            fmv = sum(fmv, na.rm=TRUE)) |>
  ungroup() |>
    group_by(year) |>
  mutate(
         tot_cty_pins = sum(cty_pins, na.rm=TRUE),
            tot_min_fmv_all = min(min_fmv_all, na.rm = TRUE),
            tot_quant25_all_fmv = round(quantile(quant25_all_fmv, probs = q[1])),
            tot_quant50_all_fmv = round(quantile(quant50_all_fmv, probs = q[2])),
            tot_quant75_all_fmv = round(quantile(quant75_all_fmv, probs = q[3])),
            tot_max_fmv_all = max(max_fmv_all, na.rm=TRUE),
            tot_fmv_mean = mean(fmv_mean, na.rm=TRUE),
            tot_fmv = sum(fmv, na.rm=TRUE))

county_landuse_incentives %>% filter(year == 2022)
```

```{r}
#| label: tbl-2021-countyfrommuni-incentiveprops-together
#| tbl-cap: "For all incentive commercial and industrial PINs. County level stats created from the aggregated municipalities. (2021)"

county_landuse_incentives |>
  filter(year == 2021)

```

## 2022 Summary stats

```{r summ_stats_2022}
# county_muni_landuse_mean <- df_temp |>
#   ungroup() |>
#   group_by(year, land_use) |>
#   summarize(n_pins = sum(n_pins, na.rm=TRUE), 
#             min_fmv_all = min(fmv, na.rm = TRUE),
#             quant25_all_fmv = round(quantile(fmv, probs = q[1])),
#             quant50_all_fmv = round(quantile(fmv, probs = q[2])),
#             quant75_all_fmv = round(quantile(fmv, probs = q[3])),
#             max_fmv_all = max(fmv, na.rm=TRUE),
#             fmv_mean = mean(fmv, na.rm=TRUE),
#             fmv = sum(fmv, na.rm=TRUE))


# county_landuse_incentive_mean <- muni_data |>
#   ungroup() |>
#   group_by(year, land_use, incent_prop) |>
#   summarize(landuse_avg_fmv = mean(fmv),
#          landuse_cty_pins = sum(n_pins))

# MEAN FMV: 69,337,420
# MEAN IND. FMV: 86,530,848      AWM MEAN IND. number 2021:   $112,294,640
#                                MEAN IND. INCENT. FMV :       $86,530,848
# MEAN COMM. FMV: 48,511,577     AWM MEAN COMMERCIAL 2021:    $416,168,914
#                                MEAN COM INCENT. FMV =        $48,511,577
# Tot PINs: 3652
# Comm. PINs.: 835
# Ind. PINs: 2817
  
muni_medians_2022 <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name, land_use) |>
  summarize(pins = sum(n_pins),
         fmv = sum(fmv),
         mean_fmv =mean(fmv))


#### MEDIANS ####

## MEDIAN FMV (all): 22256970 (Blue Island)
## MEDIAN FMV (ind): 24673650 (Calumet City)
## MEDIAN FMV (comm): 12054120 (Midlothian)
## MEDIAN PINs (all): 17 (Maywood, Summit)
## MEDIAN PINs (ind): 19 (Northlake)
## MEDIAN PINs (comm): 8 (Glenwood)
  

sum_pins_2022 <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_fmv_2022 <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sum_ind_pin_2022 <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_ind_fmv_2022 <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sum_comm_pin_2022 <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_comm_fmv_2022 <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sums_table_2022 <- bind_cols(sum_pins_2022, sum_fmv_2022, sum_ind_pin_2022, sum_ind_fmv_2022, sum_comm_pin_2022, sum_comm_fmv_2022)

#write_csv(sums_table_2022, "sums_table2022.csv")

sums_table_2022

```


```{r perc_tables}
# What if I log it?
# 

# MEAN FMV %: 0.1027012
# MEAN IND. FMV %: 0.07020653
# MEAN COMM. FMV %: 0.03249465
# Tot PINs %: 0.0381394
# Comm. PINs. %: 0.008720262
# Ind. PINs %: 0.029419137
 

county_mean_df <- muni_landuse_data |>
  filter(year == 2021) |>
  mutate(county_pins = sum(n_pins),
         county_fmv = sum(fmv)) |>
  group_by(incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  group_by(land_use) |>
  reframe(pin_perc = sum(incent_pin_count)/county_pins, fmv_perc = sum(incent_fmv)/county_fmv) |>
  distinct()

#### MEDIANS ####

## MEDIAN % FMV (all): 0.0779268003
## MEDIAN % FMV (ind): 0.331106240
## MEDIAN % FMV (comm): 0.0628703243
## MEDIAN % PINs (all): 0.0352112676
## MEDIAN % PINs (ind): 0.18181818
## MEDIAN % PINs (comm): 0.013245033

med_percs_df <- muni_landuse_data |>
  filter(year == 2021) |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  filter(incent_pin_muni_perc != 0,
         incent_fmv_muni_perc != 0) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct()


#############

pin_perc <- muni_landuse_data |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)

perc_ind_pin <- muni_landuse_data |>
  filter(year == 2021) |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)

perc_comm_pin <- muni_landuse_data |>
  filter(land_use == "Commercial") |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)
```


```{r perc_tables-fmv, eval = FALSE}
fmv_perc <- muni_landuse_data |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

fmv_ind_perc <- muni_landuse_data |>
  filter(land_use == "Industrial") |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

fmv_comm_perc <- muni_landuse_data |>
  filter(land_use == "Commercial") |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

perc_table <- bind_cols(pin_perc, perc_ind_pin, perc_comm_pin, fmv_perc, fmv_ind_perc, fmv_comm_perc)

write_csv(perc_table, "perc_table2021.csv")
perc_table
```


## 2022 Summary stats

```{r export-sums2022}
# county_muni_landuse_mean <- df_temp |>
#   ungroup() |>
#   group_by(year, land_use) |>
#   summarize(n_pins = sum(n_pins, na.rm=TRUE), 
#             min_fmv_all = min(fmv, na.rm = TRUE),
#             quant25_all_fmv = round(quantile(fmv, probs = q[1])),
#             quant50_all_fmv = round(quantile(fmv, probs = q[2])),
#             quant75_all_fmv = round(quantile(fmv, probs = q[3])),
#             max_fmv_all = max(fmv, na.rm=TRUE),
#             fmv_mean = mean(fmv, na.rm=TRUE),
#             fmv = sum(fmv, na.rm=TRUE))


# county_landuse_incentive_mean <- muni_data |>
#   ungroup() |>
#   group_by(year, land_use, incent_prop) |>
#   summarize(landuse_avg_fmv = mean(fmv),
#          landuse_cty_pins = sum(n_pins))

# MEAN FMV: 69,337,420
# MEAN IND. FMV: 86,530,848      AWM MEAN IND. number 2021:   $112,294,640
#                                MEAN IND. INCENT. FMV :       $86,530,848
# MEAN COMM. FMV: 48,511,577     AWM MEAN COMMERCIAL 2021:    $416,168,914
#                                MEAN COM INCENT. FMV =        $48,511,577
# Tot PINs: 3652
# Comm. PINs.: 835
# Ind. PINs: 2817
  
muni_medians <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name, land_use) |>
  summarize(pins = sum(n_pins),
         fmv = sum(fmv),
         mean_fmv =mean(fmv))


#### MEDIANS ####

## MEDIAN FMV (all): 22256970 (Blue Island)
## MEDIAN FMV (ind): 24673650 (Calumet City)
## MEDIAN FMV (comm): 12054120 (Midlothian)
## MEDIAN PINs (all): 17 (Maywood, Summit)
## MEDIAN PINs (ind): 19 (Northlake)
## MEDIAN PINs (comm): 8 (Glenwood)
  

sum_pins <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_fmv <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sum_ind_pin <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_ind_fmv <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sum_comm_pin <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_comm_fmv <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sums_table <- bind_cols(sum_pins, sum_fmv, sum_ind_pin, sum_ind_fmv, sum_comm_pin, sum_comm_fmv)

write_csv(sums_table, "sums_table2022.csv")

sums_table

```

```{r perc_tables2022}


# MEAN FMV %: 0.1027012
# MEAN IND. FMV %: 0.07020653
# MEAN COMM. FMV %: 0.03249465
# Tot PINs %: 0.0381394
# Comm. PINs. %: 0.008720262
# Ind. PINs %: 0.029419137
 

county_mean_df <- muni_landuse_data |>
  filter(year == 2022) |>
  mutate(county_pins = sum(n_pins),
         county_fmv = sum(fmv)) |>
  group_by(incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  group_by(land_use) |>
  reframe(pin_perc = sum(incent_pin_count)/county_pins, fmv_perc = sum(incent_fmv)/county_fmv) |>
  distinct()

#### MEDIANS ####

## MEDIAN % FMV (all): 0.0779268003
## MEDIAN % FMV (ind): 0.331106240
## MEDIAN % FMV (comm): 0.0628703243
## MEDIAN % PINs (all): 0.0352112676
## MEDIAN % PINs (ind): 0.18181818
## MEDIAN % PINs (comm): 0.013245033

med_percs_df <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  filter(incent_pin_muni_perc != 0,
         incent_fmv_muni_perc != 0) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct()


#############

pin_perc <- muni_landuse_data |>
  filter(year == 2022) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)

perc_ind_pin <- muni_landuse_data |>
  filter(year == 2022) |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)

perc_comm_pin <- muni_landuse_data |>
  filter(land_use == "Commercial") |>
  filter(year == 2022) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)
```


```{r perc_tables-fmv2022}
fmv_perc <- muni_landuse_data |>
  filter(year == 2022) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

fmv_ind_perc <- muni_landuse_data |>
  filter(land_use == "Industrial") |>
  filter(year == 2022) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

fmv_comm_perc <- muni_landuse_data |>
  filter(land_use == "Commercial") |>
  filter(year == 2022) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

perc_table <- bind_cols(pin_perc, perc_ind_pin, perc_comm_pin, fmv_perc, fmv_ind_perc, fmv_comm_perc)

perc_table
write_csv(perc_table, "perc_table_2022.csv")

```




# Graphs



```{r}
#| label: fig-cook-PC-change
#| fig-cap: "Annual Change in Industrial and Commercial PIN Counts"
#| eval: false

county_trends |>
  filter(land_use == "Industrial" | land_use == "Commercial") |>
  group_by(incent_prop) |>
  summarize() |>
  ggplot() + 
  geom_line(aes(x = year, y = yoy_pin_delta, color = incent_prop, group = incent_prop)) +
  theme_classic()
  
```
