---
title: "Incentive Classification Use Over Time (2011-2021)"
subtitle: "PIN-level Trends in Value & Frequency of Use"
author: "Michael Van Hulle"
date: "June 17, 2024"
format: 
  html:
    #embed-resources: true
    theme: lumen
    code-fold: true
   # code-line-numbers: true
    #code-overflow: wrap
    toc: true
    toc-location: left
knitr: 
  opts_chunk:
    warning: true
    message: false
---

```{r setup}
# Load libraries

library(tidyverse)
library(glue)
library(DT)
library(flextable)

# Set table formatting defaults--change theme to something less ugly.

set_flextable_defaults(theme_fun = theme_vanilla, 
                       padding = 2,
                       line_spacing = 1,
                       big.mark = ",",
                       )

options(DT.options = list())

```


```{r load_data}
#| output: FALSE

# Read in muni class level data 2006-2021: 87610 obs of 41 variables
df <- read_csv("./Output/ptaxsim_muni_class_summaries_2006-2022.csv") |>
  rename(n_pins = muni_c_pins_in_muni,
         av = muni_c_av) |>
  as.data.frame()

# Import relevant variables from extended class dictionary
class_dict <- read_csv("./Necessary_Files/class_dict_expanded.csv") |>
  select(class = class_code, 
         land_use = Alea_cat, 
         incent_prop, 
         ar = assess_ratio) |>
  as.data.frame()

# Join summaries w/ class dictionary
df_temp <- left_join(df, class_dict, by = "class")

# Make new and select relevant county-wide PIN variables
muni_data <- df_temp |>
  
  # Filter to years 2010-2021
  filter(between(year, 2006, 2022)) |>
  # Filter to industrial and commercial properties: 26969 obs.
  filter(land_use %in% c("Industrial", "Commercial")) |>
  # Want to remove the NFPs
  filter(!between(class, 400, 499)) |>
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  # Calculate AV values if no incentives (could have calculated with AR)
  mutate(no_incent_av = fmv*.25) |>
  # Reframe to relevant variables
  group_by(year, clean_name, incent_prop, land_use) |>
  reframe(n_pins = sum(n_pins), 
          av = sum(av), 
          fmv = sum(fmv))
```


```{r create-lag-variables}
###RETURN TO THIS SECTION TO CREATE MUNI LAGS###
  
  # Calculate lags RETURN TO THIS
  # group_by(clean_name, incent_prop, land_use) |>
  # mutate(lag_n_pins = lag(n_pins),
  #        lag_av = lag(av),
  #        lag_fmv = lag(fmv)) |>
  # ungroup() |>
  # # Remove 2010 from df
  # filter(year != 2010) |>
  # # Select relevant variables
  # select(year, clean_name, land_use, incent_prop, n_pins, lag_n_pins, av, lag_av, 
  #        fmv, lag_fmv) |>
  # # Calculate YoY deltas
  # mutate(yoy_pin_delta = (n_pins - lag_n_pins) / lag_n_pins,
  #        yoy_av_delta = (av - lag_av) / lag_av,
  #        yoy_fmv_delta = (fmv - lag_fmv) / lag_fmv) |>
  # ungroup() |>
  # # Select Useful Variables
  # select(year, clean_name, incent_prop, land_use, n_pins, yoy_pin_delta, 
  #        av, yoy_av_delta, fmv, yoy_fmv_delta)
```


```{r create-county-trends}
county_trends <- df_temp |> #see df_temp created above

  # Filter to industrial and commercial properties
  filter(land_use %in% c("Industrial", "Commercial")) |>
  # Want to remove the NFPs: 24882 obs.
  filter(!between(class, 400, 499)) |>
  # Calculate "FMV"
  mutate(fmv = av/ar) |>
  # Calculate AV values if no incentives (could have calculated with AR)
  mutate(no_incent_av = fmv*.25) |>
   # Reframe to relevant variables
  group_by(year, incent_prop, land_use) |>
  summarize(n_pins = sum(n_pins), 
            av = sum(av), 
            fmv = sum(fmv),
            .groups = 'drop') |>
  # Calculate lags
  ungroup() |>
  arrange(year) 

county_trends <- county_trends |>
  group_by(incent_prop, land_use) |>
  mutate(lag_n_pins = lag(n_pins),
         lag_av = lag(av),
         lag_fmv = lag(fmv)) |>
  ungroup() |>
  # # Remove 2010 from df
  # filter(year != 2010) |>
  
  # Remove 2006 from df
    filter(year != 2006) |>

  
  # Select relevant variables
  select(year, land_use, incent_prop, n_pins, lag_n_pins, av, lag_av, 
         fmv, lag_fmv) |>
  # Calculate YoY deltas
  group_by(year, land_use, incent_prop) |>
  mutate(yoy_pin_delta = (n_pins - lag_n_pins) / lag_n_pins,
         yoy_av_delta = (av - lag_av) / lag_av,
         yoy_fmv_delta = (fmv - lag_fmv) / lag_fmv) |>
   ungroup() # |>
  # # Select Useful Variables
  # select(year, incent_prop, land_use, n_pins, yoy_pin_delta, 
  #        av, yoy_av_delta, fmv, yoy_fmv_delta)

```

# Tables

```{r sum_tables}

county_mean <- muni_data |>
  ungroup() |>
  filter(year == 2022) |>
  mutate(cty_avg_fmv = mean(fmv),
         cty_pins = sum(n_pins)) |>
  
 # filter(incent_prop == "Incentive") |>
  group_by(land_use) |>
  mutate(cty_avg_fmv = mean(fmv),
         cty_pins = sum(n_pins))  |>
  distinct()

# MEAN FMV: 69337420
# MEAN IND. FMV: 86530848
# MEAN COMM. FMV: 48511577
# Tot PINs: 3652
# Comm. PINs.: 835
# Ind. PINs: 2817
  
muni_medians <- muni_data |>
  filter(year == 2021) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name, land_use) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>  
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(fmv) |>
  distinct()

#### MEDIANS ####

## MEDIAN FMV (all): 22256970 (Blue Island)
## MEDIAN FMV (ind): 24673650 (Calumet City)
## MEDIAN FMV (comm): 12054120 (Midlothian)
## MEDIAN PINs (all): 17 (Maywood, Summit)
## MEDIAN PINs (ind): 19 (Northlake)
## MEDIAN PINs (comm): 8 (Glenwood)
  

sum_pins <- muni_data |>
  filter(year == 2021) |>
  filter(incent_prop == "Incentive") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_fmv <- muni_data |>
  filter(year == 2021) |>
  filter(incent_prop == "Incentive") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sum_ind_pin <- muni_data |>
  filter(year == 2021) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_ind_fmv <- muni_data |>
  filter(year == 2021) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sum_comm_pin <- muni_data |>
  filter(year == 2021) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(pins)) |>
  distinct() |>
  head(11)

sum_comm_fmv <- muni_data |>
  filter(year == 2021) |>
  filter(incent_prop == "Incentive") |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(pins = sum(n_pins),
         fmv = sum(fmv)) |>
  reframe(clean_name, land_use, pins, fmv) |>
  arrange(desc(fmv)) |>
  distinct() |>
  head(11)

sums_table <- bind_cols(sum_pins, sum_fmv, sum_ind_pin, sum_ind_fmv, sum_comm_pin, sum_comm_fmv)

write_csv(sums_table, "sums_table.csv")

sums_table

```

```{r perc_tables}
# What if I log it?
# 

# MEAN FMV %: 0.1027012
# MEAN IND. FMV %: 0.07020653
# MEAN COMM. FMV %: 0.03249465
# Tot PINs %: 0.0381394
# Comm. PINs. %: 0.008720262
# Ind. PINs %: 0.029419137
 

county_mean_df <- muni_data |>
  filter(year == 2021) |>
  mutate(county_pins = sum(n_pins),
         county_fmv = sum(fmv)) |>
  group_by(incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  group_by(land_use) |>
  reframe(pin_perc = sum(incent_pin_count)/county_pins, fmv_perc = sum(incent_fmv)/county_fmv) |>
  distinct()

#### MEDIANS ####

## MEDIAN % FMV (all): 0.0779268003
## MEDIAN % FMV (ind): 0.331106240
## MEDIAN % FMV (comm): 0.0628703243
## MEDIAN % PINs (all): 0.0352112676
## MEDIAN % PINs (ind): 0.18181818
## MEDIAN % PINs (comm): 0.013245033

med_percs_df <- muni_data |>
  filter(year == 2021) |>
  filter(land_use == "Commercial") |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  filter(incent_pin_muni_perc != 0,
         incent_fmv_muni_perc != 0) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct()


#############

pin_perc <- muni_data |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)

perc_ind_pin <- muni_data |>
  filter(year == 2021) |>
  filter(land_use == "Industrial") |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)

perc_comm_pin <- muni_data |>
  filter(land_use == "Commercial") |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_pin_muni_perc)) |>
  distinct() |>
  head(10)
```


```{r perc_tables-fmv}
fmv_perc <- muni_data |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

fmv_ind_perc <- muni_data |>
  filter(land_use == "Industrial") |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

fmv_comm_perc <- muni_data |>
  filter(land_use == "Commercial") |>
  filter(year == 2021) |>
  group_by(clean_name) |>
  mutate(muni_pins = sum(n_pins),
         muni_fmv = sum(fmv)) |>
  ungroup() |>
  group_by(clean_name, incent_prop) |>
  mutate(incent_pin_count = ifelse(incent_prop == "Incentive", n_pins,
         0)) |>
  mutate(non_incent_pin_count = ifelse(incent_prop == "Non-Incentive", n_pins,
         0)) |>
  mutate(incent_fmv = ifelse(incent_prop == "Incentive", fmv,
         0)) |>
  mutate(non_incent_fmv = ifelse(incent_prop == "Non-Incentive", fmv,
         0)) |>
  ungroup() |>
  group_by(clean_name) |>
  mutate(incent_pin_muni_perc = incent_pin_count/muni_pins) |>
  mutate(incent_fmv_muni_perc = incent_fmv/muni_fmv) |>
  reframe(clean_name, incent_pin_muni_perc, incent_fmv_muni_perc) |>
  arrange(desc(incent_fmv_muni_perc)) |>
  distinct() |>
  head(10)

perc_table <- bind_cols(pin_perc, perc_ind_pin, perc_comm_pin, fmv_perc, fmv_ind_perc, fmv_comm_perc)

write_csv(perc_table, "perc_table.csv")

```

# Graphs

```{r}
#| label: fig-cook-n-delta
#| fig-cap: "Annual Change in Industrial and Commercial PIN Counts"

county_trends |>
  filter(land_use == "")
  ggplot(aes(x = year, y = yoy_pin_delta, color = incent_prop, by = incent_prop)) + 
  geom_step() +
  theme_void()
  
###USE PLM FIRST###
