[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Property Taxes in Cook County",
    "section": "",
    "text": "Background Information\nThe following materials are a work in progress based on property tax data released by the Cook County Assessor’s Office (CCAO) and other publicly available data sources. Much of the incorporated data and analysis was prepared, in part, for Cook County’s Property Tax Working Group. This data and analysis accompanies and supplements information in the Exemption White Paper and Addendum, available on GFRC’s website.\nWe are especially indebted to Dan Snow, Rob Ross, and Mike Wu at CCAO for the development and release of PTAXSIM, a package in the R programming language which provides the public with a trove of historical property tax data, without which this analysis would not be possible.\nWe would also like to thank Professors Merriman, Weber, Carroll, and Drucker from UIC’s College of Urban Planning and Public Policy for their support as well as the Chicago Metropolitan Agency for Planning (CMAP) for providing supplemental and background analysis.\nAll data was originally posted by the Cook County Assessor’s Office (CCAO).\nTax data for Cook County was gathered using CCAO’s ptaxsim package and corresponding database.\nAll summarizing of data was done by Research Assistants working for the Government Finance Research Center at the University of Illinois Chicago.\nPlease note that dollars are not inflation adjusted.\nIf ignoring TIFs, the residential share of EAV is:\n\\[\nResidentrialShare = \\frac{TaxableEAV_{residential} - ExemptEAV_{residential}} {TaxableEAV}\n\\]\n\\[\nResidentialShare = \\frac{1-\\lambda}{1-\\lambda-\\psi}\n\\]\n\\[\nTaxableBase = AV_{equalized} - TIFincrement - EAV_{exempt}\n\\]\n\\[\nTIFincrement = AV_{equalized} - EAV_{frozen}\n\\]\nThe aggregate, or composite, tax rate is the sum of the individual taxing agency tax rates, or \\(\\sum(rate_{agency})\\), for all taxing agencies that tax a location. Each unique combination of taxing agencies is assigned a tax code by the assessor’s office.\n\n\nExemption Report Summary of Findings\nUIC’s research led to several main findings:\n\nWhile historical records provide clear reasons for the adoption of homeowner exemptions as a policy tool, current stakeholders throughout Cook County government cannot agree on the public purpose of homestead exemptions, a problem that flows through to properly acknowledging relevant costs, benefits, and stakeholders. Indeed, given divergent policy goals by different stakeholders, any construct of “effectiveness” would be challenging to measure.\nCook County’s property tax system allocates revenue to local governments based on each property owners’ share of that jurisdiction’s total tax base.\nCC’s system of dividing the levy among property owners creates a “zero-sum” game where one taxpayer’s bill must necessarily increase for another taxpayer’s bill to decrease.\nHomeowner exemptions, designed to provide tax release to certain classes of homeowners, decrease property tax bills through a flat reduction in the taxpayer’s contribution to the tax base in EAV.\nExemptions also reduce the tax base, thereby driving tax rates up for all taxpayers (even those that receive exemptions). This push-pull effect causes the true amount of tax liability reduction to be sometimes significantly lower than suggested by government tax bills.\nExemptions are theoretically and practically progressive, bringing greater tax relief to those with the lowest ability to pay (as imperfectly measured by their property’s value).\nAnomalous outcomes can occur due to Cook County’s socio-economic homogeneity. A handful of taxpayers would benefit more from exemptions’ elimination (and the resulting decrease in tax rate) than from the exemption itself.\nThere is no obvious solution to the detrimental effects of exemptions that are endogenous to the property tax system. Any “fix” must come from other revenue.\n\nWe have also appended an explanation of our data sources and how we prepared that data for analysis as well as a mathematical appendix of tedious equations.\n\n\nIncentive Report Summary of Findings\nOur report on incentive property classifications will be released in early 2025.",
    "crumbs": [
      "Background Information"
    ]
  },
  {
    "objectID": "exemption_report_2021.html",
    "href": "exemption_report_2021.html",
    "title": "Exemptions in Cook County - Tax Year 2021",
    "section": "",
    "text": "Cook County’s Use of Homestead Exemptions",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2021</span>"
    ]
  },
  {
    "objectID": "exemption_report_2021.html#cook-countys-use-of-homestead-exemptions",
    "href": "exemption_report_2021.html#cook-countys-use-of-homestead-exemptions",
    "title": "Exemptions in Cook County - Tax Year 2021",
    "section": "",
    "text": "County-Wide Exemption Summary Statistics (Tax Year 2021)\n\n\nCode\nyear_examples &lt;- c(2021)\n\nfor(i in year_examples){\n  tbl &lt;- muni_cl_sums |&gt; \n  filter(year == i) |&gt;\n  group_by(year) |&gt; \n  summarize(AV = sum(muni_c_av), \n            EAV = sum(muni_c_eav), \n            Eq_AV = sum(muni_c_equalized_av),\n            'Taxed EAV' = sum(muni_c_current_taxable_eav),\n            'All Exemptions' = sum(muni_c_all_exemptions), \n            'GHE' = sum(muni_c_exe_homeowner), \n            'Senior Exemp.' = sum(muni_c_exe_senior), \n            'Freeze Exemp.' = sum(muni_c_exe_freeze), \n            'PINs in Muni' = sum(muni_c_pins_in_muni),\n            'PINs with Exemptions' = sum(muni_c_has_HO_exemp))  |&gt; \n  pivot_longer(cols = c(AV:'PINs with Exemptions'), \n               names_to = \"Totals\", values_to = \"Values\")\n}\n\ntbl |&gt; flextable::flextable()\n\n\n\n\n\nyearTotalsValues2,021AV70,733,758,7492,021EAV212,387,387,3842,021Eq_AV212,392,258,5542,021Taxed EAV175,164,233,3922,021All Exemptions16,110,627,3712,021GHE10,161,823,9442,021Senior Exemp.2,627,007,6632,021Freeze Exemp.3,229,599,1222,021PINs in Muni1,864,5942,021PINs with Exemptions1,028,964\n\n\n\nTable 1.1\n\n\n\n\nEq_AV is the 2021 equalization factor multiplied by the assessed value of all property and can be thought of as “EAV pre-exemption.” The general homestead exemption accounts for the vast majority of exempt EAV.\n\n\nFigure 3.\n\n\nCode\nyear_examples &lt;- c(2021)\n\nfor(i in year_examples){\n\nmedian_exempt &lt;- muni_sums |&gt;\n  filter(year==i)|&gt;\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv\n) |&gt; \n  select(pct_fmv_exempt)\n\nmidpoint = scales::percent(median(median_exempt$pct_fmv_exempt), accuracy = 0.01)\n\nprint(muni_sums |&gt;\n  filter(year==i)|&gt;\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv ) |&gt;\n    mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) |&gt;\n full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) |&gt;\n  ggplot(aes(fill = pct_fmv_exempt)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void()+ \n  labs(title = paste0(i), \n       subtitle =  \"Exempt FMV as a Percent of Municipality-Wide FMV\",\n       caption = sprintf(\"The County-wide municipal-median is %s\", midpoint)) +\n    theme_void() + \n  theme(axis.ticks = element_blank(), \n        axis.text = element_blank())+\n   scale_fill_steps2(high = \"darkblue\", low = \"black\",  mid = \"beige\",\n                       n.breaks = 7, show.limits=TRUE,\n                       na.value = NA,\n                    nice.breaks = FALSE,\n                   midpoint = median(median_exempt$pct_fmv_exempt),\n                        name = \"% Exempt\", label = scales::percent))\n}\n\n\n\n\nCode\nyear_examples &lt;- c(2021)\n\nfor(i in year_examples){\n\nmedian_exempt &lt;- muni_sums |&gt;\n  filter(year==i)|&gt;\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv\n) |&gt; \n  select(pct_fmv_exempt)\n\nmidpoint = scales::percent(median(median_exempt$pct_fmv_exempt), accuracy = 0.01)\n\nprint(muni_sums |&gt;\n  filter(year==i)|&gt;\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv ) |&gt;\n    mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) |&gt;\n full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) |&gt;\n  ggplot(aes(fill = pct_fmv_exempt)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void()+ \n  labs(title = paste0(i), \n       subtitle =  \"Exempt FMV as a Percent of Municipality-Wide FMV\"#,\n       #caption = sprintf(\"The County-wide municipal-median is %s\", midpoint)\n       ) +\n  theme(axis.ticks = element_blank(), \n        axis.text = element_blank())+\n   scale_fill_steps(high = \"darkblue\", low = \"pink\",\n                       n.breaks = 5, show.limits=TRUE,\n                    limits = c(0, 0.35),\n                       na.value = \"gray50\",\n                    nice.breaks = FALSE,\n                        name = \"% Exempt\", label = scales::percent))\n}\n\n\n\n\n\n\n\n\n\nThe County-wide municipal-median percent of FMV exempt from property taxes in 2021 was 14.40% (Muni Name).\nThe percent of municipal EAV exempt from property taxes are greatest across Cook County’s south suburbs and lowest in the northermost suburbs of the county.\n\n\nFigure 4. Exempt EAV: City vs. Suburbs\n\n\nCode\nmuni_cl_sums |&gt; \n  filter(year == 2021) |&gt; \n  select(clean_name, muni_c_exe_homeowner:muni_c_exe_vet_dis) |&gt;\n  mutate(clean_name = ifelse(is.na(clean_name), \"Unincorporated\", clean_name),\n    Geography = ifelse(clean_name == \"Chicago\", \"City\", \"Suburbs\"),\n         Geography = ifelse(is.na(clean_name), \"Unincorporated\", Geography),\n         Geography = factor(Geography, levels = c(\"Suburbs\", \"City\", \"Unincorporated\"))) |&gt;\n  group_by(Geography) |&gt;\n  summarize(\"GHE\" = sum(muni_c_exe_homeowner, na.rm=TRUE),\n            \"Senior Homestead\" = sum(muni_c_exe_senior, na.rm=TRUE),\n            \"Senior Freeze\" = sum(muni_c_exe_freeze, na.rm=TRUE),\n            \"Other Exemptions\" = sum(muni_c_exe_longtime_homeowner+muni_c_exe_disabled+muni_c_exe_vet_returning+ muni_c_exe_vet_dis_lt50 + muni_c_exe_vet_dis_50_69+muni_c_exe_vet_dis_ge70)) |&gt;\n  pivot_longer(cols = c(`GHE`:`Other Exemptions`), names_to = \"Type\" ) |&gt;\n   mutate(Type = factor(Type, levels = c(\"GHE\", \"Senior Homestead\", \"Senior Freeze\", \"Other Exemptions\" \n                                         #\"Senior Freeze\", \"Senior Homestead\", \"GHE\"\n                                        )\n                                        )) |&gt;\n  ggplot(aes(x=Type, y = value/1000000000, fill = Geography\n             )) +\n  \n  geom_col(\n           position = \"dodge\" \n          ) + \n  theme_minimal() +\n  labs(title = \"Exempt EAV in Cook County, Tax Year 2021\", \n       subtitle = \"by Type and Geography\", \n       y = \"EAV (Billions)\", x = \"Exemption Type\") + \n  scale_y_continuous() +\n  scale_fill_manual(values = c(\"blue3\", \"deepskyblue3\", \"gray\"), )\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 1.2: Exempt EAV in Cook County, Tax Year 2021 Exemption use varies between suburban Cook County ($9.7B EAV) and the City of Chicago ($7.0B EAV), which may point to broader socioeconomic patterns as well as residents’ eligibility and update. Note: Our current calculations undervalue the disabled veterans exemption.\n\n\n\n\nExemption use varies between suburban Cook County ($9.7B EAV) and the City of Chicago ($7.0B EAV), which may point to broader socioeconomic patterns as well as residents’ eligibility and update.\n\n\n\n\n\nFigure 5. Value of residential exemptions by type in Cook County over time, Tax Years 2006 - 2021\n\n\nCode\nmuni_cl_sums |&gt; \n  select(year, muni_c_exe_homeowner:muni_c_exe_vet_dis) |&gt;\n  filter(year &lt;= 2021) |&gt;\n  group_by(year) |&gt;\n  summarize(\"GHE\" = sum(muni_c_exe_homeowner, na.rm=TRUE),\n            \"Senior Homestead\" = sum(muni_c_exe_senior, na.rm=TRUE),\n            \"Senior Freeze\" = sum(muni_c_exe_freeze, na.rm=TRUE),\n            \"Other Exemptions\" = sum(muni_c_exe_longtime_homeowner + muni_c_exe_disabled + muni_c_exe_vet_returning+ muni_c_exe_vet_dis_lt50 + muni_c_exe_vet_dis_50_69+muni_c_exe_vet_dis_ge70, na.rm = T)) |&gt;\n  pivot_longer(cols = c(`GHE`:`Other Exemptions`), names_to = \"Type\" ) |&gt;\n  mutate(Type = factor(Type, levels = c(#\"GHE\", \"Senior Homestead\", \"Senior Freeze\", \n                                        \"Other Exemptions\", \"Senior Freeze\", \"Senior Homestead\", \"GHE\"))) |&gt;\n  ggplot(aes(x=year, y = value/1000000000, fill = Type)) +\n  \n  geom_bar( stat = \"identity\" ) + \n  theme_minimal() +\n  labs(title = \"Residential Exempt EAV in Cook County\", \n       subtitle = \"by Type and Geography, 2006-2021\", \n       y = \"EAV (Billions)\", x =\"\") +\n  scale_fill_manual(values = c(\"chartreuse2\",  \"darksalmon\", \"brown2\", \"blue4\" )) +\n                    scale_x_continuous(breaks = c(2006, 2010, 2015, 2020))\n\n\n\n\n\n\n\n\n\nTrends in the total EAV reductions due to homestead exemptions reflect both real estate market shifts and the legislative changes in their availability, eligibility, and value.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2021</span>"
    ]
  },
  {
    "objectID": "exemption_report_2021.html#effect-on-composite-tax-rates",
    "href": "exemption_report_2021.html#effect-on-composite-tax-rates",
    "title": "Exemptions in Cook County - Tax Year 2021",
    "section": "Effect on Composite Tax Rates",
    "text": "Effect on Composite Tax Rates\n\nNOTE: I THINK WE WANT THIS CHUNK ON THE DATA PAGE\n\n\nCode\ncross_county_lines &lt;- c(\"030440000\", \"030585000\", \"030890000\", \"030320000\", \"031280000\",\n                        \"030080000\", \"030560000\", \"031120000\", \"030280000\", \"030340000\",\n                        \"030150000\",\"030050000\", \"030180000\",\"030500000\", \"031210000\")\n\neq_factor &lt;- 3.0027\n\n\nincentive_majorclasses &lt;- c(\"6\", \"7A\", \"7B\", \"8A\", \"8B\")\n\ncommercial_classes &lt;- c(401:435, 490, 491, 492, 496:499,\n                        500:535,590, 591, 592, 597:599, \n                        700:799,\n                        800:835, 891, 892, 897, 899)  \n\nindustrial_classes &lt;- c(480:489,493, \n                        550:589, 593,\n                        600:699,\n                        850:890, 893\n                        )\n\nptax_pins &lt;- read_csv(\"../Output/Dont_Upload/0_Joined_PIN_data_2023.csv\") |&gt; select(-c(eq_av, propclass_1dig))\n\n\nptax_pins &lt;- ptax_pins |&gt; \n  mutate(class_1dig = str_sub(class, 1,1),\n         class_group = case_when(\n          (class_1dig == 5 & class %in% commercial_classes) ~ \"5A\",\n          (class_1dig == 5 & class %in% industrial_classes) ~ \"5B\",\n          class_1dig == 7 &  class &lt; 742 ~ \"7A\",\n          class_1dig == 7 &  class &gt;= 742 ~ \"7B\",\n          (class_1dig == 8 & class %in% commercial_classes ) ~ \"8A\",\n          (class_1dig == 8 & class %in% industrial_classes ) ~ \"8B\",\n          TRUE ~ as.character(class_1dig))) |&gt;\n  mutate(\n    # taxing district revenue = taxable eav * tax rate so rearrange the formula:\n    taxed_eav = final_tax_to_dist / tax_code_rate*100,\n    \n    total_value_eav = (final_tax_to_dist + final_tax_to_tif)/ tax_code_rate * 100 + all_exemptions + abatements,\n    \n    exempt_eav_inTIF = ifelse(in_tif == 1, all_exemptions, 0),\n    \n    exempt_eav = all_exemptions + abatements,\n    \n    taxed_av =  taxed_eav / eq_factor, # current value that taxing agencies can tax for their levies\n    \n    ## taxable AV = equalized assessed value net TIF increments, gross exemptions. \n    ## Used for calculating untaxable value further below\n   # taxable_av = (final_tax_to_dist / tax_code_rate *100 + all_exemptions + abatements)/ eq_factor, \n  \n    # taxable_eav_fromincents =  ifelse(class &gt;=600 & class &lt; 900, taxable_av * eq_factor, 0),\n\n      ## untaxable value = exempt EAV from abatements and exemptions + TIF increment\n    untaxable_value_eav = all_exemptions + abatements + \n      ## TIF increment EAV above frozen EAV, which becomes TIF revenue\n      (final_tax_to_tif /  tax_code_rate*100) +\n      \n      ## difference between 25% and reduced level of assessment for incentive class properties. Excludes TIF increment when calculating the difference! \n      ifelse(between(class, 600, 899), \n             (taxed_av/loa*0.25 - taxed_av)*eq_factor, 0),\n   \n    untaxable_incent_eav = ifelse(between(class, 600, 899), \n             (taxed_av/loa*0.25 - taxed_av)*eq_factor, 0),\n   \n  # Class 239 property values (farms) are unequalized and reflect different farm\n  # valuations (See CCAO Classification Document)\n    untaxable_value_eav = ifelse(class == 239, \n                                 equalized_av-taxed_eav, untaxable_value_eav), \n    \n    untaxable_value_av = untaxable_value_eav / eq_factor,\n    untaxable_value_fmv = untaxable_value_av / loa,\n\n    exempt_fmv = exempt_eav / eq_factor / loa, \n    \n    fmv_inTIF = ifelse(in_tif==1, av/loa, 0),\n   \n    fmv_tif_increment = ifelse(final_tax_to_tif &gt; 0, \n                               ((final_tax_to_tif / (tax_code_rate/100)) / eq_factor ) / loa, 0),\n    fmv_incents_inTIF = ifelse(between(class, 600, 899) & in_tif == 1, \n                               fmv, 0),\n    fmv_incents_tif_increment = ifelse(between(class, 600, 899) & final_tax_to_tif &gt; 0 , \n                               ((final_tax_to_tif / (tax_code_rate/100)) / eq_factor ) / loa, 0),\n    naive_rev_forgone =  untaxable_incent_eav * tax_code_rate/100) |&gt;\n  select(tax_code, class, pin, fmv,\n         untaxable_value_fmv, fmv_inTIF, fmv_tif_increment, fmv, total_billed, final_tax_to_dist, final_tax_to_tif, tax_code_rate, eav, equalized_av, av, everything())\n\n\n\n\nCode\nmuni_ratechange &lt;- ptax_pins |&gt;\n  mutate(class = as.numeric(class)) |&gt;         # Allows for joining later\n # select(-c(propclass_1dig:av.y)) |&gt;\n  filter(!clean_name  %in% c(\"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\", \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\", \"Deer Park\", \"Deerfield\")) |&gt; \n  # filter(!agency_num %in% cross_county_lines) |&gt;\n  group_by(clean_name) |&gt;\n  summarize(\n    classgroup_PC = n(),\n    # projects = n_distinct(both_ids), # mostly for industrial and commercial properties\n    pins_withincents = sum(ifelse(class &gt;= 600 & class &lt; 900, 1,0)),\n    fmv_incentive = sum(ifelse(class &gt;=600 & class &lt;900, fmv, 0), na.rm = TRUE),\n    #fmv_taxed =  sum(taxed_fmv, na.rm=TRUE),\n    fmv_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;900 & final_tax_to_tif &gt; 0, fmv, 0), na.rm = TRUE),\n    fmv_inTIF = sum(ifelse(final_tax_to_tif &gt; 0, fmv, 0), na.rm=TRUE),\n    fmv_tif_increment = sum(fmv_tif_increment, na.rm=TRUE),\n    fmv_untaxable_value = sum(untaxable_value_fmv , na.rm=TRUE),\n    fmv_exemptions = sum(all_exemptions/eq_factor/loa, na.rm=TRUE),\n    fmv_abatements = sum(exe_abate/eq_factor/loa, na.rm=TRUE),\n    zero_bill = sum(zero_bill, na.rm=TRUE),\n    fmv_residential = sum(ifelse(class %in% c(200:399), fmv, 0), na.rm = TRUE),\n    fmv_C2 = sum(ifelse(class %in% c(200:299), fmv, 0), na.rm = TRUE),\n    \n    fmv_industrial = sum(ifelse(class %in% industrial_classes, fmv, 0), na.rm = TRUE),\n    fmv_commercial = sum(ifelse(class %in% commercial_classes, fmv, 0), na.rm = TRUE),\n    \n    current_rate_avg = mean(tax_code_rate),\n    avg_C2_bill_noexe = mean(ifelse(between(class,200,299) & all_exemptions == 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    avg_C2_bill_withexe = mean(ifelse(between(class,200,299) & all_exemptions &gt; 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    av_taxed = sum(taxed_av, na.rm = TRUE),\n    untaxable_value_av = sum(untaxable_value_av, na.rm=TRUE),\n    av = sum(av),\n    eav_taxed = sum(taxed_av*eq_factor), \n    eav_untaxable = sum(untaxable_value_eav, na.rm=TRUE),\n    eav_tif_increment = sum(final_tax_to_tif/tax_code_rate, na.rm=TRUE),\n    eav_max = sum(fmv*loa*eq_factor, na.rm=TRUE),\n    fmv = sum(fmv, na.rm=TRUE),\n    pins_in_class = n(),\n    all_exemptions = sum(all_exemptions),   # in EAV\n    abatements = sum(exe_abate),            # in EAV\n    eav_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;=900 & in_tif == 1, eav, 0), na.rm = TRUE),\n    final_tax_to_dist = sum(final_tax_to_dist),\n    final_tax_to_tif = sum(final_tax_to_tif),\n    eav = sum(eav),\n    new_TEAV_noIncents = sum(ifelse(class &gt;=600 & class &lt;900,\n                                    (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),\n    \n    ####### Not used currently\n    # new_TEAV_noC6 = sum(ifelse( class &gt;=600 & class &lt;700, \n    #                             (taxed_av*eq_factor/loa)*0.25 , taxed_av*eq_factor)),\n    # new_TEAV_noC7 = sum(ifelse(class &gt;=700 & class &lt;800,\n    #                            (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor)),\n    # new_TEAV_noC8 = sum(ifelse(class &gt;=800 & class &lt;900, (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor)),\n    # \n    #######\n\n     new_TEAV_vacant_noIncents = sum(ifelse(class &gt;=600 & class &lt;900,\n                                            0, taxed_av*eq_factor))\n    ) |&gt;\n  mutate(\n    \n    new_TEAV_noExemps = eav_taxed + all_exemptions, # does not include abatements\n    new_TEAV_noAbates = eav_taxed + abatements, # include only abatements, not other exemption types\n    \n    # amount of EAV from taxing an additional 15% of the AV if incentive properties didn't exist\n    forgone_EAV_incent = #class_group %in% incentive_majorclasses,\n      #incent_prop == \"Incentive\", \n      new_TEAV_noIncents - eav_taxed) |&gt;\n  #cbind(table_cook) |&gt;\n  mutate(\n    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties\n    # Commercial and industrial assessed at 25%\n    TEAV_max = eav_taxed + all_exemptions + abatements + eav_tif_increment + forgone_EAV_incent,\n    \n    # no exemptions or incentive classifications:\n    TEAV_neither = eav_taxed + all_exemptions + forgone_EAV_incent,\n    \n    rate_noExe = final_tax_to_dist / new_TEAV_noExemps * 100,\n    rate_noAbate = final_tax_to_dist / new_TEAV_noAbates * 100,\n    rate_noInc = final_tax_to_dist / new_TEAV_noIncents * 100,\n    rate_neither = final_tax_to_dist / TEAV_neither * 100, \n    rate_noTIFs = final_tax_to_dist / (eav_taxed + eav_tif_increment) * 100,\n    rate_vacant = final_tax_to_dist / new_TEAV_vacant_noIncents* 100,\n    rate_lowest = final_tax_to_dist / TEAV_max * 100,\n    # rate_noC6 = levy / new_TEAV_noC6 * 100,\n    # rate_noC7 = levy / TEAV_noC7 * 100,\n    # rate_noC8 = levy / TEAV_noC8 * 100,\n    rate_current = final_tax_to_dist / eav_taxed * 100,\n    change_noInc = rate_current - rate_noInc,\n    change_neither = rate_current - rate_neither,\n    change_noTIF = rate_current - rate_noTIFs,\n    change_noExe = rate_current - rate_noExe,\n    change_vacant = rate_current - rate_vacant,\n    change_lowest = rate_current - rate_lowest\n  )  |&gt;\n     mutate(across(contains(\"rate_\"), round, digits = 2)) |&gt;\n     mutate(across(contains(\"change_\"), round, digits = 2))\n\nwrite_csv(muni_ratechange, \"../Output/muni_ratechange_2023.csv\")\n\n\n\n\nCode\n#|eval: false\n#|\nmuni_ratechange &lt;- read_csv(\"../Output/muni_ratechange_2023.csv\")\n\nmuni_ratechange |&gt; \n  select(clean_name, starts_with(\"change_\")) |&gt; \n  DT::datatable(rownames = FALSE)\n\n\n\n\n\n\n\nFigure 6. Composite property tax rates with and without homestead exemptions, tax year 2021\nFigure 6 will not be recreated but is just a bar chart of the change in tax rate in the table below\n\n\nTable 1. Change in composite property tax rates due to exemptions, tax year 2023.\n\n\n\n\nCode\nmuni_ratechange |&gt; \n  select(clean_name,  current_rate_avg, rate_noExe, change_noExe, final_tax_to_dist \n         ) |&gt; \n  DT::datatable(rownames = FALSE, colnames = c('Municipality' = 'clean_name','Current Comp. Rate' = 'current_rate_avg', 'Hypothetical Rate' = 'rate_noExe',  'Composite Tax Rate Change'='change_noExe', \n\n                       'Composite Levy' = 'final_tax_to_dist'),\n          caption = \"Table 1: Current and Hypothetical Composite Tax Rates if GHE $0\") |&gt;\n  formatCurrency('Composite Levy', digits = 0)\n\n\n\nTable 1.3: Searchable table containing all municipalities and the hypothetical tax rate change if exempt EAV became taxable.\n\n\n\n\n\n\n\nCode\nmuni_ratechange |&gt;\n  select(clean_name,  current_rate_avg, rate_noExe, change_noExe \n) |&gt;\n  arrange(desc(change_noExe)) |&gt;\n  slice(c(1:5, 69:73, 121:125)) |&gt;\n    #slice(c(1:5, 58:62, 115:119)) |&gt;\n\n  flextable() |&gt; \n  border_remove() |&gt;\n  hline_top() |&gt;\n  hline(i = c(5,10)) |&gt;\n\n  set_header_labels(\n    clean_name = \"Municipality\", \n    current_rate_avg = \"With Exemptions\",\n    rate_noExe = \"Without Exemptions\",\n    change_noExe = \"Percent Point Difference\"\n    \n    ) |&gt;\n  align(j = 2, align = \"right\") |&gt;\nalign(j=2, align = \"right\", part = \"header\") |&gt;\nset_table_properties( layout = \"autofit\") |&gt; bold(i = 8) \n\n\n\nTable 1.4: Includes all exemption types in calculation of rate change.\n\n\n\n\n\nFigure 7. Map of Spatial Patterns in Composite Tax Rate Change\nChange in composite tax rate if exempt EAV was added back to the the taxable tax base (i.e. if there were no exemptions).\n\n\nCode\nmuni_ratechange  |&gt;\n  left_join(nicknames, by = \"clean_name\") |&gt;\n     #mutate(burden_current = ifelse(burden_current&gt;1, 1, burden_current)) |&gt;\n\n    # filter(major_class_code == 2) |&gt;\n  mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name),\n         shpfile_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) |&gt;\n  full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) |&gt;\n\n  ggplot(aes(fill = change_noExe)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n   scale_fill_stepsn(colors = c( \"#F7FEF5\",\n                                # \"#e4f1e0\",\n                                \"#d4f6cc\",\n                                \"#47ba24\",\n                                \"#1F6805\",\n                                \"#133C04\"),\n                        show.limits=TRUE, \n                     limits = c(0, 15),\n                     breaks = c(0, 2.5, 5, 7.5, 10, 15),\n                     na.value = NA,\n                        name = \"Rate Change from \\nExemptions\"  \n                    )",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2021</span>"
    ]
  },
  {
    "objectID": "exemption_report_2021.html#effect-on-tax-burdens",
    "href": "exemption_report_2021.html#effect-on-tax-burdens",
    "title": "Exemptions in Cook County - Tax Year 2021",
    "section": "Effect on Tax Burdens",
    "text": "Effect on Tax Burdens\n\nFigure 8. Dolton example of Share of levy paid by property type\nCMAP used a donut chart, we will use a bar chart that represents 100% on the x a axis.\n\n\nCode\ntaxcodes_current &lt;- ptax_pins |&gt; \n  group_by(tax_code) |&gt;\n  summarize(\n    av = sum(av),\n    eav = sum(eav),\n    equalized_AV = sum(equalized_av),\n    pins_in_class = n(),\n    current_exemptions = sum(all_exemptions),\n    HO_exemps = sum(exe_homeowner),\n    tax_code_rate = first(tax_code_rate), \n    final_tax_to_dist = sum(final_tax_to_dist, na.rm = TRUE), # used as LEVY amount!! \n    final_tax_to_tif = sum(final_tax_to_tif, na.rm = TRUE),\n    tax_amt_exe = sum(tax_amt_exe, na.rm = TRUE), \n    tax_amt_pre_exe = sum(tax_amt_pre_exe, na.rm = TRUE), \n    tax_amt_post_exe = sum(tax_amt_post_exe, na.rm = TRUE),\n    rpm_tif_to_cps = sum(rpm_tif_to_cps, na.rm = TRUE), # not used\n    rpm_tif_to_rpm = sum(rpm_tif_to_rpm, na.rm=TRUE), # not used\n    rpm_tif_to_dist = sum(rpm_tif_to_dist, na.rm=TRUE), # not used\n    tif_share = mean(tif_share, na.rm=TRUE), # not used\n  ) |&gt;\n  \n  mutate(total_bill_current = final_tax_to_dist + final_tax_to_tif) |&gt;\n  mutate(cur_comp_TC_rate = tax_code_rate) |&gt;\n  mutate(current_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100),\n         new_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100) + HO_exemps) |&gt;\n  mutate(new_comp_TC_rate = (final_tax_to_dist / new_taxable_eav)*100) |&gt;\n  mutate(new_comp_TC_rate = ifelse(is.nan(new_comp_TC_rate), cur_comp_TC_rate, new_comp_TC_rate)) |&gt;\n  select(tax_code, cur_comp_TC_rate, new_comp_TC_rate, current_taxable_eav, new_taxable_eav, everything())\n\ntaxcode_taxrates &lt;- taxcodes_current |&gt; \n  select(tax_code, cur_comp_TC_rate, new_comp_TC_rate, current_exemptions, HO_exemps)\n\n\nmc_burden &lt;- ptax_pins |&gt;\n  left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  group_by(clean_name, class_1dig) |&gt;\n  \n  ## calculate taxbase from each major class \n  ## and the amount of taxes currently collected from each\n  summarize(group_taxbase= sum(taxed_eav),\n            group_taxes_current = sum(taxed_eav * (tax_code_rate/100)),\n            hyp_group_taxbase = sum(taxed_eav + all_exemptions, na.rm = T),\n            hyp_group_taxes = sum( (taxed_eav + all_exemptions) * (new_comp_TC_rate/100), na.rm = T)\n     )  |&gt;\n  mutate(across(c(group_taxbase:hyp_group_taxes), round, 0)) |&gt;\n  group_by(clean_name) |&gt;\n  \n  mutate(\n    muni_taxbase = sum(group_taxbase, na.rm=T),\n    muni_levy = sum(group_taxes_current, na.rm = T)\n  ) |&gt;\n  ungroup() |&gt;\n  mutate(\n         pct_eav = group_taxbase / muni_taxbase,\n         pct_taxburden_current = group_taxes_current / muni_levy,\n         hyp_pct_taxburden = hyp_group_taxes / muni_levy) |&gt;\n  mutate(\n         burden_shift = (pct_taxburden_current - hyp_pct_taxburden)*100)\n\n\nburden_c2 &lt;- mc_burden |&gt; \n  filter(class_1dig == 2) |&gt; \n  select(clean_name, pct_eav, burden_shift,  pct_taxburden_current, hyp_pct_taxburden) |&gt; \n  arrange(pct_eav)\n\nmc_burden |&gt; \n  filter(clean_name == \"Dolton\") |&gt; \n  select(class_1dig, pct_taxburden_current, hyp_pct_taxburden) |&gt; \n  arrange(desc(pct_taxburden_current))\n\n\n\n\n\n\n  \n\n\n\n\nTable 1.5\n\n\n\n\n\n\nFigure 9. Change in Share of Tax Burden\n\n\nTable 2. Change in share of property tax burden\nTable 2: Change in the share of property tax burden due to exemptions for single-family, multi-family, and commercial and industrial properties, tax year 2023\n\n\nCode\nburden_shift &lt;- ptax_pins |&gt;\n    mutate(Group = case_when(\n    class_1dig == 2 ~ \"Single-family\",\n    class_1dig %in% c(3, 9) ~ \"Multi-family\",\n     TRUE ~ \"Commercial & Industrial\"\n  )) |&gt;\n    left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  group_by(clean_name, Group) |&gt;\n  \n  ## calculate taxbase from each major class \n  ## and the amount of taxes currently collected from each\n  summarize(group_taxbase= sum(taxed_eav, na.rm = T),\n            group_taxes_current = sum(taxed_eav * (tax_code_rate/100), na.rm = T),\n            hyp_group_taxbase = sum(taxed_eav + all_exemptions, na.rm = T),\n            hyp_group_taxes = sum( (taxed_eav + all_exemptions) * (new_comp_TC_rate/100), na.rm = T)\n     )  |&gt;\n  mutate(across(c(group_taxbase:hyp_group_taxes), round, 0)) |&gt;\n  ungroup() |&gt;\n  group_by(clean_name) |&gt;\n  mutate(\n    muni_taxbase = sum(group_taxbase, na.rm=T),\n    muni_levy = sum(group_taxes_current, na.rm = T)\n  ) |&gt;  \n  ungroup() |&gt;\n  mutate(\n         pct_eav_current = group_taxbase / muni_taxbase,\n         pct_taxburden_current = group_taxes_current / muni_levy,\n         hyp_pct_taxburden = hyp_group_taxes / muni_levy) |&gt; \n  mutate(\n         burden_shift = (pct_taxburden_current - hyp_pct_taxburden)*100) \n\n\n\n\nCode\nburden_shift &lt;- ptax_pins |&gt;\n  filter(class_1dig != 0) |&gt;\n    mutate(Group = case_when(\n    class_1dig == 2 ~ \"Single-family\",\n    class_1dig == 3 | class_1dig == 9 ~ \"Multi-family\",\n     TRUE ~ \"Commercial & Industrial\"\n  )) |&gt;\n    left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  group_by(clean_name) |&gt; \n  mutate(muni_levy = sum(final_tax_to_dist, na.rm=TRUE)) |&gt;\n  ungroup() |&gt;\n  group_by(clean_name, Group, muni_levy) |&gt;\n  \n  ## calculate taxbase from each major class \n  ## and the amount of taxes currently collected from each\n  summarize(group_taxbase= sum(taxed_eav, na.rm = T),\n            group_taxes_current = sum(taxed_eav * (cur_comp_TC_rate/100), na.rm = T),\n            hyp_group_taxbase = sum(taxed_eav + all_exemptions, na.rm = T),\n            hyp_group_taxes = sum( (taxed_eav + all_exemptions) * (new_comp_TC_rate/100), na.rm = T))  |&gt;\n  mutate(across(c(group_taxbase:hyp_group_taxes), round, 0)) |&gt;\n  ungroup() |&gt;\n # group_by(clean_name) |&gt;\n # mutate(\n   # muni_taxbase = sum(group_taxbase, na.rm=T),\n   # muni_levy = sum(group_taxes_current, na.rm = T)\n # ) |&gt;  \n # ungroup() |&gt;\n  mutate(\n     #    pct_eav_current = group_taxbase / muni_taxbase,\n         pct_taxburden_current = group_taxes_current / muni_levy,\n         hyp_pct_taxburden = hyp_group_taxes / muni_levy)  |&gt; \n  mutate(\n         burden_shift = (pct_taxburden_current - hyp_pct_taxburden))\n\n\n\n\nCode\n## Current tax burden \nburden_shift |&gt;  \n    select(clean_name, Group, pct_taxburden_current) |&gt;\npivot_wider(id_cols = clean_name, names_from = Group, values_from = pct_taxburden_current) |&gt;\n  arrange((`Single-family`))\n\n\n\n\n\n\n  \n\n\n\n\nTable 1.6: Current tax burden (levy paid by group / total levy billed by municipality)\n\n\n\n\n\nSomething is wrong with burden shift calculation\n\n\n\nCode\nburden_shift |&gt;  \n    select(clean_name, Group, burden_shift) |&gt;\npivot_wider(id_cols=clean_name, names_from = Group, values_from = burden_shift) |&gt;\n  arrange((`Single-family`))\n\n\n\n\n\n\n  \n\n\n\n\nTable 1.7: Change in tax burden, measured in percentage point change.\n\n\n\n\n\n\nCode\ndatatable(burden_c2, rownames = FALSE,\n          colnames = c('Municipality' = 'clean_name', \n                       'Burden Shift, Pct Pt Change' = 'burden_shift', \n                       \"C2 EAV/Muni EAV\" = 'pct_eav', \n                       'Current Tax Burden\\nC2 Tax Collected / Muni Levy' = 'pct_taxburden_current', \n                       \"Hypothetical Tax Burden\\nHyp. C2 Tax Collected / Muni Levy\" = 'hyp_pct_taxburden'),\n          caption = \"Table 2: Current Share of Taxable EAV and Share of Levy Paid by Class 2 Properties\"\n           ) |&gt;\n  formatPercentage(c(2,3,4,5), digits = 2) |&gt;\n  formatRound(c(3), digits = 2)\n\n\n\nFigure 9 Follow up. Current Tax Burden Map\n\n\nCode\nburden_c2 |&gt;\n  left_join(nicknames) |&gt;\n  mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) |&gt;\n  full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) |&gt;\n\n  ggplot(aes(fill = pct_taxburden_current)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n  # scale_fill_gradientn(\n   scale_fill_stepsn(colors = c(\"#ffffcc\",\"#a1dab4\" ,\"#41b6c4\",\"#2c7fb8\", \"#253494\"),\n                        show.limits=TRUE, \n                     limits = c(0,1),\n                     na.value = \"gray70\",\n                     n.breaks = 6,\n                        name = \"Burden with \\nExemptions\", \n                     labels = scales::percent\n                     \n                    )+\n  labs(title = \"Current share of property tax burden\", \n       subtitle = \"for Class = 2 Property Types\")\n\n\n\n\n\n\n\n\n\n\n\n\nTable 3.\nDifference in taxbills for those that do and do not claim homeowner exemption\n\n\n\nCode\nptax_pins &lt;- ptax_pins |&gt; \n  left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  mutate(\n    bill_current = (final_tax_to_dist + final_tax_to_tif),\n    bill_noGHE = new_comp_TC_rate/100*(equalized_av-all_exemptions+exe_homeowner),\n    bill_noexemps = new_comp_TC_rate/100*(equalized_av),\n    bill_change = bill_noGHE - bill_current)\n\n\n\n\nCode\nC2_munistats &lt;- ptax_pins |&gt; \n  filter(class &gt; 199 & class &lt; 300) |&gt;\n  group_by(clean_name)  |&gt;\n  arrange(av) |&gt;\n  summarize(\n    median_eav = round(median(eav)), \n    median_av = round(median(av)), \n    avg_av = round(mean(av)),\n    avg_eav = round(mean(eav)),\n    C2_pins_in_muni = n(),\n    C2_current_exemptions = sum(all_exemptions, na.rm = TRUE),\n    C2_HO_exemps = sum(exe_homeowner, na.rm = TRUE),\n  )\n\n## removes properties that have more than one exemption type\nC2_munistats_filtered &lt;- ptax_pins |&gt; \n  filter(class &gt; 199 & class &lt; 300) |&gt;\n    filter(exe_senior == 0 & \n           exe_freeze == 0 & \n           exe_longtime_homeowner == 0 & \n           exe_disabled == 0 & \n           exe_vet_returning == 0 & \n           exe_vet_dis_lt50 == 0 & \n           exe_vet_dis_50_69 == 0 & \n           exe_vet_dis_ge70 == 0 & \n           exe_abate == 0) |&gt;\n  group_by(clean_name)  |&gt;\n  arrange(av) |&gt;\n  summarize(\n    median_eav = round(median(eav, na.rm=TRUE)), \n    median_av = round(median(av, na.rm=TRUE)), \n    avg_av = round(mean(av, na.rm=TRUE)),\n    avg_eav = round(mean(eav, na.rm=TRUE)),\n    C2_pins_in_muni = n(),\n    C2_current_exemptions = sum(all_exemptions, na.rm = TRUE),\n    C2_HO_exemps = sum(exe_homeowner, na.rm = TRUE),\n  )\n\nC2_munistats_filtered \n\n\n\n  \n\n\n\nCode\nC2_munistats\n\n\n\n  \n\n\n\n\n\nCode\n## Grouped by if they have a $0 tax bill and had the GHE per muni\n## Recalculating for Josh & Rachael\nmuni_median_summarytable &lt;- ptax_pins |&gt; \n\n  filter(class &gt;199 & class &lt; 300) |&gt; \n  \n  # merge in muni residential median AV\n  left_join(C2_munistats_filtered) |&gt;\n  \n  # +/- 500 from municpalities median residential AV\n  filter(av &lt; median_av+200 & av &gt; median_av-200) |&gt;\n  \n  # Removes properties that received other types of exemptions\n  filter(exe_senior == 0 & \n           exe_freeze == 0 & \n           exe_longtime_homeowner == 0 & \n           exe_disabled == 0 & \n           exe_vet_returning == 0 & \n           exe_vet_dis_lt50 == 0 & \n           exe_vet_dis_50_69 == 0 & \n           exe_vet_dis_ge70 == 0 & \n           exe_abate == 0) |&gt;\n  \n  arrange(av) |&gt;\n  \n  mutate(bill_current = (final_tax_to_dist + final_tax_to_tif),\n         bill_noexemps =  new_comp_TC_rate/100*(equalized_av-all_exemptions+exe_homeowner),\n         bill_change = bill_noexemps - bill_current) |&gt;\n  \n  group_by(clean_name, # zero_bill, \n           has_HO_exemp) |&gt; \n  \n  summarize(AV = median(median_av), # median_av was calculated earlier: C2 median AV for the muni \n            `Taxable EAV` = round(median(eav)),\n            bill_cur = round(median(bill_current)),\n            bill_new = round(median(bill_noexemps)),\n            bill_change = round(median(bill_change)),\n            pincount=n(),\n            perceived_savings = round(median(tax_amt_exe))) |&gt; \n  \n  # merge in clean_names variable\n  left_join(nicknames) |&gt;\n  \n  select(clean_name, has_HO_exemp, bill_cur, bill_new, bill_change, perceived_savings,  AV, `Taxable EAV`, everything()) |&gt;\n  select(-c(agency_number, agency_name))\n\nmuni_median_summarytable\n\n\n\n  \n\n\n\nCode\nmuni_taxrates &lt;- ptax_pins |&gt; \n  group_by(clean_name)  |&gt;\n  arrange(av) |&gt;\n  \n  summarize(\n    muni_median_av = round(median(av, na.rm=TRUE)),\n    muni_median_eav = round(median(eav, na.rm=TRUE)),\n    muni_mean_av = round(mean(av, na.rm=TRUE)),\n    muni_mean_eav = round(mean(eav, na.rm=TRUE)),\n    av = sum(av, na.rm = TRUE),\n    eav = sum(eav, na.rm = TRUE),\n    equalized_AV = sum(equalized_av, na.rm = TRUE),\n    pins_in_muni = n(),\n    current_exemptions = sum(all_exemptions, na.rm = TRUE),\n    HO_exemps = sum(exe_homeowner, na.rm = TRUE),\n    tax_code_rate = mean(tax_code_rate, na.rm = TRUE), # Changed from first() to mean() on Nov 1\n    final_tax_to_dist = sum(final_tax_to_dist, na.rm = TRUE), # used as LEVY amount!! \n    final_tax_to_tif = sum(final_tax_to_tif, na.rm = TRUE),\n    tax_amt_exe = sum(tax_amt_exe, na.rm = TRUE), \n    tax_amt_pre_exe = sum(tax_amt_pre_exe, na.rm = TRUE), \n    tax_amt_post_exe = sum(tax_amt_post_exe, na.rm = TRUE),\n    rpm_tif_to_cps = sum(rpm_tif_to_cps, na.rm = TRUE), # not used\n    rpm_tif_to_rpm = sum(rpm_tif_to_rpm, na.rm=TRUE), # not used\n    rpm_tif_to_dist = sum(rpm_tif_to_dist, na.rm=TRUE), # not used\n    tif_share = mean(tif_share, na.rm=TRUE), # not used\n  ) |&gt;\n  \n  mutate(total_bill_current = final_tax_to_dist + final_tax_to_tif) |&gt;\n  rename(cur_comp_TC_rate = tax_code_rate) |&gt;\n  mutate(current_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100),\n         new_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100) + HO_exemps) |&gt;\n  mutate(new_comp_TC_rate = (final_tax_to_dist / new_taxable_eav)*100) |&gt;\n  \n  mutate(new_comp_TC_rate = ifelse(is.nan(new_comp_TC_rate), cur_comp_TC_rate, new_comp_TC_rate)) |&gt; \n  \n  left_join(C2_munistats) |&gt;\n  left_join(nicknames) |&gt;\n  mutate(rate_change = cur_comp_TC_rate - new_comp_TC_rate,\n    nobillchange_propertyEAV = round(10000 * ((cur_comp_TC_rate/100) / (rate_change/100))),\n    nochange_av = round(nobillchange_propertyEAV / eq_factor),\n    nochange_ratio = nochange_av / median_av) |&gt;\n  select(clean_name, C2median_av = median_av, muni_median_av,  C2mean_av = avg_av, muni_mean_av, cur_comp_TC_rate, new_comp_TC_rate, current_taxable_eav, new_taxable_eav, everything())\n\nmuni_taxrates \n\n\n\n  \n\n\n\nCode\nmuni_taxrates |&gt; left_join(nicknames) |&gt; select(clean_name, muni_median_av, C2median_av, nochange_av )\n\n\n\n  \n\n\n\nCode\nmuni_median_summarytable |&gt; \n  left_join(muni_taxrates) |&gt; \n  ungroup() |&gt;\n  select(clean_name, has_HO_exemp, bill_cur, bill_new, bill_change, perceived_savings,  AV, `Taxable EAV`, nochange_av, nochange_ratio) #|&gt;\n\n\n\n  \n\n\n\n\n\nCode\nptax_pins |&gt; \n  filter(clean_name %in% c(\"Chicago\", \"Dolton\", \"Glencoe\")) |&gt;\n  filter(between(av, 14500, 15000)) |&gt;\n  filter(class_1dig == 2) |&gt; \n  filter(exe_senior == 0 & exe_freeze == 0 ) |&gt;\n  group_by(clean_name, has_HO_exemp) |&gt;\n  arrange(av) |&gt;\n  \n  summarize(\n            median_bill = median(total_billed, na.rm=TRUE),\n            median_AV = median(av, na.rm= TRUE),\n            eav = median(eav, na.rm=TRUE),\n            # class = median(class),\n            type = \"Current Exemptions\",\n            N = n())\n\n\n\n  \n\n\n\n\n\nTable 4.\nMunicipalities with the largest and smallest reductions in tax base (as a share of residential EAV due to exemptions) and median property values\n\n\nFigure 10. Tax Burden Shift from Current GHE\nShare of municipal property tax levy paid by Class 2 properties with and without homestead exemptions, tax year 2021\n\n\n\nCode\n# as a dot graph ## \n\norder &lt;- mc_burden |&gt;\n  filter(class_1dig == 2) |&gt;\n    select(clean_name, pct_taxburden_current, burden_shift)\n\nslice &lt;-  mc_burden |&gt;\n  filter(class_1dig == 2) |&gt;\n    select(clean_name, pct_taxburden_current, burden_shift) |&gt;\n  arrange(pct_taxburden_current) |&gt;\n  slice(1:5, 63:67, 127:131)\n\n\n\nmedian_burden &lt;- median(order$pct_taxburden_current)\nmedian_shift &lt;- median(order$burden_shift)\n\n# median burden change is 5.9 percentage points\n# current median burden is 70.3% of the levy\n\nmc_burden |&gt; \n  filter(clean_name %in% slice$clean_name) |&gt;\n#filter(!clean_name %in% cross_county_lines$clean_name)|&gt;\n  filter(class_1dig == 2) |&gt;\n#  filter(burden_current &gt; 0.938 |burden_current &lt; .17 |\n #          ( (burden_current &lt; median(burden_current) + 0.01 )& (burden_current &gt; median(burden_current) - 0.01)) )|&gt; \n  ungroup() |&gt; \n      select(clean_name, pct_taxburden_current, hyp_pct_taxburden, burden_shift) |&gt;\n  arrange(burden_shift) |&gt;\n # mutate(  burden_noexemps = ifelse(burden_noexemps &gt; 1, 1, burden_noexemps)) |&gt;\n  pivot_longer(c(\"pct_taxburden_current\", \"hyp_pct_taxburden\"), \n               names_to = \"type\", values_to = \"pct_burden\") |&gt; \n  inner_join(order) |&gt;\n  ggplot(aes(x = pct_burden*100, \n             y= reorder(clean_name, -pct_taxburden_current)))+\n  # y= reorder(clean_name, burden_current)))+\n  geom_vline(xintercept = 70.2, linetype = 3)+\n  geom_line(aes(group = clean_name))+ \n  geom_hline(yintercept = 5.5, linetype = 2)+\n  geom_hline(yintercept = 10.5, linetype = 2)+\n  geom_point(aes(color=type), size=3 )+\n\n  theme_minimal() + \n  theme(#legend.position = \"none\", \n    legend.title = element_blank(),\n    plot.title.position = \"plot\",\n    #   panel.background = element_rect(fill='transparent'), #transparent panel bg\n    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg\n  )+\n  scale_color_brewer(palette=\"Paired\", labels = c(\"Current Burden\", \"Burden if \\nNo Exemptions\" ), direction = 1)+\n\n  \n  labs(title = \"Change in Class 2 Residential Tax Burden\", \n       subtitle = \"Ordered by Current Tax Burden\",\n  x = \"Share of Levy (%)\", y = \"\" , \n  caption = \"Dotted line represents median Class 2 burden (65.5% of the levy). Residential Tax Burden is the \n  share of the property tax collected that was paid for by property owners with Class 2 properties.\") +\n    geom_label(label = \"Class 2 pays small share of \\nlevy; very little residential\", x=32, y = 13, label.size = 1, size = 3)+\n    geom_label(label = \"Class 2 pays median share of \\nlevy (70.3%), mix of land use\", x=42, y = 7.5, label.size = 1, size = 3) +\n    geom_label(label = \"Class 2 pays nearly all of levy, \\nhighly residential\", x=70, y = 3, label.size = 1,size = 3)\n\n\n\n\n\n\n\n\nFigure 1.1\n\n\n\n\n\n\n\nFigure 11. Zero Dollar Bills\n\n\nCode\nmuni_mc_sums |&gt;\n  filter(major_class_code == 2) |&gt; \n  group_by(year) |&gt;\n  summarize(zerodollar_count = sum(zero_bill)) |&gt; \n  ggplot(aes(x=year, y = zerodollar_count)) + \n  geom_bar(position = \"stack\", stat = \"identity\") + theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nsmallbills &lt;- ptax_pins |&gt; \n  filter(class_1dig == 2 & eav &lt; 150 ) |&gt;\n  select(clean_name, class, eav, equalized_av, av, fmv, total_billed, \n         final_tax_to_dist, pin, everything()) |&gt;\n  arrange(total_billed) |&gt; arrange(desc(total_billed)) |&gt;\n  filter(total_billed &gt; 0)\n\nsmallbills\n\n\n\n  \n\n\n\nCode\nsmallbills |&gt;\n  summarize(n = n(), \n            exe_freeze = sum(exe_freeze, na.rm=T),\n            exe_senior = sum(exe_senior, na.rm=T),\n            exe_homeowner = sum(exe_homeowner, na.rm=T))\n\n\n\n  \n\n\n\nCode\nsmallbills |&gt;\n  group_by(clean_name) |&gt;\n  summarize(n = n(), \n            exe_freeze = sum(exe_freeze, na.rm=T),\n            exe_senior = sum(exe_senior, na.rm=T),\n            exe_homeowner = sum(exe_homeowner, na.rm=T))\n\n\n\n  \n\n\n\nCode\nsmallbills |&gt; \n  select(clean_name, class, eav, equalized_av, av, fmv, \n         total_billed, final_tax_to_dist, pin)\n\n\n\n  \n\n\n\n\n\nCode\nzerobills &lt;- ptax_pins |&gt; \n  filter(class_1dig == 2 & eav &gt; 0 & total_billed == 0) |&gt;\n  select(clean_name, class, eav, equalized_av, av, fmv, total_billed, final_tax_to_dist, pin, exe_homeowner, exe_senior, exe_freeze, everything())  |&gt;\n  arrange(desc(exe_freeze))\n\nzerobills\n\n\n\n  \n\n\n\nCode\noptions(scipen = 999)\n\nzerobills |&gt; \n  reframe(n = n(), total_eav = sum(taxed_eav + exempt_eav, na.rm=TRUE),\n          exe_homeowner = sum(exe_homeowner), exe_senior = sum(exe_senior), \n          exe_freeze = sum(exe_freeze), taxed_eav = sum(taxed_eav, na.rm=TRUE), \n          .by = clean_name) |&gt; \n  arrange(desc(exe_freeze))\n\n\n\n  \n\n\n\nCode\nzerobills |&gt; \n  summarize(n = n(), total_eav = sum(taxed_eav + exempt_eav, na.rm=TRUE),\n          exe_homeowner = sum(exe_homeowner), exe_senior = sum(exe_senior), \n          exe_freeze = sum(exe_freeze), taxed_eav = sum(taxed_eav, na.rm=TRUE)) |&gt; \n  arrange(desc(exe_freeze))\n\n\n\n  \n\n\n\nCode\nzerobills |&gt; \n  group_by(Triad) |&gt;\n  summarize(n = n(), total_eav = sum(taxed_eav + exempt_eav, na.rm=TRUE),\n          exe_homeowner = sum(exe_homeowner), exe_senior = sum(exe_senior), \n          exe_freeze = sum(exe_freeze), taxed_eav = sum(taxed_eav, na.rm=TRUE)) |&gt; \n  arrange(desc(exe_freeze))\n\n\n\n  \n\n\n\n\n\nCode\nptax_pins |&gt; \n  filter(class_1dig == 2 & eav &gt; 0 & total_billed == 0) |&gt;\n  select(clean_name, class, eav, equalized_av, av, fmv, total_billed, final_tax_to_dist, pin, exe_homeowner, exe_senior, exe_freeze)  |&gt;\n  arrange(desc(exe_freeze)) |&gt;\n  summarize(max = max(eav),\n            min = min(eav),\n            median = median(eav),\n            n = n())",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2021</span>"
    ]
  },
  {
    "objectID": "exemption_addendum.html",
    "href": "exemption_addendum.html",
    "title": "Exemption Addendum",
    "section": "",
    "text": "Which taxpayers benefit the most from homestead exemptions?",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exemption Addendum</span>"
    ]
  },
  {
    "objectID": "exemption_addendum.html#which-taxpayers-benefit-the-most-from-homestead-exemptions",
    "href": "exemption_addendum.html#which-taxpayers-benefit-the-most-from-homestead-exemptions",
    "title": "Exemption Addendum",
    "section": "",
    "text": "Table 1. Comparison of Tax Bills for Median Assessed Value (AV) Class 2 Properties in Selected Municpalities under the Status Quo and Alternative Scenario\nAssessed Value is used to identify the quartile breaks within each municipality for single-family properties. These break points will then be used to look at how the tax bill changes for properties with AVs at the 25th percentile, 50th percentile, and 75th percentile.\nThe assessed value and original equalized assessed values come from the pin data table within PTAXSIM. This table also has every type of exemption that the property received and the amount of EAV that was exempt due to the exemption.\n\n\nCode\ntax_bill_change_HO &lt;- c2pins %&gt;% \n\n  filter(av &gt; 0) %&gt;% \n arrange(av) %&gt;%\n  mutate(eq_av = av_clerk*eq_factor,\n         bill_current = (eav_postexemptions*tax_code_rate),\n         bill_noexemps =  tc_hyp_taxrate*(eav_postexemptions+exe_homeowner),\n         bill_change = bill_noexemps - bill_current) %&gt;%\n  group_by(clean_name, has_HO_exe) %&gt;% \n  summarize(median_AV = median(av),\n            median_EAV = median(eav_postexemptions),\n            median_bill_cur = round(median(bill_current)),\n            median_bill_new = round(median(bill_noexemps)),\n            median_change = round(median(bill_change)),\n            pincount=n(),\n            perceived_savings = median(exe_homeowner*tax_code_rate)\n  )\n\ntax_bill_change_HO |&gt; filter(clean_name %in% c(\"Park Forest\", \"Phoenix\", \"Winnetka\", \"Riverdale\"))\n\n\n\n\nTable 2.1: Figure 2 The median property was found for all Class 2 properties and used to calculate the hypothetical tax bill change for those that do and do not claim the GHE. It is important to note that almost all municipalities have a median AV for those that do claim the GHE that is quite different from those that do not claim the GHE.\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\nFigure 1. Examples of Actual Tax Bills\nPark Forest vs. Winnetka\n\n\n\n\nFigure 2. Value of Median Residential Property Indifferent to Elimination of GHE\n\n\nCode\nmuni_breakeven_points &lt;- c2pins |&gt;\n  left_join(muni_rates) |&gt;\n  filter(exe_homeowner == 10000) %&gt;% \n  filter(exe_senior == 0 & \n           exe_freeze == 0 & \n           exe_longtime_homeowner == 0 & \n           exe_disabled == 0 & \n           exe_vet_returning == 0 & \n           exe_vet_dis_lt50 == 0 & \n           exe_vet_dis_50_69 == 0 & \n           exe_vet_dis_ge70 == 0 & \n           exe_abate == 0) %&gt;%\n  \n  group_by(clean_name) %&gt;%\n  summarize(\n    median_AV = median(av),     # median class 2 AV for properties that did claim the GHE but not other exemptions\n    bill_current = mean(eav_postexemptions * tax_code_rate), # money collected by non-TIF agencies\n    \n    bill_noGHE = mean(tc_hyp_taxrate * (eav_postexemptions+exe_homeowner)), # this uses tax code tax rate\n    rate_change = mean(tax_code_rate - tc_hyp_taxrate),   # avg tax code level rate change \n    muni_avg_rate_change = mean(muni_avg_rate - muni_hyp_taxrate),\n    nobillchange_propertyEAV = round(mean(exe_homeowner * \n                                            (tax_code_rate / (tax_code_rate-tc_hyp_taxrate)))), #   \n    nobillchange_propertyEAV_muni = round(mean(exe_homeowner *\n                                                 (muni_avg_rate/(muni_avg_rate-muni_hyp_taxrate) )))\n  ) |&gt; \n  mutate(nochange_av = nobillchange_propertyEAV / eq_factor,\n         nochange_av_muni = nobillchange_propertyEAV_muni/ eq_factor,\n         ) \n\n\n\n\nmuni_breakeven_points %&gt;%       \n  filter(clean_name %in% c(\"Chicago\",\"Park Forest\", \"Phoenix\", \"Riverdale\", \"Winnetka\")) |&gt;\n  ggplot(aes(y=median_AV, x = clean_name)) +\n  geom_col()+\n    geom_text(aes(y=median_AV + 3000, label = round(median_AV) ) ) +\n  scale_y_continuous(labels = scales::dollar) +\n  theme_classic() +\n  scale_x_discrete(label = c(\"Chicago\",\"Park Forest\", \"Phoenix\", \"Riverdale\", \"Winnetka\")) + \n  labs(y = \"Median Residential AV\", x = \"\", \n       title = \"Median Residential Property Assessed Value - All Class 2 property Types\")\n\n\n\n\n\n\n\n\n\nCode\nmuni_breakeven_points %&gt;%       \n  filter(clean_name %in% c(\"Chicago\",\"Park Forest\", \"Phoenix\", \"Riverdale\", \"Winnetka\")) |&gt;\n  ggplot(aes(y=nochange_av, x = clean_name)) +\n  geom_col() +\n  geom_text(aes(y=nochange_av + 3000, label = round(nochange_av)) ) +\n  scale_y_continuous(labels = scales::dollar) +\n  theme_classic() +\n  scale_x_discrete(label = c(\"Chicago\", \"Park Forest\", \"Phoenix\", \"Riverdale\", \"Winnetka\")) + \n  labs(y = \"Breakeven Point - AV\", x = \"\", \n  title = \"Residential Property AV Breakeven Point\", \n  caption = \"Residential properties above these values would have their bills decrease if the GHE were eliminated\n       (if they had claimed the GHE before)\")\n\n\n\n\n\n\n\n\n\nCode\nmuni_breakeven_points %&gt;%       \n  filter(clean_name %in% c(\"Chicago\",\"Park Forest\", \"Phoenix\", \"Riverdale\", \"Winnetka\")) |&gt;\n  ggplot(aes(y=nochange_av_muni, x = clean_name)) +\n  geom_col() +\n  geom_text(aes(y=nochange_av_muni + 3000, label = round(nochange_av_muni)) ) +\n  scale_y_continuous(labels = scales::dollar) +\n  theme_classic() +\n  scale_x_discrete(label = c(\"Chicago\", \"Park Forest\", \"Phoenix\", \"Riverdale\", \"Winnetka\")) + \n  labs(y = \"Breakeven Point - AV\", x = \"\", \n  title = \"Residential Property AV Breakeven Point\", \n  caption = \"Residential properties above these values would have their bills decrease if the GHE were eliminated\n       (if they had claimed the GHE before)\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nmuni_breakeven_points %&gt;%\n # filter(nochange_av &lt; 300000) %&gt;%\n  ggplot(aes(y=nochange_av, \n             x = median_AV, \n             label=clean_name\n             )) +\n  geom_abline(intercept = 0, slope = 1, lty = 2, alpha = .4) +\n  geom_point(aes(alpha = .5)) +\n # geom_smooth(method = \"lm\" )+\n  geom_text(aes(y = (nochange_av-5000), x = (median_AV)), size = 2)+\n  theme_classic() +\n  scale_x_continuous(labels = scales::dollar) +\n  scale_y_continuous(labels = scales::dollar) +\n  theme(legend.position = \"none\")+\n  labs(y = \" Breakeven Point\", \n       x = \"Median AV - Class 2 Properties in Municipality\", \n      # title = \"Some highly valued homes would have lower tax bills if the GHE were eliminated\", \n       #caption = \"The breakeven point is the assessed values at which a major class 2 \n     #  property would not have their taxbill change if the GHE were eliminated.\"\n     )\n\n\n\n\n\n\nFigure 2.1: Includes all municipalities\n\n\n\n\n\n\n\n\n\nCode\nmuni_breakeven_points %&gt;%\n  filter(nochange_av &lt; 300000) %&gt;%\n  ggplot(aes(y=nochange_av, \n             x = median_AV, \n             label=clean_name\n             )) +\n  geom_abline(intercept = 0, slope = 1, lty = 2, alpha = .4) +\n\n  geom_point(aes(alpha = .5)) +\n  \n  geom_point(data = (muni_breakeven_points %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Riverdale\",\"Dolton\"))), aes(y = nochange_av, x = median_AV, color = \"red\"), size = 3) +\n  ggrepel::geom_label_repel(data = (muni_breakeven_points %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Riverdale\", \"Dolton\"))), aes(y = (nochange_av), x = (median_AV)), size = 3)+\n  theme_classic() +\n  theme(panel.background = element_blank()) + \n  scale_x_continuous(labels = scales::dollar, expand = c(0,0), limits = c(0,170000) ) +\n  scale_y_continuous(labels = scales::dollar, expand = c(0,0), limits = c(0,170000) ) +\n    theme(legend.position = \"none\") +\n\n  labs(title = \"Municipalities' Median AV & Breakeven Point \\nClass 2 Properties Only\",\n    y = \"Breakeven Point\", \n       x = \"Median AV\", \n # caption = \"The breakeven point is the assessed values at which a major class 2 property would not have their taxbill change if the \n # GHE were eliminated. Excludes outliers: University Park, Bedford Park, McCook, Hodgkins, and Rosemont. Class 2 properties that had\n # claimed the GHE would have lower taxbills even if the GHE were removed if the AV is above the breakeven point.\"\n ) + coord_fixed()\n\n#ggsave(\"breakevenpoint.svg\", bg = \"transparent\")\n\n\n\n\n\nFigure 2.2: Breakeven Point …",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exemption Addendum</span>"
    ]
  },
  {
    "objectID": "exemption_addendum.html#how-progressive-are-exemptions",
    "href": "exemption_addendum.html#how-progressive-are-exemptions",
    "title": "Exemption Addendum",
    "section": "How progressive are exemptions?",
    "text": "How progressive are exemptions?\n\nFigure 3. Ratio of Tax Bills to AV for 25th and 75th Percentile AV Class 2 Properties with $10,000 GHE\nFor the different exemption scenarios, we created new exemption variables for alternate exemption amounts that can be subtracted from a properties equalized AV.\n\nex. For exe_neg10 all exemption amounts are equal to zero.\nFor exe_0, This variable should be the same as the current tax system since we did not add or remove any exempt EAV to the PIN. If the EAV for a PIN is less than 10000 EAV and they did claim the general homestead exemption, then their exempt EAV is equal to their EAV.\nIf the exempt EAV allowable for the GHE was increased to 20,000 EAV, then the variable exe_plus10 is used.\n\n\n\nCode\ncook_pins &lt;- cook_pins %&gt;% \n  left_join(class_dict, by = c(\"class\" = \"class_code\")) %&gt;%\n    mutate(has_HO_exe = ifelse( exe_homeowner &gt; 0, 1, 0),\n         has_other_exe = ifelse(exe_senior + exe_freeze + exe_longtime_homeowner + exe_disabled + exe_vet_returning + exe_vet_dis_lt50 + exe_vet_dis_50_69 + exe_vet_dis_ge70 &gt; 0, 1, 0 )) %&gt;% \n  left_join(tax_codes) |&gt;\n  left_join(tc_muninames) %&gt;%\n  mutate(av = av_clerk) |&gt;\n  left_join(tax_code_change) |&gt;\n  left_join(tif_distribution) |&gt;\n  mutate(\n    tax_code_distribution_pct = ifelse(is.na(tax_code_distribution_pct), 0, tax_code_distribution_pct),\n    in_tif = ifelse(tax_code_num %in% tif_distribution$tax_code_num, 1, 0),\n    has_HO_exe = ifelse(exe_homeowner &gt; 0, 1, 0),\n    has_other_exe = ifelse(exe_senior + exe_freeze + exe_longtime_homeowner + exe_disabled +\n                             exe_vet_returning + exe_vet_dis_lt50 + exe_vet_dis_50_69 + \n                             exe_vet_dis_ge70 &gt; 0, 1, 0 ),\n    all_exemptions = rowSums(across(starts_with(\"exe_\"))),\n    final_tax_to_tif = tax_bill_total *  tax_code_distribution_pct,\n    final_tax_to_dist = tax_bill_total-final_tax_to_tif,\n    tif_increment_eav = final_tax_to_tif / tax_code_rate,\n    \n    nontif_eav_preexe = av_clerk*eq_factor - tif_increment_eav,\n    nontif_eav_postexe = av_clerk*eq_factor - tif_increment_eav - all_exemptions,\n    \n    eav_postexemptions = av_clerk*eq_factor - all_exemptions,\n    eav_preexemptions = av_clerk*eq_factor) |&gt;\n  ## Create variables for alternate exemption amounts that can be subtracted from a properties equalized AV\n  mutate(\n    eav = eav_preexemptions,\n    exe_neg10 = 0,\n         \n      # exe_0 implies no additional or removed EAV. Current tax system. \n         exe_0 = ifelse(eav &lt; 10000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;10000 & exe_homeowner!=0, 10000, 0 )),  # no change in current exemptions\n         exe_plus10 = ifelse(eav &lt; 20000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;20000 & exe_homeowner!=0, 20000, 0 )),\n         exe_plus20 = ifelse(eav &lt; 30000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;30000 & exe_homeowner!=0, 30000, 0 ) ),\n         exe_plus30 = ifelse(eav &lt; 40000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;40000 & exe_homeowner!=0, 40000, 0) ),\n         exe_plus40 = ifelse(eav &lt; 50000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;50000 & exe_homeowner!=0, 50000, 0) ),\n         mil_home = ifelse(major_class_code == 2 & av*10 &gt; 1000000, 1, 0))\n\n\n# all pins in munis fully within cook county that are some form of single-family, detached home\nsingfam_pins &lt;- cook_pins %&gt;% \n  filter(Option2 == \"Single-Family\")\n\n\n\n\nCode\n# Calculates tax rates for all exemption scenarios.\nscenario_calcs &lt;- cook_pins %&gt;%    \n  left_join(nicknames) %&gt;%\n  group_by(clean_name) %&gt;%\n\n    summarize(MuniLevy = sum(final_tax_to_dist, na.rm = TRUE), # amount billed by munis with current exemptions in place\n            current_nonTIF_EAV_post_exemps = sum(final_tax_to_dist/(tax_code_rate), na.rm = TRUE),\n            current_TIF_increment_EAV = sum(final_tax_to_tif/(tax_code_rate), na.rm=TRUE),  \n            current_Exempt_EAV = sum(all_exemptions, na.rm=T), \n            current_GHE = sum(exe_homeowner, na.rm=TRUE),\n            Total_EAV = sum(all_exemptions+(final_tax_to_dist+final_tax_to_tif)/(tax_code_rate), na.rm = TRUE),\n            exe_neg10 = sum(exe_neg10),\n            exe_0 = sum(exe_0), # no change, for comparison\n            exe_plus10 = sum(exe_plus10),\n            exe_plus20 = sum(exe_plus20),\n            exe_plus30 = sum(exe_plus30),\n            exe_plus40 = sum(exe_plus40),\n            mil_home = sum(mil_home)\n            ) %&gt;%\n\n  # remove all GHE (up to 10,000 EAV added back to base per PIN), \n  # add exe_homeowner back to taxable base\n  mutate(neg10_taxable_eav = Total_EAV - current_TIF_increment_EAV - current_Exempt_EAV + current_GHE,    # adds GHE exempt EAV back to taxable base and decreases tax rates\n         plus10_taxable_eav = Total_EAV - current_TIF_increment_EAV - current_Exempt_EAV + current_GHE - exe_plus10, # will increase tax rates\n         plus20_taxable_eav = Total_EAV - current_TIF_increment_EAV - current_Exempt_EAV + current_GHE - exe_plus20,\n         plus30_taxable_eav = Total_EAV - current_TIF_increment_EAV - current_Exempt_EAV + current_GHE - exe_plus30,\n         plus40_taxable_eav = Total_EAV - current_TIF_increment_EAV - current_Exempt_EAV + current_GHE - exe_plus40,\n         scenario_noexemptions_taxable_eav = Total_EAV - current_TIF_increment_EAV) %&gt;%\n  \n  mutate(tr_neg10 = MuniLevy / neg10_taxable_eav,\n         tr_nochange = MuniLevy / current_nonTIF_EAV_post_exemps,\n         tr_plus10 = MuniLevy / plus10_taxable_eav,\n         tr_plus20 = MuniLevy / plus20_taxable_eav,\n         tr_plus30 = MuniLevy / plus30_taxable_eav,\n         tr_plus40 = MuniLevy / plus40_taxable_eav, \n         tax_rate_current = MuniLevy/current_nonTIF_EAV_post_exemps,\n         taxrate_noexemps = MuniLevy /(Total_EAV - current_TIF_increment_EAV  ),\n         taxrate_noTIFs = MuniLevy / (Total_EAV - current_Exempt_EAV),\n         taxrate_noTIFs_orExemps = MuniLevy / Total_EAV) %&gt;%\n  select(clean_name, MuniLevy, tr_neg10:taxrate_noTIFs_orExemps, everything())\n\nscenario_taxrates &lt;- scenario_calcs %&gt;%  \n  select(clean_name, MuniLevy, tr_neg10:taxrate_noTIFs_orExemps) \n\nscenario_taxrates\n\n\n\n  \n\n\n\n\n\nCode\nmunis_billchange &lt;- munis_ranked %&gt;% \n    left_join(scenario_taxrates) %&gt;%\n\n  mutate(\n    eav = eav_preexemptions,\n    exe_neg10 = 0,\n         \n      # exe_0 implies no additional or removed EAV. Current tax system. \n         exe_0 = ifelse(eav &lt; 10000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;10000 & exe_homeowner!=0, 10000, 0 )),  # no change in current exemptions\n         exe_plus10 = ifelse(eav &lt; 20000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;20000 & exe_homeowner!=0, 20000, 0 )),\n         exe_plus20 = ifelse(eav &lt; 30000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;30000 & exe_homeowner!=0, 30000, 0 ) ),\n         exe_plus30 = ifelse(eav &lt; 40000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;40000 & exe_homeowner!=0, 40000, 0) ),\n         exe_plus40 = ifelse(eav &lt; 50000 & exe_homeowner!=0, eav, \n                             ifelse(eav&gt;50000 & exe_homeowner!=0, 50000, 0) ),\n         mil_home = ifelse(av*10 &gt; 1000000, 1, 0)) |&gt;\n    mutate(,\n    # current bill = current tax rate * portion of levy billed\n         equalized_AV = av_clerk*eq_factor,\n         \n   # ## Made negative tax bills!! ## #\n          bill_neg10 = tr_neg10*(equalized_AV-all_exemptions+ exe_homeowner -exe_neg10),\n\n         bill_current = tax_code_rate*(equalized_AV-all_exemptions),\n         bill_plus10 =  tr_plus10*(equalized_AV-all_exemptions+ exe_homeowner -exe_plus10),\n         bill_plus20 = tr_plus20*(equalized_AV-all_exemptions+ exe_homeowner -exe_plus20),\n         bill_plus30 = tr_plus20*(equalized_AV-all_exemptions+ exe_homeowner -exe_plus30),\n         bill_plus40 = tr_plus20*(equalized_AV-all_exemptions+ exe_homeowner -exe_plus40),\n    \n    # ## make bills $1 if they had been negative.\n         bill_neg10 = ifelse(bill_neg10 &lt; 1, 1, bill_neg10),\n         bill_current = ifelse(bill_current &lt; 1, 1, bill_current),\n         bill_plus10 = ifelse(bill_plus10 &lt; 1, 1, bill_plus10),\n         bill_plus20 = ifelse(bill_plus20 &lt; 1, 1, bill_plus20),\n         bill_plus30 = ifelse(bill_plus30 &lt; 1, 1, bill_plus30),\n         bill_plus40 = ifelse(bill_plus40 &lt; 1, 1, bill_plus40),\n\n         )%&gt;%\n  mutate(\n         zerodol_bills_ghe0 = ifelse(bill_neg10 &lt; 5, 1, 0),\n         zerodol_bills_current = ifelse(bill_current &lt; 5, 1, 0),\n         zerodol_bills_ghe20 = ifelse(bill_plus10 &lt; 5, 1, 0),\n         zerodol_bills_ghe30 = ifelse(bill_plus20 &lt; 5, 1, 0),\n         zerodol_bills_ghe40 = ifelse(bill_plus30 &lt; 5, 1, 0),\n         zerodol_bills_ghe50 = ifelse(bill_plus40 &lt; 5, 1, 0),\n  ) %&gt;%\n  ungroup() |&gt;\n  group_by(clean_name, rank, has_HO_exe) %&gt;% \n  summarize(median_AV = round(median(av)),\n            median_EAV = round(median(eav)),\n            mean_bill_neg10 = round(mean(bill_neg10, na.rm=TRUE)),\n            mean_bill_cur = round(mean(bill_current, na.rm=TRUE)),\n            mean_bill_plus10 = round(mean(bill_plus10, na.rm=TRUE)),\n            mean_bill_plus20 = round(mean(bill_plus20, na.rm=TRUE)),\n            mean_bill_plus30 = round(mean(bill_plus30, na.rm=TRUE)),\n            mean_bill_plus40 = round(mean(bill_plus40, na.rm=TRUE)),\n            \n            tr_neg10 = round(mean(tr_neg10*100), digits = 2), \n            cur_comp_TC_rate = round(mean(tax_code_rate*100), digits = 2),\n            tr_plus10 = round(mean(tr_plus10*100), digits = 2),\n            tr_plus20 = round(mean(tr_plus20*100), digits = 2),\n            tr_plus30 = round(mean(tr_plus30*100), digits = 2),\n            tr_plus40 = round(mean(tr_plus40*100), digits = 2),\n            pincount=n(),\n            zerodol_bills_ghe0 = sum(zerodol_bills_ghe0),           \n            zerodol_bills_current = sum(zerodol_bills_current),\n            zerodol_bills_ghe20 = sum(zerodol_bills_ghe20),\n            zerodol_bills_ghe30 = sum(zerodol_bills_ghe30),\n            zerodol_bills_ghe40 = sum(zerodol_bills_ghe40),\n            zerodol_bills_ghe50 = sum(zerodol_bills_ghe50),\n\n\n  ) %&gt;%\n  mutate(clean_name = ifelse(clean_name == \"Hazelcrest\", \"Hazel Crest\", clean_name)) %&gt;%\n  arrange(has_HO_exe, rank)\n\n\n\n\n\nratios &lt;- munis_billchange %&gt;% \n  filter(has_HO_exe == 1 &  !is.na(rank)) %&gt;% # claimed exemption in 2021\n  mutate(currbill_to_AV_25 = ifelse(rank == \"q25\", mean_bill_cur/median_AV, NA)) %&gt;%\n  mutate(currbill_to_AV_75 = ifelse(rank == \"q75\", mean_bill_cur/median_AV, NA)) %&gt;% \n  group_by(clean_name) %&gt;%\n  summarize(currbill_to_AV_25 = max(currbill_to_AV_25, na.rm=TRUE),\n            currbill_to_AV_75 = max(currbill_to_AV_75, na.rm=TRUE)) %&gt;%\n  mutate(muni_ratio_25to75 = currbill_to_AV_25/currbill_to_AV_75) %&gt;% filter(muni_ratio_25to75 &gt; 0.01)\n\n\n\nggplot(data = ratios, aes(y = currbill_to_AV_25, x = currbill_to_AV_75, label = clean_name)) + \n  geom_abline(intercept = 0, slope = 1, lty = 2, alpha = .4) +\n  geom_point(data = ratios, aes(alpha = .5)) + \n  ggrepel::geom_label_repel(data = (ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = currbill_to_AV_25, x = currbill_to_AV_75), size = 2, max.overlaps = Inf, point.padding = 0, # additional padding around each point\n    min.segment.length = 0, # draw all line segments\n    )+\n    geom_point(data = (ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = currbill_to_AV_25, x = currbill_to_AV_75, color = \"red\"), size = 2)+\n\n  theme_classic() +\n  theme(legend.background = element_rect(fill = \"transparent\"), \n        legend.box.background = element_rect(fill = \"transparent\"), \n        panel.background = element_rect(fill = \"transparent\"), \n        panel.grid.major = element_blank(), \n        panel.grid.minor = element_blank(), \n        plot.background = element_rect(fill = \"transparent\", \n                                       color = NA) ) +\n    scale_y_continuous(limits = c(0, .6), expand = c(0,0))+\n   scale_x_continuous(limits = c(0, .6), expand = c(0,0))+\n  theme(legend.position = \"none\") +\n  labs(title=\"\", y=\"Tax Burden as a Share of AV \\n(25th Percentile)\", x=\"Tax Burden as a Share of AV \\n(75th Percentile)\", subtitle = \"Current Tax System, GHE = 10,000 EAV\") + coord_fixed()\n\n\n\n\n\n\n\n\n\n\n\nCode\ncook_pins %&gt;%\n  #  filter(av &lt; 1000000) %&gt;% # just to see the histogram better\n#  filter(av &lt; 500000) %&gt;% # just to see the histogram better\n  filter(av &lt; 300000) %&gt;% # just to see the histogram better\n  \n  ggplot( aes(x=av)) +\n  geom_histogram(bins = 50)  +\n  theme_classic()+\n  # coord_flip()+\n  labs(title = \"Cook County Class 2 Residential PIN Distribution of AV\", \n       x = \"Assessed Value ($)\", y=\"# of Pins\", \n       caption = \"Dropped PINs with AVs over $300,000 for better visual of histogram bins.\") +\n  scale_x_continuous(label = scales::dollar)+\n  scale_y_continuous(label = scales::comma)\n\n\nsingfam_pins %&gt;%\n  #  filter(av &lt; 1000000) %&gt;% # just to see the histogram better\n#  filter(av &lt; 500000) %&gt;% # just to see the histogram better\n  filter(av &lt; 300000) %&gt;% # just to see the histogram better\n  \n  ggplot( aes(x=av)) +\n  geom_histogram(bins = 50)  +\n  theme_classic()+\n  # coord_flip()+\n  labs(title = \"Cook County Single-Family PIN Distribution of AV\", \n       x = \"Assessed Value ($)\", y=\"# of Pins\", \n       caption = \"Dropped PINs with AVs over $300,000 for better visual of histogram bins.\"\n       ) +\n  scale_x_continuous(label = scales::dollar)+\n  scale_y_continuous(label = scales::comma)",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exemption Addendum</span>"
    ]
  },
  {
    "objectID": "exemption_addendum.html#what-would-happen-if-the-ghe-value-were-increased",
    "href": "exemption_addendum.html#what-would-happen-if-the-ghe-value-were-increased",
    "title": "Exemption Addendum",
    "section": "What would happen if the GHE value were increased?",
    "text": "What would happen if the GHE value were increased?\n\nFigure 4. Effect of Changing the GHE on Progressivity\n2 X 3 image of distribution for each $10,000 increase in exemption amount\n\nCode\nratios &lt;- munis_billchange %&gt;% \n  filter(has_HO_exe == 1 &  !is.na(rank)) %&gt;% # claimed exemption in 2021\n  mutate(currbill_to_AV_25 = ifelse(rank == \"q25\", mean_bill_neg10/median_AV, NA)) %&gt;%\n  mutate(currbill_to_AV_75 = ifelse(rank == \"q75\", mean_bill_neg10/median_AV, NA)) %&gt;% \n  group_by(clean_name) %&gt;%\n  summarize(GHE_0_bill_to_AV_25 = max(currbill_to_AV_25, na.rm=TRUE),\n            GHE_0_bill_to_AV_75 = max(currbill_to_AV_75, na.rm=TRUE)) %&gt;%\n  mutate(muni_ratio_25to75 = GHE_0_bill_to_AV_25/GHE_0_bill_to_AV_75) \n\n\nggplot(data = ratios, aes(y = GHE_0_bill_to_AV_25, x = GHE_0_bill_to_AV_75, label = clean_name)) + \n  geom_abline(intercept = 0, slope = 1) +\n  geom_point(aes(alpha = .5)) + \n  ggrepel::geom_label_repel(data = (ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = GHE_0_bill_to_AV_25, x = GHE_0_bill_to_AV_75, label = clean_name), size = 3)+\n    geom_point(data = (ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = GHE_0_bill_to_AV_25, x = GHE_0_bill_to_AV_75, color = \"red\"), size = 2)+\n  theme_classic() + \n    scale_y_continuous(limits = c(0, .6), expand = c(0,0))+\n  scale_x_continuous(limits = c(0, .6), expand = c(0,0))+\n  theme(legend.position = \"none\") +\n  labs(title = \"GHE = $0 EAV\", x = \"\", y = \"\")\nratios&lt;- munis_billchange %&gt;% \n  filter(has_HO_exe == 1 &  !is.na(rank)) %&gt;% # claimed exemption in 2021\n  mutate(currbill_to_AV_25 = ifelse(rank == \"q25\", mean_bill_cur/median_AV, NA)) %&gt;%\n  mutate(currbill_to_AV_75 = ifelse(rank == \"q75\", mean_bill_cur/median_AV, NA)) %&gt;% \n  group_by(clean_name) %&gt;%\n  summarize(currbill_to_AV_25 = max(currbill_to_AV_25, na.rm=TRUE),\n            currbill_to_AV_75 = max(currbill_to_AV_75, na.rm=TRUE)) %&gt;%\n  mutate(muni_ratio_25to75 = currbill_to_AV_25/currbill_to_AV_75) %&gt;% filter(muni_ratio_25to75 &gt; 0.01)\n\n\n\nggplot(data = ratios, aes(y = currbill_to_AV_25, x = currbill_to_AV_75, label = clean_name)) + \n  geom_abline(intercept = 0, slope = 1) +\n  geom_point(data = ratios, aes(alpha = .5)) + \n  ggrepel::geom_label_repel(data = (ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = currbill_to_AV_25, x = currbill_to_AV_75), size = 3, max.overlaps = Inf, point.padding = 0, # additional padding around each point\n    min.segment.length = 0, # draw all line segments\n    )+\n    geom_point(data = (ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = currbill_to_AV_25, x = currbill_to_AV_75, color = \"red\"), size = 2)+\n\n  theme_classic() +\n    scale_y_continuous(limits = c(0, .6), expand = c(0,0))+\n   scale_x_continuous(limits = c(0, .6), expand = c(0,0))+\n  theme(legend.position = \"none\") +\n  labs(title = \"GHE = $10,000 EAV (Current)\", x=\"\", y=\"\")\nnew_ratios&lt;- munis_billchange %&gt;% \n  filter(has_HO_exe == 1 &  !is.na(rank)) %&gt;% # claimed exemption in 2021\n  mutate(newbill_to_AV_25 = ifelse(rank == \"q25\", mean_bill_plus10/median_AV, NA)) %&gt;%\n  mutate(newbill_to_AV_75 = ifelse(rank == \"q75\", mean_bill_plus10/median_AV, NA)) %&gt;% \n  group_by(clean_name) %&gt;%\n  summarize(newbill_to_AV_25 = max(newbill_to_AV_25, na.rm=TRUE),\n            newbill_to_AV_75 = max(newbill_to_AV_75, na.rm=TRUE)) %&gt;%\n  mutate(muni_ratio_25to75 = newbill_to_AV_25/newbill_to_AV_75) %&gt;% \n  filter(muni_ratio_25to75 &gt; 0.01)\n\n\nggplot(data = new_ratios, aes(y = newbill_to_AV_25, x = newbill_to_AV_75, label = clean_name)) + \n  geom_abline(intercept = 0, slope = 1) +\n  geom_point(data = new_ratios, aes(alpha = .5)) + \n  ggrepel::geom_label_repel(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75), size = 3, max.overlaps = Inf, point.padding = 0, # additional padding around each point\n    min.segment.length = 0, # draw all line segments\n    )+\n    geom_point(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75, color = \"red\"), size = 2)+\n  theme_classic() + \n  scale_y_continuous(limits = c(0, .6), expand = c(0,0))+\n  scale_x_continuous(limits = c(0, .6), expand = c(0,0))+\n  theme(legend.position = \"none\") + \n  labs(title = \"GHE = $20,000 EAV\", x= \"\", y=\"\")\nnew_ratios&lt;- munis_billchange %&gt;% \n  filter(has_HO_exe == 1 &  !is.na(rank)) %&gt;% # claimed exemption in 2021\n  mutate(newbill_to_AV_25 = ifelse(rank == \"q25\", mean_bill_plus20/median_AV, NA)) %&gt;%\n  mutate(newbill_to_AV_75 = ifelse(rank == \"q75\", mean_bill_plus20/median_AV, NA)) %&gt;% \n  group_by(clean_name) %&gt;%\n  summarize(newbill_to_AV_25 = max(newbill_to_AV_25, na.rm=TRUE),\n            newbill_to_AV_75 = max(newbill_to_AV_75, na.rm=TRUE)) %&gt;%\n  mutate(muni_ratio_25to75 = newbill_to_AV_25/newbill_to_AV_75) %&gt;% \n  \n  filter(muni_ratio_25to75 &gt; 0.01)\n\n\nggplot(data = new_ratios, aes(y = newbill_to_AV_25, x = newbill_to_AV_75, label = clean_name)) + \n  geom_abline(intercept = 0, slope = 1) +\n  geom_point(aes(alpha = .5)) + \n  ggrepel::geom_label_repel(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75), size = 3, max.overlaps = Inf, point.padding = 0, # additional padding around each point\n    min.segment.length = 0, # draw all line segments\n    )+\n    geom_point(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75, color = \"red\"), size = 2)+\n  theme_classic() + \n    scale_y_continuous(limits = c(0, .6), expand = c(0,0))+\n\n  scale_x_continuous(limits = c(0, .6), expand = c(0,0))+\n  theme(legend.position = \"none\") + \n  labs(title = \"GHE = $30,000 EAV\",\n                                        x = \"\", y = \"\")\nnew_ratios&lt;- munis_billchange %&gt;% \n  filter(has_HO_exe == 1 &  !is.na(rank)) %&gt;% # claimed exemption in 2021\n  mutate(newbill_to_AV_25 = ifelse(rank == \"q25\", mean_bill_plus30/median_AV, NA)) %&gt;%\n  mutate(newbill_to_AV_75 = ifelse(rank == \"q75\", mean_bill_plus30/median_AV, NA)) %&gt;% \n  group_by(clean_name) %&gt;%\n  summarize(newbill_to_AV_25 = max(newbill_to_AV_25, na.rm=TRUE),\n            newbill_to_AV_75 = max(newbill_to_AV_75, na.rm=TRUE)) %&gt;%\n  mutate(muni_ratio_25to75 = newbill_to_AV_25/newbill_to_AV_75) %&gt;% \n  filter(muni_ratio_25to75 &gt; 0.01)\n\n\nggplot(data = new_ratios, aes(y = newbill_to_AV_25, x = newbill_to_AV_75, label = clean_name)) + \n  geom_abline(intercept = 0, slope = 1) +\n  geom_point(aes(alpha = .5)) + \n  ggrepel::geom_label_repel(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75), size = 3, max.overlaps = Inf, point.padding = 0, # additional padding around each point\n    min.segment.length = 0, # draw all line segments\n    )+\n    geom_point(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75, color = \"red\"), size = 2)+\n  theme_classic() + \n    scale_y_continuous(limits = c(0, .6), expand = c(0,0))+\n\n  scale_x_continuous(limits = c(0, .6), expand = c(0,0))+\n  theme(legend.position = \"none\") + \n  labs(title = \"GHE = $40,000 EAV\", \n                                     x= \"\", y = \"\")\nnew_ratios&lt;- munis_billchange %&gt;% \n  filter(has_HO_exe == 1 &  !is.na(rank)) %&gt;% # claimed exemption in 2021\n  mutate(newbill_to_AV_25 = ifelse(rank == \"q25\", mean_bill_plus40/median_AV, NA)) %&gt;%\n  mutate(newbill_to_AV_75 = ifelse(rank == \"q75\", mean_bill_plus40/median_AV, NA)) %&gt;% \n  group_by(clean_name) %&gt;%\n  summarize(newbill_to_AV_25 = max(newbill_to_AV_25, na.rm=TRUE),\n            newbill_to_AV_75 = max(newbill_to_AV_75, na.rm=TRUE)) %&gt;%\n  mutate(muni_ratio_25to75 = newbill_to_AV_25/newbill_to_AV_75) %&gt;% filter(muni_ratio_25to75 &gt; 0.01)\n\n\nggplot(data = new_ratios, aes(y = newbill_to_AV_25, x = newbill_to_AV_75, label = clean_name)) + \n  geom_abline(intercept = 0, slope = 1) +\n  geom_point(aes(alpha = .5)) + \n  ggrepel::geom_label_repel(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75), size = 3, max.overlaps = Inf, point.padding = 0, # additional padding around each point\n    min.segment.length = 0, # draw all line segments\n    )+\n    geom_point(data = (new_ratios %&gt;% filter(clean_name %in% c(\"Park Forest\", \"Chicago\", \"Winnetka\", \"Glencoe\", \"Riverdale\", \"Dolton\", \"Markham\", \"Chicago Heights\", \"Hazel Crest\", \"Phoenix\"))), aes(y = newbill_to_AV_25, x = newbill_to_AV_75, color = \"red\"), size = 2)+\n  theme_classic() + \n    scale_y_continuous(limits = c(0, .6), expand = c(0,0))+\n\n  scale_x_continuous(limits = c(0, .6), expand = c(0,0))+\n  theme(legend.position = \"none\") + labs(title = \"GHE = $50,000\", \n                                      x = \"\", y = \"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 3. Revenue Neutral Tax Rates\nRevenue Neutral Tax Rates (Percent) for Select Municipalities as a Function of GHE Value\n\n\nCode\nscenario_taxrates %&gt;% \n  filter(clean_name %in% c(\"Chicago\", \"Dolton\", \"Glencoe\")) |&gt;\n  select(Municipality = clean_name,\n         \"0 GHE\" = tr_neg10,\n         \"10,000 GHE (Current)\" = tr_nochange,\n         \"20,000 GHE\" = tr_plus10,\n         \"30,000 GHE\" = tr_plus20,\n         \"40,000 GHE\" = tr_plus30,\n         \"50,000 GHE\" = tr_plus40)\n\n\n\n  \n\n\n\n\n\nFigure 5. GHE Value and Revenue Neutral Tax Rates\nRelationship of GHE Value and Revenue Neutral Tax Rates in Chicago, Dolton, and Glencoe\n\n\nCode\nscenario_taxrates %&gt;% \n  filter(clean_name %in% c(\"Chicago\", \"Dolton\", \"Glencoe\")) |&gt;\n  select(Municipality = clean_name,\n         \"0 GHE\" = tr_neg10,\n         \"10,000 GHE (Current)\" = tr_nochange,\n         \"20,000 GHE\" = tr_plus10,\n         \"30,000 GHE\" = tr_plus20,\n         \"40,000 GHE\" = tr_plus30,\n         \"50,000 GHE\" = tr_plus40) %&gt;%\n  pivot_longer(cols = c(`0 GHE`:`50,000 GHE`), names_to = \"Scenarios\") %&gt;%\n\n  ggplot() +\n  geom_line(aes(x=Scenarios, y = value, group = Municipality)) + theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nCode\nscenario_taxrates %&gt;% \n  filter(clean_name %in% c(\"Chicago\", \"Dolton\", \"Glencoe\")) %&gt;%\n  select(clean_name, MuniLevy, tr_neg10:taxrate_noTIFs_orExemps) %&gt;%\n  pivot_longer(cols = c(tr_neg10:taxrate_noTIFs_orExemps), names_to = \"GHE_Amount\") %&gt;%\n  ggplot() + \n  geom_col(aes(x=value, y = GHE_Amount, fill = clean_name), position = \"dodge\")  +\n  theme(legend.background = element_rect(fill = \"transparent\"), \n        legend.box.background = element_rect(fill = \"transparent\"), \n        panel.background = element_rect(fill = \"transparent\"), \n        panel.grid.major = element_blank(), \n        panel.grid.minor = element_blank(), \n        plot.background = element_rect(fill = \"transparent\", \n                                       color = NA) ) +\n  labs(x = \"Municipality Composite Tax Rate\", y = \"Exemption Scenarios\")",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exemption Addendum</span>"
    ]
  },
  {
    "objectID": "exemption_addendum.html#paying-for-the-inequitable-effects-of-exemptions",
    "href": "exemption_addendum.html#paying-for-the-inequitable-effects-of-exemptions",
    "title": "Exemption Addendum",
    "section": "Paying for the inequitable effects of exemptions",
    "text": "Paying for the inequitable effects of exemptions\n\nFigure 6. Exemptions by Value in Class 8 Municipalities\n\n\nCode\ncook_pins %&gt;% \n  group_by(clean_name) %&gt;% \n  summarize(\n    exe_homeowner = sum(exe_homeowner),\n    exe_senior = sum(exe_senior),\n    exe_freeze = sum(exe_freeze),\n    exe_longtime_homeowner = sum(exe_longtime_homeowner),\n    exe_disabled = sum(exe_disabled),\n    \n  ) %&gt;%\n  filter(clean_name %in% c(\"Blue Island\", \"Markham\", \"Matteson\", \"Park Forest\")) %&gt;%\n  pivot_longer(cols = c(exe_homeowner:exe_disabled), names_to = \"exe_type\") %&gt;%\n  ggplot() + \n  geom_col(aes(x=clean_name, y = value, fill = exe_type), position = \"dodge\") +\n  scale_y_continuous() + theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nFigure 7. Exemption Share in Class 8 Municipalities\n\n\nCode\ncook_pins %&gt;% \n  group_by(clean_name) %&gt;% \n  summarize(\n    all_exemptions = sum(all_exemptions),\n    eq_av = sum(av_clerk*eq_factor),\n    tif_increment_eav = sum(tif_increment_eav)\n  ) %&gt;%\n  mutate(taxable_eav = eq_av - tif_increment_eav - all_exemptions) |&gt;\n  filter(clean_name %in% c(\"Blue Island\", \"Markham\", \"Matteson\", \"Park Forest\")) %&gt;%\n  pivot_longer(cols = c(all_exemptions:taxable_eav), names_to = \"exe_type\") %&gt;%\n  filter(exe_type %in% c(\"taxable_eav\", \"all_exemptions\"))|&gt;\n  ggplot() + \n  geom_col(aes(x=clean_name, y = value, fill = exe_type), position = \"stack\") +\n  scale_y_continuous() + theme_classic()",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exemption Addendum</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html",
    "href": "incentive_report_content.html",
    "title": "Incentive Classifications",
    "section": "",
    "text": "Data Preparation\nCode\nlibrary(tidyverse)\nlibrary(DT)        # for interactive html tables on website\nlibrary(flextable) # best for exporting to word or PDF files.\n\n\nknitr::opts_chunk$set(warning = FALSE, message = FALSE)\n\nset_flextable_defaults(theme_fun = theme_vanilla, \n                       padding = 2,\n                       line_spacing = 1,\n                       big.mark = \",\",\n                       )\n\noptions(DT.options = list())\n\nFitFlextableToPage &lt;- function(ft, pgwidth = 6){\n\n  ft_out &lt;- ft %&gt;% autofit()\n\n  ft_out &lt;- width(ft_out, width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))\n  return(ft_out)\n}\nCode\n# all pins for 2022 in incorporated AND unincorporated areas\nptax_pins &lt;- read_csv(\"../Output/Dont_Upload/0_joined_PIN_data_2022.csv\") %&gt;%\n  mutate(class = as.numeric(class)) %&gt;%         # Allows for joining later\n    select(-c(propclass_1dig:av.y))\n\n\n# Workaround for identifying more project IDs. \n# Used Appeal ID to create unique identifier to group PINs.\nbor &lt;- read_csv(\"../Output/borappeals.csv\") %&gt;% \n  mutate(project_appellant = paste(project_id, sep = \"-\", appellant))\n# modelsummary::datasummary_skim(bor)\n\n\n# Cleaned PIN-Project list after cleaning the commercial valuation dataset found online. \n# Another temporary work-around until we (maybe) have full keypin list:\nproj_xwalk &lt;- read_csv(\"../Output/all_keypins.csv\")               \n# all commercial valuation properties but made with not-quite-clean data from commercial valuation dataset on Cook County Data Portal (which was made from combining the Methodology worksheets) \n# Values are also only the FIRST PASS assessments and do not include appeals or changes in values\n\n# Join project IDs to PINs:\nptax_pins &lt;- ptax_pins %&gt;% left_join(proj_xwalk)\nnicknames &lt;- readxl::read_excel(\"../Necessary_Files/muni_shortnames.xlsx\") \n#  create tc_muninames from helper file:\n#source(\"../scripts/helper_tc_muninames_2022.R\")\n#tc_muninames &lt;- tc_muninames %&gt;%  select(-year)\n\n# add muni names by joining tax code info:\n# ptax_pins &lt;- ptax_pins %&gt;% \n#  mutate(tax_code_num = as.character(tax_code_num))# %&gt;%\n # left_join(tc_muninames)\n\n\n\n# original class_dict variables already in 0_joined data\n# but I do want the new-ish variables I created to be brought in:\nclass_dict &lt;- read_csv(\"../Necessary_Files/class_dict_expanded.csv\") %&gt;%\n  select(class_code, comparable_props, Alea_cat, incent_prop)\n\n# \"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\", \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\", \"Deer Park\", \"Deerfield\"\n\ncross_county_lines &lt;- c(\"030440000\", \"030585000\", \"030890000\", \"030320000\", \"031280000\",\n                        \"030080000\", \"030560000\", \"031120000\", \"030280000\", \"030340000\",\n                        \"030150000\",\"030050000\", \"030180000\",\"030500000\", \"031210000\")\n\n\nptax_pins &lt;- ptax_pins %&gt;% \n  left_join(class_dict, by =  c(\"class\" = \"class_code\")) %&gt;%\n  mutate(clean_name = ifelse(is.na(clean_name), \"Unincorporated\", clean_name)) %&gt;%\n  filter(!agency_num %in% cross_county_lines)\n\n# BOR data source shortfall: We only have the data if they appeal!\n\nbor_pins &lt;- bor %&gt;% \n  group_by(pin) %&gt;% \n  arrange(desc(tax_year)) %&gt;%\n  summarize(pin = first(pin),              # grabs first occurrence of unique PIN\n            class_bor = list(unique(class)),\n            appellant = first(appellant),\n            project_id = first(project_id), \n            timesappealed = n() ) %&gt;%\n  mutate(proj_appellant = paste(project_id, \"-\", appellant))\n\nptax_pins &lt;- ptax_pins %&gt;% left_join(bor_pins, by = \"pin\")\n\n# now do it the other way and compare\n\nptax_pins &lt;- ptax_pins %&gt;% \n  mutate( both_ids = project_id,\n          both_ids = ifelse(is.na(both_ids), keypin, both_ids),\n          both_ids = ifelse(is.na(both_ids) & between(class, 300, 899), pin, both_ids))\n\neq2022 &lt;- 2.9237 #example of eq factor proliferation\n\nincentive_majorclasses &lt;- c(\"6\", \"7A\", \"7B\", \"8A\", \"8B\")\n\ncommercial_classes &lt;- c(401:435, 490, 491, 492, 496:499,\n                        500:535,590, 591, 592, 597:599, \n                        700:799,\n                        800:835, 891, 892, 897, 899)  \n\nindustrial_classes &lt;- c(480:489,493, \n                        550:589, 593,\n                        600:699,\n                        850:890, 893\n                        )\n\nptax_pins &lt;- ptax_pins %&gt;% \n  mutate(class_1dig = str_sub(class, 1,1),\n         class_group = case_when(\n          (class_1dig == 5 & class %in% commercial_classes) ~ \"5A\",\n          (class_1dig == 5 & class %in% industrial_classes) ~ \"5B\",\n          class_1dig == 7 &  class &lt; 742 ~ \"7A\",\n          class_1dig == 7 &  class &gt;= 742 ~ \"7B\",\n          (class_1dig == 8 & class %in% commercial_classes ) ~ \"8A\",\n          (class_1dig == 8 & class %in% industrial_classes ) ~ \"8B\",\n          TRUE ~ as.character(class_1dig))) %&gt;%\n  mutate(\n    # taxing district revenue = taxable eav * tax rate so rearrange the formula:\n    taxed_eav = final_tax_to_dist / tax_code_rate*100,\n    \n    total_value_eav = (final_tax_to_dist + final_tax_to_tif)/ tax_code_rate * 100 + all_exemptions + abatements,\n    \n    exempt_eav_inTIF = ifelse(in_tif == 1, all_exemptions, 0),\n    \n    exempt_eav = all_exemptions + abatements,\n    \n    taxed_av =  taxed_eav / eq2022, # current value that taxing agencies can tax for their levies\n    \n    ## taxable AV = equalized assessed value net TIF increments, gross exemptions. \n    ## Used for calculating untaxable value further below\n   # taxable_av = (final_tax_to_dist / tax_code_rate *100 + all_exemptions + abatements)/ eq2022, \n  \n    # taxable_eav_fromincents =  ifelse(class &gt;=600 & class &lt; 900, taxable_av * eq2022, 0),\n\n      ## untaxable value = exempt EAV from abatements and exemptions + TIF increment\n    untaxable_value_eav = all_exemptions + abatements + \n      ## TIF increment EAV above frozen EAV, which becomes TIF revenue\n      (final_tax_to_tif /  tax_code_rate*100) +\n      \n      ## difference between 25% and reduced level of assessment for incentive class properties. Excludes TIF increment when calculating the difference! \n      ifelse(between(class, 600, 899), \n             (taxed_av/loa*0.25 - taxed_av)*eq2022, 0),\n   \n    untaxable_incent_eav = ifelse(between(class, 600, 899), \n             (taxed_av/loa*0.25 - taxed_av)*eq2022, 0),\n   \n    #  manually adjust untaxable value of class 239 properties\n    untaxable_value_eav = ifelse(class == 239, \n                                 equalized_av-taxed_eav, untaxable_value_eav), \n    \n    untaxable_value_av = untaxable_value_eav / eq2022,\n    untaxable_value_fmv = untaxable_value_av / loa,\n\n    exempt_fmv = exempt_eav / eq2022 / loa, \n    \n    fmv_inTIF = ifelse(in_tif==1, av/loa, 0),\n   \n    fmv_tif_increment = ifelse(final_tax_to_tif &gt; 0, \n                               ((final_tax_to_tif / (tax_code_rate/100)) / eq2022 ) / loa, 0),\n    fmv_incents_inTIF = ifelse(between(class, 600, 899) & in_tif == 1, \n                               fmv, 0),\n    fmv_incents_tif_increment = ifelse(between(class, 600, 899) & final_tax_to_tif &gt; 0 , \n                               ((final_tax_to_tif / (tax_code_rate/100)) / eq2022 ) / loa, 0),\n    naive_rev_forgone =  untaxable_incent_eav * tax_code_rate/100) %&gt;%\n  select(tax_code, class, pin, fmv,\n         untaxable_value_fmv, fmv_inTIF, fmv_tif_increment, fmv, total_billed, final_tax_to_dist, final_tax_to_tif, tax_code_rate, eav, equalized_av, av, everything())\n\\[\\mbox{Total Value = Taxed Value + Untaxable Value}\\]\nwhere\n\\[\\mbox{Untaxable Value = TIF Increment + Exemptions + Abatements    \n+ Reduced Taxable Value from Lower Incentive Class Assessment Ratios}\\]\nwhere\n\\[\\mbox{Reduced Taxable Value from Incentive Classification Levels of Assessments}\\] \\[\\mbox{which then equals }  {0.25 \\ast EAV - \\approx0.10 \\ast EAV}\\]",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#frequency-of-incentives",
    "href": "incentive_report_content.html#frequency-of-incentives",
    "title": "Incentive Classifications",
    "section": "Frequency of Incentives",
    "text": "Frequency of Incentives\n\nFair Market Value of Incentive PINs\n\n\nCode\nlanduse_incentshares &lt;- ptax_pins %&gt;% \n  filter(Alea_cat != \"Land\") %&gt;%\n  group_by(clean_name, Alea_cat) %&gt;% \n  summarize(pin_count = n(),\n            incent_PC = sum(ifelse(class &gt;=600 & class &lt;=900, 1, 0), na.rm=TRUE),\n            fmv_incentive = sum(ifelse(class &gt;=600 & class &lt;=900, fmv, 0), na.rm = TRUE),\n            project_count = n_distinct(keypin),\n            fmv_group = sum(fmv, na.rm=TRUE),\n          #   av=sum(av)\n) %&gt;%\n  mutate(\n    fmv_incentive = ifelse(fmv_incentive == 0, NA, fmv_incentive),\n    pct_incent = fmv_incentive / fmv_group,\n    pct_incent = ifelse(is.na(pct_incent), 0, pct_incent),\npct_incent = scales::percent(pct_incent)\n)  \n\nindust_top10 &lt;- landuse_incentshares %&gt;%\n  select(clean_name, Alea_cat, fmv_incentive, incent_PC) %&gt;% \n  filter(Alea_cat == \"Industrial\") %&gt;%\n  arrange(desc(fmv_incentive)) %&gt;%\n  head(10) %&gt;% \n  select(-Alea_cat)\n\nindust_top10 %&gt;%\n  flextable() %&gt;% \n  set_header_labels(clean_name = \"Municipality\", incent_PC = '# of Incent. PINs',\nfmv_incentive = \"FMV from Incentive\\nClass Properties\"\n) %&gt;%\n  set_table_properties( layout = \"autofit\", width = .75)\n\n\n\n\n\nMunicipalityFMV from IncentiveClass Properties# of Incent. PINsChicago1,567,026,390488Elk Grove Village927,465,940246Franklin Park659,839,06092North Lake605,255,79019Bedford Park519,319,250151Melrose Park350,581,75092Des Plaines338,782,66056Mc Cook294,324,82047Matteson288,028,3806Markham269,549,800641\n\n\n\nTable 6.1: Top 10 Municipalities using Industrial Incentives\n\n\n\n\n\n\nCode\ncommerc_top10 &lt;- landuse_incentshares %&gt;%\n  select(clean_name, Alea_cat, fmv_incentive, incent_PC) %&gt;% \n  filter(Alea_cat == \"Commercial\") %&gt;%\n  arrange(desc(fmv_incentive)) %&gt;%\n  head(10) %&gt;% \n  select(-Alea_cat)\n  \ncommerc_top10 %&gt;%\n  flextable() %&gt;% \n#align(align = \"right\", j = 2:4) %&gt;%\n  set_header_labels(clean_name = \"Municipality\", \n                    incent_PC = '# of Incent. PINs', \n                    fmv_incentive = \"FMV from Incentive\\nClass Properties\"\n                    ) %&gt;%\n  set_table_properties( layout = \"autofit\", width = .75)\n\n\n\n\n\nMunicipalityFMV from IncentiveClass Properties# of Incent. PINsChicago2,861,809,300190Glenview72,809,4603Matteson57,273,63221Evergreen Park46,413,1806Calumet City40,095,92365South Holland36,050,27347Orland Park32,763,72010Lansing30,327,99527Chicago Heights28,510,43358Homewood25,847,94323\n\n\n\nTable 6.2: Top 10 Municipalities using Commercial Incentives\n\n\n\n\n\n\nShare of Total FMV with Incentive Classification\nCombined Industrial and Commercial FMV with incentive classification divided by total FMV in municipality. Not included in a table in the report.\nOne way of showing areas that have reduced their tax base significantly through the use of incentive classifications.\n\n\nCode\ntable_muni_percentages &lt;- munilevel %&gt;%   \nfilter(!clean_name  %in% c(\"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\", \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\", \"Deer Park\", \"Deerfield\"))\n\ncross_county_line &lt;- c(\"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\", \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\", \"Deer Park\", \"Deerfield\")\n\n\n\n\nCode\n# table_muni_percentages %&gt;%\n#   select(clean_name, pct_fmv_w_incentclass) |&gt; \n#   arrange(desc(pct_fmv_w_incentclass)) %&gt;%\n#     slice(c(1:10, 56:65, 110:119)) %&gt;%\n# \n#   #slice(c(1:10, 67:76, 116:125)) %&gt;%\n#   mutate(pct_fmv_w_incentclass = scales::percent(pct_fmv_w_incentclass, digits =1)) %&gt;%\n#   \n#   flextable() %&gt;% \n#   border_remove() %&gt;%\n#   hline_top() %&gt;%\n#   hline(i = c(10,20)) %&gt;%\n#   \n#   set_header_labels(clean_name = \"Municipality\", pct_fmv_w_incentclass = \"% FMV with\\nIncent. Class.\") %&gt;%\n# add_header_row(values = c(\"County Wide\", \"3.22%\"), top = FALSE) %&gt;%\n#   align(j = 2, align = \"right\") %&gt;%\n# \n#   set_table_properties( layout = \"autofit\")\n\n\n\ntable_muni_percentages %&gt;%\n  select(clean_name, pct_fmv_w_incentclass) |&gt; \n  arrange(desc(pct_fmv_w_incentclass)) %&gt;%\n  #slice(c(1:5, 69:73, 121:125)) %&gt;%\n    slice(c(1:5, 58:62, 115:119)) %&gt;%\n\n  mutate(pct_fmv_w_incentclass = scales::percent(pct_fmv_w_incentclass, digits = 2)) %&gt;%\n  flextable() %&gt;% \n  border_remove() %&gt;%\n  hline_top() %&gt;%\n  hline(i = c(5,10)) %&gt;%\n\n  set_header_labels(clean_name = \"Municipality\", pct_fmv_w_incentclass = \"% FMV\") %&gt;%\n  align(j = 2, align = \"right\") %&gt;%\nalign(j=2, align = \"right\", part = \"header\") %&gt;%\nset_table_properties( layout = \"autofit\")\n\n\n\n\n\nMunicipality% FMVMc Cook70.20%Bedford Park47.70%Markham40.50%North Lake39.20%Hodgkins35.10%Maywood1.50%Tinley Park1.50%Chicago1.40%Chicago Ridge1.40%Midlothian1.30%Western Springs0.00%Wilmette0.00%Winnetka0.00%Worth0.00%\n\n\n\nTable 6.3: Municipalities with the largest share of FMV property with incentive classification. Uses 2022 data.\n\n\n\n\n\n\nCode\nlibrary(sf)\nlibrary(ggpattern)\n\nmuni_shp &lt;- read_sf(\"https://gis.cookcountyil.gov/traditional/rest/services/politicalBoundary/MapServer/2/query?outFields=*&where=1%3D1&f=geojson\")\n#muni_shp  %&gt;% write_sf(\"./inputs/muni_shp.shp\")\n\n#muni_shp &lt;- read_sf(\"../inputs/muni_shp.shp\")\n\n\n\nno_incentives &lt;-  ptax_pins %&gt;% \n # filter(between(class, 600, 899)) %&gt;%\n  group_by(clean_name) %&gt;% \n  summarize(incent_pins = sum(ifelse(between(class, 600, 899), 1, 0))) %&gt;%\n  filter(incent_pins == 0) %&gt;% \n  distinct(clean_name)\n\n\nno_incentives &lt;- no_incentives %&gt;%\nleft_join(muni_shp, by = c(\"clean_name\" = \"MUNICIPALITY\")) \n\nmunilevel &lt;- munilevel %&gt;% left_join(nicknames, by = c(\"clean_name\" = \"shpfile_name\"))\n\n# unincorp_areas &lt;- muni_shp %&gt;% filter(!MUNICIPALITY %in% munilevel$clean_name)\n#anti_join(munilevel, muni_shp, by = c(\"clean_name\" = \"MUNICIPALITY\"))\n\n# unincorp_areas2 &lt;- muni_shp %&gt;% filter(!MUNICIPALITY %in% munilevel$shpfile_name)\n\n\n\n\nCode\ntable_muni_percentages %&gt;%\n  select(clean_name, pct_fmv_w_incentclass) %&gt;%\n  left_join(nicknames) %&gt;%\n filter(!is.na(clean_name) & clean_name != \"Unincorporated\" ) %&gt;%\n  full_join(muni_shp, by = c(\"shpfile_name\" = \"MUNICIPALITY\")) %&gt;%\n  \n  ggplot(aes(fill = pct_fmv_w_incentclass)) +\n  geom_sf(aes(geometry = geometry), color = \"black\") +\n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n  scale_fill_steps2(\n    high = \"brown\", low = \"black\",\n    show.limits=TRUE,\n    nice.breaks=FALSE,\n    na.value=\"gray\",\n    n =4,\n    name = \"Percent of Municipality FMV\\nwith Incentive Classification\",\n    labels = scales::percent\n) +\n   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = \"white\", alpha = .5, color = 'gray40')\n\n\n\n\n\n\n\n\n\nFigure 6.1: Percent of Municipality FMV with Incentive Classification % = FMV from Incentive Class properties / Muni FMV\n\n\n\n\n\n\nCode\ntable2 &lt;- ptax_pins %&gt;% \n    filter(Alea_cat != \"Land\") %&gt;%\n  group_by(clean_name, incent_prop) %&gt;%   # projects can be counted twice if the project has incentive and normal commercial/industrial prop classes.\n  summarize(pin_count = n(),\n         project_count = n_distinct(keypin), \n         av_adjusted=sum(ifelse(between(class, 600, 899), av*2.5, av)),\n         av=sum(av, na.rm=TRUE),\nfmv=sum(fmv)) \n\ndatatable(table2,\n          rownames= FALSE,\n          colnames = c('Municipality' = 'clean_name',   'Incentivized?' = 'incent_prop', 'PIN Count' = 'pin_count', 'Project Count' = 'project_count', 'Taxable AV' = 'av')) %&gt;%\n  formatCurrency(c('Taxable AV', 'av_adjusted'), digits = 0)\n\n\n\n\n\n\n\n\n\n\nTable 6.4: PINs and value summarized by if the property has an incentive class or not in a municipality. AV Adjusted is the amount of assessed value that could be taxed if the property were assessed at 25% instead of the lower level of assessment of approximately 10%.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#share-of-commercial-industrial-fmv-with-incentive-classification",
    "href": "incentive_report_content.html#share-of-commercial-industrial-fmv-with-incentive-classification",
    "title": "Incentive Classifications",
    "section": "Share of Commercial & Industrial FMV with Incentive Classification",
    "text": "Share of Commercial & Industrial FMV with Incentive Classification\n\n\nCode\nmuni_incent_share &lt;- ptax_pins %&gt;% \n  # drop munis mostly outside of Cook and unincorporated PINs\nfilter(!agency_num %in% cross_county_line & !is.na(clean_name) ) %&gt;%\n\n  filter(Alea_cat == \"Industrial\" | Alea_cat == \"Commercial\") %&gt;%\n  group_by(clean_name, agency_num) %&gt;% \n  summarize(pin_count = n(),\n            incent_PC = sum(ifelse(class &gt;=600 & class &lt;900, 1, 0), na.rm=TRUE),\n            fmv_w_incent = sum(ifelse(class &gt;=600 & class &lt;900, fmv, 0), na.rm = TRUE),\n            project_count = n_distinct(keypin),\n            fmv_group = sum(fmv, na.rm=TRUE),\n            comind_fmv =sum(fmv, na.rm=TRUE),\n            pins_inTIF = sum(in_tif, na.rm=TRUE)) %&gt;%\n  mutate(\n    fmv_w_incent = ifelse(fmv_w_incent == 0, NA, fmv_w_incent),\n    pct_fmv_w_incent = fmv_w_incent/comind_fmv,\n    pct_fmv_w_incent = ifelse(is.na(pct_fmv_w_incent), 0, pct_fmv_w_incent)\n\n\n) \n\n# muni_incentshare_slice &lt;- muni_incent_share %&gt;%\n#   ungroup() %&gt;%\n#   mutate(pct_fmv_w_incentclass = fmv_w_incent/comind_fmv,\n#          pct_fmv_w_incentclass = ifelse(is.na(pct_fmv_w_incentclass), 0, pct_fmv_w_incentclass)) %&gt;%\n#   select(clean_name, pct_fmv_w_incentclass) |&gt; \n#   arrange(desc(pct_fmv_w_incentclass)) %&gt;%\n#   mutate(pct_fmv_w_incentclass = scales::percent(pct_fmv_w_incentclass, accuracy = 0.01) ) %&gt;%\n#   slice(c(1:10, 56:65, 110:119)) \n# \n# muni_incentshare_slice %&gt;%\n#   flextable() %&gt;% \n#   border_remove() %&gt;%\n#   hline_top() %&gt;%\n#   hline(i = c(10,20)) %&gt;%\n#   set_header_labels(clean_name = \"Municipality\", pct_fmv_w_incentclass = \"% FMV with\\nIncent. Class.\") %&gt;%\n# add_header_row(values = c(\"County Wide\", \"3.25%\"), top = FALSE) %&gt;%\n#     align(j = 2, align = \"right\", part = \"all\") %&gt;%\n# \n# add_footer(\"There are 27 municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.\", top = FALSE) %&gt;%\n#   set_table_properties( layout = \"autofit\")\n\n\nmuni_incentshare_slice &lt;- muni_incent_share  %&gt;%\nungroup() %&gt;%\nfilter(!agency_num %in% cross_county_lines) %&gt;%\n  mutate(pct_fmv_w_incentclass = fmv_w_incent/comind_fmv,\n    pct_fmv_w_incentclass = ifelse(is.na(pct_fmv_w_incentclass), 0, pct_fmv_w_incentclass)) %&gt;%\n  select(clean_name, pct_fmv_w_incentclass) |&gt; \n  arrange(desc(pct_fmv_w_incentclass)) %&gt;%\n  mutate(pct_fmv_w_incentclass = scales::percent(pct_fmv_w_incentclass, accuracy = 0.01 ) ) %&gt;%\n  slice(c(1:5, 58:62, 115:119))\n  \nmuni_incentshare_slice %&gt;%\n  flextable() %&gt;% \n  border_remove() %&gt;%\n  align(j = 2, align = \"right\", part = \"all\") %&gt;%\n  hline_top() %&gt;%\n  hline(i = c(5,10)) %&gt;%\n  set_header_labels(clean_name = \"Municipality\", pct_fmv_w_incentclass = \"% FMV with\\nIncent. Class.\") %&gt;%\n#add_header_row(values = c(\"County Wide\", \"3.25%\"), top = FALSE) %&gt;%   align(j = 2, align = \"right\" ) %&gt;%\nbold(i = 8) %&gt;%\n  set_table_properties( layout = \"autofit\")\n\n\n\n\n\nMunicipality% FMV withIncent. Class.Markham78.77%Sauk Village78.23%Mc Cook76.47%North Lake72.93%Matteson65.14%Rolling Meadows10.05%Niles9.92%Palos Heights9.88%Richton Park9.26%Broadview8.73%Stickney0.00%Western Springs0.00%Wilmette0.00%Winnetka0.00%Worth0.00%\n\n\n\nTable 6.5: Municipalities with the largest share of Commercial and Industrial property with incentive classification. Uses tax year 2022 values obtained from PTAXSIM, and levels of assessment from CCAO’s Github. There are 27 municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.\n\n\n\n\n\n\nCode\nmuni_incent_share %&gt;%\n  select(clean_name, pct_fmv_w_incent) %&gt;%\n  left_join(nicknames) %&gt;%\nfilter(clean_name != \"Unincorporated\") %&gt;%\n  full_join(muni_shp, by = c(\"shpfile_name\" = \"MUNICIPALITY\")) %&gt;%\n  \n  ggplot(aes(fill = pct_fmv_w_incent)) +\n  geom_sf(aes(geometry = geometry), color = \"black\") +\n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n  scale_fill_steps2(\n    high = \"brown\", low = \"black\",\n    show.limits=TRUE,\n    nice.breaks=FALSE,\n    na.value=\"gray\",\n    n =4,\n    name = \"Percent of Commercial &\\nIndustrial FMV with\\nIncentive Classification\",\n    labels = scales::percent\n) +\n   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = \"white\", alpha = .5, color = 'gray40')\n\n\n\n\n\n\n\n\nFigure 6.2: Share of Commercial and Industrial FMV that has an incentive property class.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#share-of-industrial-fmv-with-incentive-classification-within-each-municipality",
    "href": "incentive_report_content.html#share-of-industrial-fmv-with-incentive-classification-within-each-municipality",
    "title": "Incentive Classifications",
    "section": "Share of Industrial FMV with Incentive Classification within each Municipality",
    "text": "Share of Industrial FMV with Incentive Classification within each Municipality\n\n\nCode\nindust_share_full &lt;- munilevel  %&gt;%\nungroup() %&gt;%\n#filter(!agency_num %in% cross_county_lines) %&gt;%\n  mutate(pct_fmv_indust_incent =  muni_fmv_indust_incentive/muni_fmv_industrial,\n    pct_fmv_indust_incent = ifelse(is.na(pct_fmv_indust_incent), 0, pct_fmv_indust_incent)) %&gt;%\n  select(clean_name, pct_fmv_indust_incent) |&gt; \n  arrange(desc(pct_fmv_indust_incent)) %&gt;%\n  mutate(pct_fmv_indust_incent = scales::percent(pct_fmv_indust_incent, accuracy = 0.01 ) ) \n\nindust_share &lt;- indust_share_full %&gt;%\n  slice(c(1:5, 58:62, 115:119))\n\nindust_share %&gt;%\n  flextable() %&gt;% \n  border_remove() %&gt;%\n  align(j = 2, align = \"right\", part = \"all\") %&gt;%\n  hline_top() %&gt;%\n  hline(i = c(5,10)) %&gt;%\n  set_header_labels(clean_name = \"Municipality\", pct_fmv_indust_incent = \"% FMV with\\nIncent. Class.\") %&gt;%\nbold(i = 8) %&gt;%\n  set_table_properties( layout = \"autofit\")\n\n\n\n\n\nMunicipality% FMV withIncent. Class.Matteson92.75%Markham92.46%Homewood91.47%Phoenix90.62%Richton Park89.07%Crestwood20.77%Dolton20.53%Lansing19.36%Forest Park18.97%Lemont18.93%Western Springs0.00%Willow Springs0.00%Wilmette0.00%Winnetka0.00%Worth0.00%\n\n\n\nTable 6.6: Percent of Industrial FMV within each Municipality that has incentive classification. 37 municipalities do not use industrial incentives.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#share-of-commercial-fmv-with-incentive-classification-within-each-municipality",
    "href": "incentive_report_content.html#share-of-commercial-fmv-with-incentive-classification-within-each-municipality",
    "title": "Incentive Classifications",
    "section": "Share of Commercial FMV with Incentive Classification within each Municipality",
    "text": "Share of Commercial FMV with Incentive Classification within each Municipality\n\n\nCode\ncommerc_share_full &lt;- munilevel  %&gt;%\n  ungroup() %&gt;%\n#filter(!agency_num %in% cross_county_lines) %&gt;%\n  mutate(pct_fmv_commerc_incent =  muni_fmv_commerc_incentive/muni_fmv_commercial,\n    pct_fmv_commerc_incent = ifelse(is.na(pct_fmv_commerc_incent), 0, pct_fmv_commerc_incent)) %&gt;%\n  select(clean_name, pct_fmv_commerc_incent) |&gt; \n  arrange(desc(pct_fmv_commerc_incent)) %&gt;%\n  mutate(pct_fmv_commerc_incent = scales::percent(pct_fmv_commerc_incent, accuracy = 0.01 ) ) \n\ncommerc_share &lt;- commerc_share_full %&gt;%\n  slice(c(1:5, 58:62, 115:119))\n\ncommerc_share %&gt;%\n  flextable() %&gt;% \n  border_remove() %&gt;%\n  align(j = 2, align = \"right\", part = \"all\") %&gt;%\n  hline_top() %&gt;%\n  hline(i = c(5,10)) %&gt;%\n  set_header_labels(clean_name = \"Municipality\", pct_fmv_commerc_incent = \"% FMV with\\nIncent. Class.\") %&gt;%\nbold(i = 8) %&gt;%\n  set_table_properties( layout = \"autofit\")\n\n\n\n\n\nMunicipality% FMV withIncent. Class.Sauk Village46.69%Calumet Park29.30%Posen28.73%Ford Heights28.20%Phoenix28.17%Bedford Park1.55%Park Ridge1.49%Oak Park1.38%Hoffman Estates1.29%North Lake1.25%Westchester0.00%Western Springs0.00%Wilmette0.00%Winnetka0.00%Worth0.00%\n\n\n\nTable 6.7: Percent of Commercial FMV within each Municipality that has incentive classification. 49 municipalities do not use commercial incentives.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#shifted-tax-revenue-and-tax-burden",
    "href": "incentive_report_content.html#shifted-tax-revenue-and-tax-burden",
    "title": "Incentive Classifications",
    "section": "Shifted Tax Revenue and Tax Burden",
    "text": "Shifted Tax Revenue and Tax Burden\nRead in CCAO level of assessment rates for each property class. Read in Summary file for Municipalities from 2006 to 2022.\n\n\nCode\nccao_loa &lt;- read_csv(\"../inputs/ccao_loa.csv\") %&gt;% \n  filter(year== 2022) %&gt;% \n  select(-year)\n\nmuni_rate &lt;- read_csv(\"../Output/ptaxsim_muni_level_2006-2022.csv\") %&gt;%\n  filter(year == 2022) %&gt;%\n  left_join(nicknames) %&gt;% \n  select(clean_name, muni_current_rate_avg, muni_pct_eav_taxed,# cur_comp_muni_rate\n) %&gt;%\n  rename(cur_munilevel_rate = muni_current_rate_avg)",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#not-taxed-value---pin-aggregated-to-county-level",
    "href": "incentive_report_content.html#not-taxed-value---pin-aggregated-to-county-level",
    "title": "Incentive Classifications",
    "section": "Not Taxed Value - PIN aggregated to County Level",
    "text": "Not Taxed Value - PIN aggregated to County Level\n\n\nCode\ncook_ratechange &lt;- ptax_pins %&gt;%\n  # left_join(muni_rate) %&gt;%\n  filter(!clean_name  %in% c(\"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\",\n                             \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\",\n                             \"Deer Park\", \"Deerfield\")) %&gt;% \n  filter(!agency_num %in% cross_county_lines & !is.na(clean_name) & clean_name!=\"Unincorporated\" )  %&gt;%\n  #group_by(class_group) %&gt;%\n  summarize(\n    \n    ## New Tax Base Calculations\n    new_TEAV_noIncents = sum(ifelse(class &gt;= 600 & class &lt; 900,\n                                    (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022), na.rm=TRUE),\n    \n    ## NewTax Base Calculations\n    new_TEAV_noCommercIncents = sum(ifelse(class &gt;= 600 & class &lt; 900 & class %in% commercial_classes,\n                                           (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022), na.rm=TRUE),\n\n   new_TEAV_noIndustIncents = sum(ifelse(class &gt;= 600 & class &lt; 900 & class %in% industrial_classes,\n      (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022), na.rm=TRUE),\n\n    new_TEAV_noC6 = sum(ifelse( class &gt;=600 & class &lt; 700, \n(taxed_av*eq2022/loa)*0.25 , taxed_av*eq2022), na.rm=TRUE),\n\n    new_TEAV_noC7 = sum(ifelse(class &gt;=700 & class &lt; 800,\n(taxed_av*eq2022/loa)*0.25, taxed_av*eq2022), na.rm=TRUE),\n\n    new_TEAV_noC8 = sum(ifelse(class &gt;=800 & class &lt; 900, (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022), na.rm=TRUE),\n    \n    new_TEAV_vacant_props = sum(ifelse(class &gt;=600 & class &lt;900,  # if incentive classes were assessed at 0% (aka not taxedat all) or if the building lost its value completely without the incentive classification.\n                                       0, taxed_av*eq2022), na.rm=TRUE),\n    \n    new_TEAV_noExemps = sum(taxed_av*eq2022 + all_exemptions, na.rm=TRUE), # does not include abatements\n    new_TEAV_noAbates = sum(taxed_av*eq2022 + abatements, na.rm=TRUE), # include only abatements, not other exemption types\n  \n    \n    # TIF increment above the frozen EAV\n    forgone_TIF_EAV = sum(fmv_tif_increment * loa * eq2022, na.rm=TRUE),\n \n\n    cty_PC = n(),\n    # projects = n_distinct(both_ids), # mostly for industrial and commercial properties\n    pins_withincents = sum(ifelse(class &gt;= 600 & class &lt; 900, 1, 0)),\n    fmv_incentive = sum(ifelse(class &gt;=600 & class &lt;900, fmv, 0), na.rm = TRUE),\n    #fmv_taxed =  sum(taxed_fmv, na.rm=TRUE),\n    fmv_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;900 & final_tax_to_tif &gt; 0, fmv, 0), na.rm = TRUE),\n    fmv_inTIF = sum(fmv_inTIF, na.rm=TRUE),\n    fmv_tif_increment = sum(fmv_tif_increment, na.rm=TRUE),\n    fmv_untaxable_value = sum(untaxable_value_fmv , na.rm=TRUE),\n    fmv_exemptions = sum(all_exemptions/eq2022/loa, na.rm=TRUE),\n    fmv_abatements = sum(exe_abate/eq2022/loa, na.rm=TRUE),\n    zero_bill = sum(zero_bill, na.rm=TRUE),\n    fmv_residential = sum(ifelse(class %in% c(200:399), fmv, 0), na.rm = TRUE),\n    fmv_C2 = sum(ifelse(class %in% c(200:299), fmv, 0), na.rm = TRUE),\n    \n    fmv_industrial = sum(ifelse(class %in% industrial_classes, fmv, 0), na.rm = TRUE),\n    fmv_commercial = sum(ifelse(class %in% commercial_classes, fmv, 0), na.rm = TRUE),\n    \n    current_rate_avg = mean(tax_code_rate),\n    avg_C2_bill_noexe = mean(ifelse(between(class,200,299) & all_exemptions == 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    avg_C2_bill_withexe = mean(ifelse(between(class,200,299) & all_exemptions &gt; 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    av_taxed = sum(taxed_av, na.rm = TRUE),\n    untaxable_value_av = sum(untaxable_value_av, na.rm=TRUE),\n    av = sum(av),\n    eav_taxed = sum(taxed_av*eq2022), \n    eav_untaxable = sum(untaxable_value_eav, na.rm=TRUE),\n    eav_max = sum(fmv*loa*eq2022, na.rm=TRUE),\n    fmv = sum(fmv, na.rm=TRUE),\n    pins_in_class = n(),\n    all_exemptions = sum(all_exemptions),   # in EAV\n    abatements = sum(exe_abate),            # in EAV\n    eav_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;=900 & in_tif == 1, eav, 0), na.rm = TRUE),\n\n    final_tax_to_dist = sum(final_tax_to_dist), ## Amount of Total Levy\n    final_tax_to_tif = sum(final_tax_to_tif),\n    eav = sum(eav)) %&gt;%\n  mutate(\n   reducedEAV_comind_incents =  new_TEAV_noIncents - eav_taxed,\n   reducedEAV_commerc_incents  = new_TEAV_noCommercIncents - eav_taxed,\n\n   reducedEAV_indust_incents  = new_TEAV_noIndustIncents - eav_taxed,\n    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties\n    # Commercial and industrial assessed at 25%\n    TEAV_max = eav_taxed + all_exemptions + abatements + forgone_TIF_EAV +    reducedEAV_comind_incents,\n\n    # no exemptions or incentive classifications:\n    TEAV_neither = eav_taxed + all_exemptions + reducedEAV_comind_incents,\n\n    rate_noExe = final_tax_to_dist / new_TEAV_noExemps * 100,\n    rate_noCommercInc = final_tax_to_dist / new_TEAV_noCommercIncents * 100,\n    rate_noIndustInc = final_tax_to_dist / new_TEAV_noIndustIncents * 100,\n\n    rate_noAbate = final_tax_to_dist / new_TEAV_noAbates * 100,\n    rate_noInc = final_tax_to_dist / new_TEAV_noIncents * 100,\n    rate_neither = final_tax_to_dist / TEAV_neither * 100, \n    rate_noTIFs = final_tax_to_dist / (eav_taxed + forgone_TIF_EAV) * 100,\n    rate_vacant = final_tax_to_dist / new_TEAV_vacant_props* 100,\n    rate_lowest = final_tax_to_dist / TEAV_max * 100,\n    rate_current = final_tax_to_dist / eav_taxed * 100,\n    change_noInc = rate_current - rate_noInc,\n\n    forgonerev_noExe = rate_noExe/100 * all_exemptions,\n    forgonerev_noAbate = rate_noAbate/100 * (new_TEAV_noAbates - eav_taxed),\n    forgonerev_noIncents = rate_noInc/100 * (new_TEAV_noIncents - eav_taxed),\n    forgonerev_noCommercIncents = rate_noInc/100 * (new_TEAV_noCommercIncents - eav_taxed),\n\n    forgonerev_noIndustIncents = rate_noInc/100 * (new_TEAV_noIndustIncents - eav_taxed),\n\n    forgone_noExe_or_Inc = rate_neither/100 * (TEAV_neither - eav_taxed),\n    forgonerev_noTIFs = rate_noTIFs/100 * forgone_TIF_EAV,\n    forgonerev_vacant = rate_vacant/100 * (new_TEAV_vacant_props - eav_taxed),\n    forgonerev_maxTEAV = rate_lowest/100 * (TEAV_max - eav_taxed)\n)\n\n\n\n\nCode\ncook_ratechange %&gt;% \nselect(\"Current Composite Rate\" = rate_current, \"Rate if Incentive Props LoA is 25%\" = rate_noInc, \"Tax Rate Change\" =  change_noInc) %&gt;% flextable()\n\n\nCurrent Composite RateRate if Incentive Props LoA is 25%Tax Rate Change8.6390958.4487360.1903587\n\n\n\n\nCode\ncook_ratechange %&gt;% \nselect(\"Commerc. EAV w/Incent\" = reducedEAV_commerc_incents, \"Indust EAV w/ Incent\" = reducedEAV_indust_incents,\n       \"CommInd EAV w/ Incent\" = reducedEAV_comind_incents,\n       \"Homeowner Exemption Exempt EAV\" = all_exemptions) %&gt;% flextable()\n\n\nCommerc. EAV w/IncentIndust EAV w/ IncentCommInd EAV w/ IncentHomeowner Exemption Exempt EAV997,338,1043,046,250,0844,043,588,18814,543,768,233\n\n\n$15 Billion EAV is tax exempt due to homeowners exemptions. All incentive properties combined only have $4 billion EAV that is tax exempt (due to the decreased level of assessment which results in less AV, and therefore, EAV)\n\nEstimates for Revenue Shifted to Non-Incentive Class Properties\n\nTake new tax rate and apply it to new taxbase.\n\n\n\nCode\ncook_ratechange %&gt;% \nselect(contains(\"forgonerev\") ) %&gt;% flextable()\n\n\nforgonerev_noExeforgonerev_noAbateforgonerev_noIncentsforgonerev_noCommercIncentsforgonerev_noIndustIncentsforgonerev_noTIFsforgonerev_vacantforgonerev_maxTEAV1,162,261,990411,711.8341,632,08484,262,462257,369,6231,642,621,487-238,189,2172,817,669,562\n\n\n\n\nNaive Revenue Shift\nUses old current tax rate and multiplies it by the new taxbase.\n\n\nCode\nptax_pins %&gt;%\n  filter(!clean_name  %in% c(\"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\",\n                             \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\",\n                             \"Deer Park\", \"Deerfield\")) %&gt;% \n  filter(!agency_num %in% cross_county_lines & \n           !is.na(clean_name) & clean_name!=\"Unincorporated\" )  %&gt;%\n  summarize(\n    # for homestead exemptions\n    mostnaive_forgone_tax_amt_exe = sum(tax_amt_exe),    \n  \n    # more accurate but still uses current tax rate instead of recalculated tax rate:\n    forgonerev_from_exemptions  = sum(ifelse(class &gt;= 200 & class &lt; 300,\n          (((av*eq2022) - (taxed_av*eq2022))) * tax_code_rate/100, 0), na.rm=TRUE),\n\n   # amount of EAV from taxing an additional 15% of the AV if incentive properties didn't exist\n   # using current tax rate for each property at the tax code level\n    forgonerev_from_comind_incents  = sum(ifelse(class &gt;= 600 & class &lt; 900,\n          (((taxed_av*eq2022)*0.25 - (taxed_av*eq2022))) * tax_code_rate/100, 0), na.rm=TRUE),\n\n    forgonerev_commerc_incents  = sum(ifelse(class &gt;= 600 & class &lt; 900 & class %in% commercial_classes,\n          (((taxed_av*eq2022)*0.25 - (taxed_av*eq2022))) * tax_code_rate/100, 0), na.rm=TRUE),\n\n    forgonerev_indust_incents  = sum(ifelse(class &gt;= 600 & class &lt; 900 & class %in% industrial_classes,\n         (((taxed_av*eq2022)*0.25 - (taxed_av*eq2022))) * tax_code_rate/100, 0), na.rm=TRUE),\n   \n    #  forgonerev_noTIFs = rate_current/100 * ,\n       # TIF increment above the frozen EAV\n    forgonerev_TIFs = sum(fmv_tif_increment * loa * eq2022*tax_code_rate/100, na.rm=TRUE),\n   \n   # if incentive properties had no tax value (i.e. owners left, or fully tax exempt)\n   # also equal to the current amount collected from incentive properties\n     forgonerev_vacant = sum(ifelse(class &gt;= 600 & class &lt; 900,  taxed_av*eq2022 * tax_code_rate/100, 0), na.rm = TRUE)\n   )",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#change-in-composite-property-tax-rate-due-to-incentives-and-other-policy-scenarios",
    "href": "incentive_report_content.html#change-in-composite-property-tax-rate-due-to-incentives-and-other-policy-scenarios",
    "title": "Incentive Classifications",
    "section": "Change in Composite Property Tax Rate Due to Incentives and other Policy Scenarios",
    "text": "Change in Composite Property Tax Rate Due to Incentives and other Policy Scenarios\n\n\nCode\nmuni_ratechange &lt;- ptax_pins %&gt;%\n  ungroup() |&gt;\n  # left_join(muni_rate) %&gt;%\n  filter(!clean_name  %in% c(\"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\", \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\", \"Deer Park\", \"Deerfield\")) %&gt;% \n  filter(!agency_num %in% cross_county_lines) %&gt;%\n\n  group_by(clean_name) %&gt;%\n  summarize(\n    classgroup_PC = n(),\n    # projects = n_distinct(both_ids), # mostly for industrial and commercial properties\n    pins_withincents = sum(ifelse(class &gt;= 600 & class &lt; 900, 1,0)),\n    fmv_incentive = sum(ifelse(class &gt;=600 & class &lt;900, fmv, 0), na.rm = TRUE),\n    #fmv_taxed =  sum(taxed_fmv, na.rm=TRUE),\n    fmv_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;900 & final_tax_to_tif &gt; 0, fmv, 0), na.rm = TRUE),\n    fmv_inTIF = sum(fmv_inTIF, na.rm=TRUE),\n    eav_tif_increment = sum(final_tax_to_tif/tax_code_rate, na.rm=TRUE),\n    fmv_tif_increment = sum(fmv_tif_increment, na.rm=TRUE),\n    fmv_untaxable_value = sum(untaxable_value_fmv , na.rm=TRUE),\n    fmv_exemptions = sum(all_exemptions/eq2022/loa, na.rm=TRUE),\n    fmv_abatements = sum(exe_abate/eq2022/loa, na.rm=TRUE),\n    zero_bill = sum(zero_bill, na.rm=TRUE),\n    fmv_residential = sum(ifelse(class %in% c(200:399), fmv, 0), na.rm = TRUE),\n    fmv_C2 = sum(ifelse(class %in% c(200:299), fmv, 0), na.rm = TRUE),\n    \n    fmv_industrial = sum(ifelse(class %in% industrial_classes, fmv, 0), na.rm = TRUE),\n    fmv_commercial = sum(ifelse(class %in% commercial_classes, fmv, 0), na.rm = TRUE),\n    \n    current_rate_avg = mean(tax_code_rate),\n    avg_C2_bill_noexe = mean(ifelse(between(class,200,299) & all_exemptions == 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    avg_C2_bill_withexe = mean(ifelse(between(class,200,299) & all_exemptions &gt; 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    av_taxed = sum(taxed_av, na.rm = TRUE),\n    untaxable_value_av = sum(untaxable_value_av, na.rm=TRUE),\n    av = sum(av),\n    eav_taxed = sum(taxed_av*eq2022, na.rm=TRUE), \n    eav_untaxable = sum(untaxable_value_eav, na.rm=TRUE),\n    eav_max = sum(fmv*loa*eq2022, na.rm=TRUE),\n    fmv = sum(fmv, na.rm=TRUE),\n    pins_in_class = n(),\n    all_exemptions = sum(all_exemptions),   # in EAV\n    abatements = sum(exe_abate),            # in EAV\n    eav_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;=900 & in_tif == 1, eav, 0), na.rm = TRUE),\n    #  loa = mean((loa*classgroup_PC ) / sum(classgroup_PC), na.rm=TRUE),\n    final_tax_to_dist = sum(final_tax_to_dist),\n    final_tax_to_tif = sum(final_tax_to_tif),\n    eav = sum(eav),\n    new_TEAV_noIncents = sum(ifelse(class &gt;=600 & class &lt;900,\n                                    (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022), na.rm=TRUE),\n    \n    new_TEAV_noC6 = sum(ifelse( class &gt;=600 & class &lt;700, \n                                (taxed_av*eq2022/loa)*0.25 , taxed_av*eq2022)),\n    new_TEAV_noC7 = sum(ifelse(class &gt;=700 & class &lt;800,\n                               (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022)),\n    new_TEAV_noC8 = sum(ifelse(class &gt;=800 & class &lt;900, (taxed_av*eq2022/loa)*0.25, taxed_av*eq2022)),\n    \n    new_TEAV_vacant_noIncents = sum(ifelse(class &gt;=600 & class &lt;900,\n                                           0, taxed_av*eq2022), na.rm=TRUE)) |&gt; \n  mutate(\n    \n    new_TEAV_noExemps = eav_taxed + all_exemptions, # does not include abatements\n    new_TEAV_noAbates = eav_taxed + abatements, # include only abatements, not other exemption types\n    \n    # amount of EAV from taxing an additional 15% of the AV if incentive properties didn't exist\n    forgone_EAV_incent = #class_group %in% incentive_majorclasses,\n      #incent_prop == \"Incentive\", \n      new_TEAV_noIncents - eav_taxed,\n    \n    # TIF increment above the frozen EAV\n  #  forgone_TIF_EAV = fmv_tif_increment * loa * eq2022\n    ) %&gt;%\n  #cbind(table_cook) %&gt;%\n  mutate(\n    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties\n    # Commercial and industrial assessed at 25%\n    TEAV_max = eav_taxed + all_exemptions + abatements + eav_tif_increment + forgone_EAV_incent,\n    \n    # no exemptions or incentive classifications:\n    TEAV_neither = eav_taxed + all_exemptions + forgone_EAV_incent,\n    \n    rate_noExe = final_tax_to_dist / new_TEAV_noExemps * 100,\n    rate_noAbate = final_tax_to_dist / new_TEAV_noAbates * 100,\n    rate_noInc = final_tax_to_dist / new_TEAV_noIncents * 100,\n    rate_neither = final_tax_to_dist / TEAV_neither * 100, \n    rate_noTIFs = final_tax_to_dist / (eav_taxed + eav_tif_increment) * 100,\n    rate_vacant = final_tax_to_dist / new_TEAV_vacant_noIncents* 100,\n    rate_lowest = final_tax_to_dist / TEAV_max * 100,\n    # rate_noC6 = levy / new_TEAV_noC6 * 100,\n    # rate_noC7 = levy / TEAV_noC7 * 100,\n    # rate_noC8 = levy / TEAV_noC8 * 100,\n    rate_current = final_tax_to_dist / eav_taxed * 100,\n    change_noInc = rate_current - rate_noInc,\n    change_neither = rate_current - rate_neither,\n    change_noTIF = rate_current - rate_noTIFs,\n    change_noExe = rate_current - rate_noExe,\n    change_vacant = rate_current - rate_vacant,\n    change_lowest = rate_current - rate_lowest\n  )  %&gt;%\n     mutate(across(contains(\"rate_\"), round, digits = 2))",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "incentive_report_content.html#tables---difference-in-composite-tax-rates",
    "href": "incentive_report_content.html#tables---difference-in-composite-tax-rates",
    "title": "Incentive Classifications",
    "section": "Tables - Difference in Composite Tax Rates",
    "text": "Tables - Difference in Composite Tax Rates\n\n\nCode\nmuni_ratechange_sliced &lt;- muni_ratechange %&gt;% \n  select(clean_name, rate_current, rate_noInc, change_noInc) %&gt;% \n  arrange(desc(change_noInc) ) %&gt;%\n  mutate(across(c(rate_current, rate_noInc, change_noInc), round, digits=2)) %&gt;%\n  mutate(change_noInc = abs(round(change_noInc, digits = 2)) ) %&gt;% \n  slice(c(1:5, 58:62, 115:119)) \n\nmuni_ratechange_sliced %&gt;%\n  flextable() %&gt;% \n  border_remove() %&gt;%\n  hline_top() %&gt;%\n  hline(i = c(5,10)) %&gt;%\n  set_header_labels(clean_name = \"Municipality\", rate_current = \"Current Comp.\\nTax Rate\", rate_noInc = \"Tax Rate if No\\nIncent. Class.\",\n                    change_noInc = \"Rate Change\") %&gt;%\n  bold(i = 8) %&gt;%\n  add_footer(\"There are 26 municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.\", top = FALSE) %&gt;%\n  set_table_properties( layout = \"autofit\")\n\n\n\n\n\nMunicipalityCurrent Comp.Tax RateTax Rate if NoIncent. Class.Rate ChangeMc Cook13.618.954.66Bedford Park14.259.724.54Matteson18.5014.084.42Ford Heights27.1222.914.20North Lake12.198.004.19Niles8.057.790.26Robbins16.3216.080.24Chicago Ridge13.3913.170.22Midlothian16.0015.790.21Glenview7.437.240.19Stickney13.1313.130.00Western Springs8.768.760.00Wilmette7.357.350.00Winnetka7.467.460.00Worth14.1214.120.00\n\n\n\nTable 7.1: Composite Tax Rate Change from hypothetical scenario of taxing incentive property at 25% of their FMV instead of 10% of their FMV. There are 26 municipalities that do not use incentives and have a majority of their taxable EAV within Cook County.\n\n\n\n\n\n\nCode\nmuni_ratechange %&gt;% \n  select(clean_name, change_noInc) %&gt;% \nmutate(change_noInc = round(change_noInc)) %&gt;%\n  filter(clean_name != \"Unincorporated\") %&gt;%\n  left_join(nicknames) %&gt;%\n  full_join(muni_shp, by = c(\"shpfile_name\" = \"MUNICIPALITY\")) %&gt;%\n\n  ggplot(aes(fill = change_noInc)) +\n  geom_sf(aes(geometry = geometry), color = \"black\") +\n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n  scale_fill_steps2(\n    low = \"lightblue\", high = \"darkblue\",\n    show.limits=TRUE,\n    nice.breaks=FALSE,\nna.value = \"gray50\",\n    n =4,\n    name = \"Tax Rate Change\\nin Percentage Pts\") +\n   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = \"white\", alpha = .5, color = 'gray40')\n\n\n\n\n\n\n\n\nFigure 7.1: Hypothetical change in composite tax rate if all value that currently receives incentive classification became assessed at 25%.\n\n\n\n\n\n\n\nCode\nmuni_ratechange %&gt;% \n  select(clean_name, change_neither) %&gt;% \nmutate(change_neither = round(change_neither)) %&gt;%\n  filter(clean_name != \"Unincorporated\") %&gt;%\n  left_join(nicknames) %&gt;%\n  full_join(muni_shp, by = c(\"shpfile_name\" = \"MUNICIPALITY\")) %&gt;%\n\n  ggplot(aes(fill = change_neither)) +\n  geom_sf(aes(geometry = geometry), color = \"black\") +\n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n  scale_fill_steps2(\n    low = \"black\", high = \"brown\",\n    show.limits=TRUE,\n    nice.breaks=FALSE,\nna.value = \"gray50\",\n    n =4,\n    name = \"Tax Rate Change\\nin Percentage Pts\") +\n   geom_sf_pattern(data = no_incentives, aes(geometry = geometry), pattern = 'crosshatch', pattern_spacing = 0.015, pattern_density = 0.1, fill = \"white\", alpha = .5, color = 'gray40')\n\n\n\n\n\n\n\n\nFigure 7.2: Hypothetical change in composite tax rate if all value that currently receives incentive classification became assessed at 25% and exempt EAV from GHE became taxable.\n\n\n\n\n\n\n\nCode\n# as a dot graph ## \n# create order of dots\norder &lt;- muni_ratechange %&gt;%  \n  as_tibble() %&gt;% \n filter(change_noInc &gt;0) %&gt;%\n  arrange(rate_current) %&gt;%\n  select(clean_name, rate_current)\n\n# make dot graph\nmuni_ratechange %&gt;% \n filter(change_noInc &gt; .7) %&gt;%\n  select(clean_name, rate_current, rate_noInc) %&gt;% \n  distinct() %&gt;%\n  arrange(rate_current) %&gt;%\n  pivot_longer(c(\"rate_current\", \"rate_noInc\"), \n               names_to = \"type\", values_to = \"tax_rate\") %&gt;% \n  inner_join(order) %&gt;%\n  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+\n  geom_line(aes(group = clean_name))+ \n  geom_point(aes(fill=type), size=3, pch = 21, color = \"black\" \n             )+\n    # scale_color_manual(palette=\"Blues\", \n    #                  labels = c(\"Current Rate\", \"No Incentives\")#,  \n    #               #   values = c(\"#A6CEE3\", \"#1F78B4\" )\n    #                  )+\n  theme_minimal() + \n  theme( \n    legend.title = element_blank(),\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg\n  )+\n  scale_fill_brewer(palette=\"Paired\", labels = c(\"Incentives\", \"No Incentives\"), direction = 1)+\n\n  \n  labs(title = \"Difference in Composite Tax Rate if Assessed at 25%\",\n       subtitle = \"Ordered by Current Composite Tax Rate\", x = \"Composite Tax Rate (%)\", y = \"\")\n\n\n\n\n\n\n\n\nFigure 7.3: Change in tax rate if incentive properties were assessed at 25% of their FMV instead of their reduced level of assessment.\n\n\n\n\n\n\n\nCode\n# as a dot graph ## \n# create order of dots\norder &lt;- muni_ratechange %&gt;%  \n  as_tibble() %&gt;% \n  filter(change_noInc &gt; 0) %&gt;% \n  arrange(change_noInc) %&gt;%\n  select(clean_name, change_noInc) %&gt;%\n  distinct()\n\n\n# make dot graph\nmuni_ratechange %&gt;% \n  filter(change_noInc &gt; .5) %&gt;%\n  filter(change_noInc &gt; 0) %&gt;%\n\n  select(clean_name, rate_current, rate_noInc, change_noInc) %&gt;% \n  distinct() %&gt;%\n  pivot_longer(c(\"rate_current\", \"rate_noInc\"), \n               names_to = \"type\", values_to = \"tax_rate\") %&gt;% \n  left_join(order) %&gt;%\n    filter(change_noInc &gt; 0 ) %&gt;%\n  mutate(clean_name = if_else(clean_name == \"Mc Cook\", \"McCook\", clean_name)) %&gt;%\n  ggplot(aes(x = tax_rate, y= reorder(clean_name, change_noInc)))+\n  geom_line(aes(group = clean_name))+ \n  geom_point(aes(fill=type), size=3, pch = 21, color = \"black\" )+\n  theme_minimal() + \n  theme( \n    legend.title = element_blank(),\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg\n  )+\n  scale_fill_brewer(palette=\"Paired\", labels = c(\"Incentives\", \"No Incentives\"), direction = 1)+\n  \n  labs(title = \"Difference in Composite Tax Rate if Assessed at 25%\",\n       subtitle = \"Ordered by Comp. Rate Change\", x = \"Composite Tax Rate (%)\", y = \"\")\n\n\n\n\n\n\n\n\nFigure 7.4: Change in Tax Rate from use of Incentives. Ordered by amount of change in the composite tax rate. Only shows municipalities that had more than 1/2 percentage point change in tax rate.\n\n\n\n\n\n\n\nCode\n# as a dot graph ## \n# create order of dots\norder &lt;- muni_ratechange %&gt;%  \n  as_tibble() %&gt;% \n  filter(change_noInc &gt; 0) %&gt;%\n  arrange(rate_current) %&gt;%\n  select(clean_name, rate_current) %&gt;% distinct()\n\n# make dot graph\nmuni_ratechange %&gt;% \n  filter(change_noInc &gt; .5) %&gt;%\n  select(clean_name, rate_current, rate_noInc, #rate_neither, \n         rate_vacant, rate_noExe) %&gt;% \n  distinct() %&gt;%\n  arrange(rate_current) %&gt;%\n  pivot_longer(c(\"rate_current\", \n                 \"rate_noInc\", \n                 \"rate_vacant\", \n                 \"rate_noExe\"# ,\n                #  \"rate_neither\"\n), \n               names_to = \"type\", values_to = \"tax_rate\") %&gt;% \n  inner_join(order) %&gt;%\n  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+\n  geom_line(aes(group = clean_name))+ \n  geom_point(aes(fill=type), size=3, pch = 21, color = \"black\" )+\n  theme_minimal() + \n  theme( \n    legend.title = element_blank(),\nlegend.position = \"bottom\",\nplot.title.position = \"plot\",\n    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg\n  )+\n  scale_fill_brewer(palette = \"RdGy\",\n                    labels = c(\"Current Rate\", \n                             #  \"No Exemps & LoA is 25%\",\n                               \"No Exemptions\", \n                               \"No Incentives:\\nLoA 25%\",\n                               \"Incententive Classification\\nLoA = 0%\"\n                    ), \n                    direction = -1)+\n  labs(title = \"Composite Tax Rate Scenarios\",\n       subtitle = \"Ordered by Current Composite Tax Rate\", \n       x = \"Composite Tax Rate (%)\", y = \"\")\n\n\n\n\n\n\n\n\nFigure 7.5: Only shows municipalities that had more than 1/2 percentage point change in tax rate.\n\n\n\n\n\n\n\nCode\n# as a dot graph ## \n# create order of dots\norder &lt;- muni_ratechange %&gt;%  \n  as_tibble() %&gt;% \n  filter(change_noInc &gt; 0) %&gt;%\n  arrange(rate_current) %&gt;%\n  select(clean_name, rate_current) %&gt;% distinct()\n\n# make dot graph\nmuni_ratechange %&gt;% \n  filter(change_noInc &gt; 0) %&gt;%\n  select(clean_name, rate_current, rate_noInc, #rate_neither, \n         rate_vacant, rate_noExe) %&gt;% \n  distinct() %&gt;%\n  arrange(rate_current) %&gt;%\n  pivot_longer(c(\"rate_current\", \n                 \"rate_noInc\", \n                 \"rate_vacant\", \n                 \"rate_noExe\"# ,\n                #  \"rate_neither\"\n), \n               names_to = \"type\", values_to = \"tax_rate\") %&gt;% \n  inner_join(order) %&gt;%\n  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+\n  geom_line(aes(group = clean_name))+ \n  geom_point(aes(fill=type), size=3, pch = 21, color = \"black\" )+\n  theme_minimal() + \n  theme( \n    legend.title = element_blank(),\nlegend.position = \"bottom\",\nplot.title.position = \"plot\",\n    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg\n  )+\n  scale_fill_brewer(palette = \"RdGy\",\n                    labels = c(\"Current Rate\", \n                             #  \"No Exemps & LoA is 25%\",\n                               \"No Exemptions\", \n                               \"No Incentives:\\nLoA 25%\",\n                               \"Incententive Classification\\nLoA = 0%\"\n                    ), \n                    direction = -1)+\n  labs(title = \"Composite Tax Rate Scenarios\",\n       subtitle = \"Ordered by Current Composite Tax Rate\", \n       x = \"Composite Tax Rate (%)\", y = \"\")\n\n\n\n\n\n\n\n\nFigure 7.6: Same as figure above but includes all municipalities that had a taxrate change from altering the level of assessment for incentive class properties.\n\n\n\n\n\n\n\nCode\n# as a dot graph ## \n# create order of dots\norder &lt;- muni_ratechange %&gt;%  \n  as_tibble() %&gt;% \n  filter(change_noInc &gt; .5) %&gt;%\n  arrange(rate_current) %&gt;%\n  select(clean_name, rate_current) %&gt;% distinct()\n\n# make dot graph\nmuni_ratechange %&gt;% \n filter(change_noInc &gt; .5) %&gt;%\n  select(clean_name, rate_current, rate_noInc, rate_vacant) %&gt;% \n  distinct() %&gt;%\n  arrange(rate_current) %&gt;%\n  pivot_longer(c(\"rate_current\", \n                 \"rate_noInc\", \n                 \"rate_vacant\"\n                 ), \n               names_to = \"type\", values_to = \"tax_rate\") %&gt;% \n  inner_join(order) %&gt;%\n  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+\n  geom_line(aes(group = clean_name))+ \n  geom_point(aes(fill=type), size=3, pch = 21, color = \"black\" )+\n  theme_minimal() + \n  theme( \n    legend.title = element_blank(),\nlegend.position = \"bottom\",\nplot.title.position = \"plot\",\n    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg\n  )+\n  scale_fill_brewer(palette = \"Greys\", direction = -1,\n                    labels = c(\"Current Rate\", \n                             #  \"No Exemps & LoA is 25%\",\n                             #  \"If no Exemptions\", \n                               \"No Incentive Classes: \\nLoA = 25%\",\n                               \"Incentive Classification\\nLoA = 0%\"\n                    )\n)+\n  labs(title = \"Composite Tax Rate Scenarios\",\n       subtitle = \"Ordered by Current Composite Tax Rate\", \n       x = \"Composite Tax Rate (%)\", y = \"\")\n\n\n\n\n\n\n\n\nFigure 7.7: Only shows municipalities that had more than 1/2 percentage point change in tax rate.\n\n\n\n\n\n\n\nCode\nlibrary(ggrepel)\n# make dot graph\nmuni_ratechange %&gt;% \n  filter( clean_name ==\"Markham\" ## | clean_name == \"Matteson\"\n          ) %&gt;%\n  select(clean_name, rate_current, rate_noInc, rate_neither, rate_vacant, rate_noExe) %&gt;% \n  distinct() %&gt;%\n  arrange(rate_current) %&gt;%\n  pivot_longer(c(\"rate_current\", \"rate_noInc\", \n                  \"rate_vacant\", \"rate_noExe\",\n                  \"rate_neither\"), \n               names_to = \"type\", values_to = \"tax_rate\") %&gt;% \n  inner_join(order) %&gt;%\n  ggplot(aes(x = tax_rate, y= reorder(clean_name, rate_current)))+\n  geom_line(aes(group = clean_name))+ \n  geom_point(aes(fill=type), size=3, pch = 21, color = \"black\" )+\n  geom_text_repel(aes(x=tax_rate),\n                  hjust = 0,\n                  vjust = -1,\n                  min.segment.length = Inf,\n                  size = 3,\n                  angle = 30,\n                  label = c(\"Current Rate\", \"If LoA 25%\" ,\n                            \"If Vacant\" , \"If no Exemps\",\n                            \"No Exemps & LoA is 25%\") )+\n  theme_minimal() + \n  theme( \n    legend.title = element_blank(),\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill='transparent', color=NA),\n    legend.position = \"none\"  )+\n  scale_fill_manual(\n    values = c(\"#BDD7E7\", \"#6BAED6\", \"#3182BD\", \"#EFF3FF\",  \"#08519C\")) +\n  scale_x_continuous(limits = c(17, 35)) + \n  scale_y_discrete(\n    expand = expand_scale(mult = c(.1, 1)) ,\n           #        limits = c(\"Markham\")#, breaks = \"Markham\"\n                   )  + \n  labs(\n    x = \"Composite Tax Rate (%)\", \n    y = \"\")",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Incentive Classifications</span>"
    ]
  },
  {
    "objectID": "exemption_report_2023update.html",
    "href": "exemption_report_2023update.html",
    "title": "Exemptions in Cook County - Tax Year 2023",
    "section": "",
    "text": "Cook County’s Use of Homestead Exemptions",
    "crumbs": [
      "Additional Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2023</span>"
    ]
  },
  {
    "objectID": "exemption_report_2023update.html#cook-countys-use-of-homestead-exemptions",
    "href": "exemption_report_2023update.html#cook-countys-use-of-homestead-exemptions",
    "title": "Exemptions in Cook County - Tax Year 2023",
    "section": "",
    "text": "Figure 1 or 2?. Exemption Use\n\n\nCode\nmuni_sums &lt;- read_csv(\"../Output/ptaxsim_muni_level_2006to2023.csv\") |&gt; \n left_join(nicknames)\n\n\nmuni_mc_sums &lt;- read_csv(\"../Output/ptaxsim_muni_MC_2006to2023.csv\") |&gt;\n  rename_all(~str_replace(., \"muni_mc_\", \"\"))\n\n\nmuni_cl_sums &lt;- read_csv(\"../Output/ptaxsim_muni_class_summaries_2006to2023.csv\") |&gt;\n  left_join(nicknames)\n\n\n\n\nCode\nyear_examples &lt;- c(2023)\n\nfor(i in year_examples){\n  tbl &lt;- muni_cl_sums %&gt;% \n  filter(year == i) %&gt;%\n  group_by(year) %&gt;% \n  summarize(AV = sum(muni_c_av), \n            EAV = sum(muni_c_eav), \n            Eq_AV = sum(muni_c_equalized_av),\n            'Taxed EAV' = sum(muni_c_current_taxable_eav),\n            'All Exemptions' = sum(muni_c_all_exemptions), \n            'GHE' = sum(muni_c_exe_homeowner), \n            'Senior Exemp.' = sum(muni_c_exe_senior), \n            'Freeze Exemp.' = sum(muni_c_exe_freeze), \n            'PINs in Muni' = sum(muni_c_pins_in_muni),\n            'PINs with Exemptions' = sum(muni_c_has_HO_exemp))  %&gt;% \n  pivot_longer(cols = c(AV:'PINs with Exemptions'), \n               names_to = \"Totals\", values_to = \"Values\") \nprint(tbl)\n}\n\n\n# A tibble: 10 × 3\n    year Totals                      Values\n   &lt;dbl&gt; &lt;chr&gt;                        &lt;dbl&gt;\n 1  2023 AV                    78873223159 \n 2  2023 EAV                  237900442609 \n 3  2023 Eq_AV                237905309979 \n 4  2023 Taxed EAV            198837987383.\n 5  2023 All Exemptions        15576109524 \n 6  2023 GHE                    9888668957 \n 7  2023 Senior Exemp.          2714623787 \n 8  2023 Freeze Exemp.          2884707583 \n 9  2023 PINs in Muni              1864161 \n10  2023 PINs with Exemptions      1000590 \n\n\n\n\nFigure 3. Percent Exempt\nTotal value of exemptions as a share of residential EAV, 2023\n\n\nCode\nyear_examples &lt;- c(2023)\n\nfor(i in year_examples){\n\nmedian_exempt &lt;- muni_sums %&gt;%\n  filter(year==i)%&gt;%\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv\n) %&gt;% \n  select(pct_fmv_exempt)\n\nmidpoint = scales::percent(median(median_exempt$pct_fmv_exempt), accuracy = 0.01)\n\nprint(muni_sums %&gt;%\n  filter(year==i)%&gt;%\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv ) %&gt;%\n    mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) %&gt;%\n full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) %&gt;%\n  ggplot(aes(fill = pct_fmv_exempt)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void()+ \n  labs(title = paste0(i), \n       subtitle =  \"Exempt FMV / Municipality FMV\",\n       caption = sprintf(\"The municipality median is %s\", midpoint)) +\n    theme_void() + \n  theme(axis.ticks = element_blank(), \n        axis.text = element_blank())+\n   scale_fill_steps2(high = \"darkblue\", low = \"black\",  mid = \"beige\",\n                       n.breaks = 7, show.limits=TRUE,\n                       na.value = NA,\n                    nice.breaks = FALSE,\n                   midpoint = median(median_exempt$pct_fmv_exempt),\n                        name = \"% FMV \\nthat is exempt\", label = scales::percent))\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\nyear_examples &lt;- c(2023)\n\nfor(i in year_examples){\n\nmedian_exempt &lt;- muni_sums %&gt;%\n  filter(year==i)%&gt;%\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv\n) %&gt;% \n  select(pct_fmv_exempt)\n\nmidpoint = scales::percent(median(median_exempt$pct_fmv_exempt), accuracy = 0.01)\n\nprint(muni_sums %&gt;%\n  filter(year==i)%&gt;%\n  mutate(pct_fmv_exempt = muni_fmv_exempt / muni_fmv ) %&gt;%\n    mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) %&gt;%\n full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) %&gt;%\n  ggplot(aes(fill = pct_fmv_exempt)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void()+ \n  labs(title = paste0(i), \n       subtitle =  \"Exempt FMV / Municipality FMV\",\n       caption = sprintf(\"The municipality median is %s\", midpoint)) +\n    theme_void() + \n  theme(axis.ticks = element_blank(), \n        axis.text = element_blank())+\n   scale_fill_steps(high = \"darkblue\", low = \"pink\",\n                       n.breaks = 5, show.limits=TRUE,\n                    limits = c(0, 0.35),\n                       na.value = \"gray50\",\n                    nice.breaks = FALSE,\n                        name = \"% FMV \\nthat is exempt\", label = scales::percent))\n}\n\n\n\n\n\n\n\n\n\n\n\nFigure 4. Exempt Tax Base in Cook County\n\n\nCode\nmuni_cl_sums %&gt;% \n  filter(year == 2023) %&gt;% \n  select(clean_name, muni_c_exe_homeowner:muni_c_exe_vet_dis) %&gt;%\n  mutate(clean_name = ifelse(is.na(clean_name), \"Unincorporated\", clean_name),\n    Geography = ifelse(clean_name == \"Chicago\", \"City\", \"Suburbs\"),\n         Geography = ifelse(is.na(clean_name), \"Unincorporated\", Geography),\n         Geography = factor(Geography, levels = c(\"Suburbs\", \"City\", \"Unincorporated\"))) %&gt;%\n  group_by(Geography) %&gt;%\n  summarize(\"GHE\" = sum(muni_c_exe_homeowner, na.rm=TRUE),\n            \"Senior Homestead\" = sum(muni_c_exe_senior, na.rm=TRUE),\n            \"Senior Freeze\" = sum(muni_c_exe_freeze, na.rm=TRUE),\n            \"Other Exemptions\" = sum(muni_c_exe_longtime_homeowner+muni_c_exe_disabled+muni_c_exe_vet_returning+ muni_c_exe_vet_dis_lt50 + muni_c_exe_vet_dis_50_69+muni_c_exe_vet_dis_ge70)) %&gt;%\n  pivot_longer(cols = c(`GHE`:`Other Exemptions`), names_to = \"Type\" ) %&gt;%\n   mutate(Type = factor(Type, levels = c(\"GHE\", \"Senior Homestead\", \"Senior Freeze\", \"Other Exemptions\" \n                                         #\"Senior Freeze\", \"Senior Homestead\", \"GHE\"\n                                        )\n                                        )) %&gt;%\n  ggplot(aes(x=Type, y = value/1000000000, fill = Geography\n             )) +\n  \n  geom_col(\n           position = \"dodge\" \n          ) + \n  theme_minimal() +\n  labs(title = \"Exempt EAV in Cook County, Tax Year 2023\", \n       subtitle = \"by Type and Geography\", \n       y = \"EAV (Billions)\", x = \"Exemption Type\") + \n  scale_y_continuous() +\n  scale_fill_manual(values = c(\"blue3\", \"deepskyblue3\", \"gray\"), )\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 4.1: Total Exempt EAV in 2023 in the City of Chicago and the Suburbs\n\n\n\n\nExempt Tax Base in Cook County by exemption type and geography, for tax year 2021\n\n\n\nFigure 5. Value of residential exemptions by type in Cook County, 2006 - 2023\n\n\nCode\nmuni_cl_sums %&gt;% \n  select(year, muni_c_exe_homeowner:muni_c_exe_vet_dis) %&gt;%\n  group_by(year) %&gt;%\n  summarize(\"GHE\" = sum(muni_c_exe_homeowner, na.rm=TRUE),\n            \"Senior Homestead\" = sum(muni_c_exe_senior, na.rm=TRUE),\n            \"Senior Freeze\" = sum(muni_c_exe_freeze, na.rm=TRUE),\n            \"Other Exemptions\" = sum(muni_c_exe_longtime_homeowner + muni_c_exe_disabled + muni_c_exe_vet_returning+ muni_c_exe_vet_dis_lt50 + muni_c_exe_vet_dis_50_69+muni_c_exe_vet_dis_ge70, na.rm = T)) %&gt;%\n  pivot_longer(cols = c(`GHE`:`Other Exemptions`), names_to = \"Type\" ) %&gt;%\n  mutate(Type = factor(Type, levels = c(#\"GHE\", \"Senior Homestead\", \"Senior Freeze\", \n                                        \"Other Exemptions\", \"Senior Freeze\", \"Senior Homestead\", \"GHE\"))) %&gt;%\n  ggplot(aes(x=year, y = value/1000000000, fill = Type)) +\n  \n  geom_bar( stat = \"identity\" ) + \n  theme_minimal() +\n  labs(title = \"Residential Exempt EAV in Cook County\", \n       subtitle = \"by Type and Geography, 2006-2023\", \n       y = \"EAV (Billions)\", x =\"\") +\n  scale_fill_manual(values = c(\"chartreuse2\",  \"darksalmon\", \"brown2\", \"blue4\" )) +\n                    scale_x_continuous(breaks = c(2006, 2010, 2015, 2020, 2023))",
    "crumbs": [
      "Additional Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2023</span>"
    ]
  },
  {
    "objectID": "exemption_report_2023update.html#effect-on-composite-tax-rates",
    "href": "exemption_report_2023update.html#effect-on-composite-tax-rates",
    "title": "Exemptions in Cook County - Tax Year 2023",
    "section": "Effect on Composite Tax Rates",
    "text": "Effect on Composite Tax Rates\n\n\n\nCode\ncross_county_lines &lt;- c(\"030440000\", \"030585000\", \"030890000\", \"030320000\", \"031280000\",\n                        \"030080000\", \"030560000\", \"031120000\", \"030280000\", \"030340000\",\n                        \"030150000\",\"030050000\", \"030180000\",\"030500000\", \"031210000\")\n\neq_factor &lt;- 3.02\n\n\nincentive_majorclasses &lt;- c(\"6\", \"7A\", \"7B\", \"8A\", \"8B\")\n\ncommercial_classes &lt;- c(401:435, 490, 491, 492, 496:499,\n                        500:535,590, 591, 592, 597:599, \n                        700:799,\n                        800:835, 891, 892, 897, 899)  \n\nindustrial_classes &lt;- c(480:489,493, \n                        550:589, 593,\n                        600:699,\n                        850:890, 893\n                        )\n\nptax_pins &lt;- read_csv(\"../Output/Dont_Upload/0_Joined_PIN_data_2023.csv\") %&gt;% select(-c(eq_av, propclass_1dig))\n\n\nptax_pins &lt;- ptax_pins %&gt;% \n  mutate(class_1dig = str_sub(class, 1,1),\n         class_group = case_when(\n          (class_1dig == 5 & class %in% commercial_classes) ~ \"5A\",\n          (class_1dig == 5 & class %in% industrial_classes) ~ \"5B\",\n          class_1dig == 7 &  class &lt; 742 ~ \"7A\",\n          class_1dig == 7 &  class &gt;= 742 ~ \"7B\",\n          (class_1dig == 8 & class %in% commercial_classes ) ~ \"8A\",\n          (class_1dig == 8 & class %in% industrial_classes ) ~ \"8B\",\n          TRUE ~ as.character(class_1dig))) %&gt;%\n  mutate(\n    # taxing district revenue = taxable eav * tax rate so rearrange the formula:\n    taxed_eav = final_tax_to_dist / tax_code_rate*100,\n    \n    total_value_eav = (final_tax_to_dist + final_tax_to_tif)/ tax_code_rate * 100 + all_exemptions + abatements,\n    \n    exempt_eav_inTIF = ifelse(in_tif == 1, all_exemptions, 0),\n    \n    exempt_eav = all_exemptions + abatements,\n    \n    taxed_av =  taxed_eav / eq_factor, # current value that taxing agencies can tax for their levies\n    \n    ## taxable AV = equalized assessed value net TIF increments, gross exemptions. \n    ## Used for calculating untaxable value further below\n   # taxable_av = (final_tax_to_dist / tax_code_rate *100 + all_exemptions + abatements)/ eq_factor, \n  \n    # taxable_eav_fromincents =  ifelse(class &gt;=600 & class &lt; 900, taxable_av * eq_factor, 0),\n\n      ## untaxable value = exempt EAV from abatements and exemptions + TIF increment\n    untaxable_value_eav = all_exemptions + abatements + \n      ## TIF increment EAV above frozen EAV, which becomes TIF revenue\n      (final_tax_to_tif /  tax_code_rate*100) +\n      \n      ## difference between 25% and reduced level of assessment for incentive class properties. Excludes TIF increment when calculating the difference! \n      ifelse(between(class, 600, 899), \n             (taxed_av/loa*0.25 - taxed_av)*eq_factor, 0),\n   \n    untaxable_incent_eav = ifelse(between(class, 600, 899), \n             (taxed_av/loa*0.25 - taxed_av)*eq_factor, 0),\n   \n    #  manually adjust untaxable value of class 239 properties\n    untaxable_value_eav = ifelse(class == 239, \n                                 equalized_av-taxed_eav, untaxable_value_eav), \n    \n    untaxable_value_av = untaxable_value_eav / eq_factor,\n    untaxable_value_fmv = untaxable_value_av / loa,\n\n    exempt_fmv = exempt_eav / eq_factor / loa, \n    \n    fmv_inTIF = ifelse(in_tif==1, av/loa, 0),\n   \n    fmv_tif_increment = ifelse(final_tax_to_tif &gt; 0, \n                               ((final_tax_to_tif / (tax_code_rate/100)) / eq_factor ) / loa, 0),\n    fmv_incents_inTIF = ifelse(between(class, 600, 899) & in_tif == 1, \n                               fmv, 0),\n    fmv_incents_tif_increment = ifelse(between(class, 600, 899) & final_tax_to_tif &gt; 0 , \n                               ((final_tax_to_tif / (tax_code_rate/100)) / eq_factor ) / loa, 0),\n    naive_rev_forgone =  untaxable_incent_eav * tax_code_rate/100) %&gt;%\n  select(tax_code, class, pin, fmv,\n         untaxable_value_fmv, fmv_inTIF, fmv_tif_increment, fmv, total_billed, final_tax_to_dist, final_tax_to_tif, tax_code_rate, eav, equalized_av, av, everything())\n\n\n\n\nCode\nmuni_ratechange &lt;- ptax_pins %&gt;%\n  mutate(class = as.numeric(class)) %&gt;%         # Allows for joining later\n  select(-c(propclass_1dig:av.y)) %&gt;%\n  filter(!clean_name  %in% c(\"Frankfort\", \"Homer Glen\",  \"Oak Brook\", \"East Dundee\", \"University Park\",  \"Bensenville\", \"Hinsdale\", \"Roselle\", \"Deer Park\", \"Deerfield\")) %&gt;% \n  # filter(!agency_num %in% cross_county_lines) %&gt;%\n  group_by(clean_name) %&gt;%\n  summarize(\n    classgroup_PC = n(),\n    # projects = n_distinct(both_ids), # mostly for industrial and commercial properties\n    pins_withincents = sum(ifelse(class &gt;= 600 & class &lt; 900, 1,0)),\n    fmv_incentive = sum(ifelse(class &gt;=600 & class &lt;900, fmv, 0), na.rm = TRUE),\n    #fmv_taxed =  sum(taxed_fmv, na.rm=TRUE),\n    fmv_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;900 & final_tax_to_tif &gt; 0, fmv, 0), na.rm = TRUE),\n    fmv_inTIF = sum(ifelse(final_tax_to_tif &gt; 0, fmv, 0), na.rm=TRUE),\n    fmv_tif_increment = sum(fmv_tif_increment, na.rm=TRUE),\n    fmv_untaxable_value = sum(untaxable_value_fmv , na.rm=TRUE),\n    fmv_exemptions = sum(all_exemptions/eq_factor/loa, na.rm=TRUE),\n    fmv_abatements = sum(exe_abate/eq_factor/loa, na.rm=TRUE),\n    zero_bill = sum(zero_bill, na.rm=TRUE),\n    fmv_residential = sum(ifelse(class %in% c(200:399), fmv, 0), na.rm = TRUE),\n    fmv_C2 = sum(ifelse(class %in% c(200:299), fmv, 0), na.rm = TRUE),\n    \n    fmv_industrial = sum(ifelse(class %in% industrial_classes, fmv, 0), na.rm = TRUE),\n    fmv_commercial = sum(ifelse(class %in% commercial_classes, fmv, 0), na.rm = TRUE),\n    \n    current_rate_avg = mean(tax_code_rate),\n    avg_C2_bill_noexe = mean(ifelse(between(class,200,299) & all_exemptions == 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    avg_C2_bill_withexe = mean(ifelse(between(class,200,299) & all_exemptions &gt; 0, (final_tax_to_dist + final_tax_to_tif), NA), na.rm=TRUE),\n    av_taxed = sum(taxed_av, na.rm = TRUE),\n    untaxable_value_av = sum(untaxable_value_av, na.rm=TRUE),\n    av = sum(av),\n    eav_taxed = sum(taxed_av*eq_factor), \n    eav_untaxable = sum(untaxable_value_eav, na.rm=TRUE),\n    eav_tif_increment = sum(final_tax_to_tif/tax_code_rate, na.rm=TRUE),\n    eav_max = sum(fmv*loa*eq_factor, na.rm=TRUE),\n    fmv = sum(fmv, na.rm=TRUE),\n    pins_in_class = n(),\n    all_exemptions = sum(all_exemptions),   # in EAV\n    abatements = sum(exe_abate),            # in EAV\n    eav_incents_inTIFs = sum(ifelse(class &gt;=600 & class &lt;=900 & in_tif == 1, eav, 0), na.rm = TRUE),\n    final_tax_to_dist = sum(final_tax_to_dist),\n    final_tax_to_tif = sum(final_tax_to_tif),\n    eav = sum(eav),\n    new_TEAV_noIncents = sum(ifelse(class &gt;=600 & class &lt;900,\n                                    (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor), na.rm=TRUE),\n    \n    ####### Not used currently\n    # new_TEAV_noC6 = sum(ifelse( class &gt;=600 & class &lt;700, \n    #                             (taxed_av*eq_factor/loa)*0.25 , taxed_av*eq_factor)),\n    # new_TEAV_noC7 = sum(ifelse(class &gt;=700 & class &lt;800,\n    #                            (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor)),\n    # new_TEAV_noC8 = sum(ifelse(class &gt;=800 & class &lt;900, (taxed_av*eq_factor/loa)*0.25, taxed_av*eq_factor)),\n    # \n    #######\n\n     new_TEAV_vacant_noIncents = sum(ifelse(class &gt;=600 & class &lt;900,\n                                            0, taxed_av*eq_factor))\n    ) %&gt;%\n  mutate(\n    \n    new_TEAV_noExemps = eav_taxed + all_exemptions, # does not include abatements\n    new_TEAV_noAbates = eav_taxed + abatements, # include only abatements, not other exemption types\n    \n    # amount of EAV from taxing an additional 15% of the AV if incentive properties didn't exist\n    forgone_EAV_incent = #class_group %in% incentive_majorclasses,\n      #incent_prop == \"Incentive\", \n      new_TEAV_noIncents - eav_taxed) %&gt;%\n  #cbind(table_cook) %&gt;%\n  mutate(\n    # Absolute maximum TEAV: No Exemptions, no abatements, no TIFS, no Incentive properties\n    # Commercial and industrial assessed at 25%\n    TEAV_max = eav_taxed + all_exemptions + abatements + eav_tif_increment + forgone_EAV_incent,\n    \n    # no exemptions or incentive classifications:\n    TEAV_neither = eav_taxed + all_exemptions + forgone_EAV_incent,\n    \n    rate_noExe = final_tax_to_dist / new_TEAV_noExemps * 100,\n    rate_noAbate = final_tax_to_dist / new_TEAV_noAbates * 100,\n    rate_noInc = final_tax_to_dist / new_TEAV_noIncents * 100,\n    rate_neither = final_tax_to_dist / TEAV_neither * 100, \n    rate_noTIFs = final_tax_to_dist / (eav_taxed + eav_tif_increment) * 100,\n    rate_vacant = final_tax_to_dist / new_TEAV_vacant_noIncents* 100,\n    rate_lowest = final_tax_to_dist / TEAV_max * 100,\n    # rate_noC6 = levy / new_TEAV_noC6 * 100,\n    # rate_noC7 = levy / TEAV_noC7 * 100,\n    # rate_noC8 = levy / TEAV_noC8 * 100,\n    rate_current = final_tax_to_dist / eav_taxed * 100,\n    change_noInc = rate_current - rate_noInc,\n    change_neither = rate_current - rate_neither,\n    change_noTIF = rate_current - rate_noTIFs,\n    change_noExe = rate_current - rate_noExe,\n    change_vacant = rate_current - rate_vacant,\n    change_lowest = rate_current - rate_lowest\n  )  %&gt;%\n     mutate(across(contains(\"rate_\"), round, digits = 2)) %&gt;%\n     mutate(across(contains(\"change_\"), round, digits = 2))\n\nwrite_csv(muni_ratechange, \"../Output/muni_ratechange_2023.csv\")\n\n\n\n\nCode\nmuni_ratechange &lt;- read_csv(\"../Output/muni_ratechange_2023.csv\")\n\nmuni_ratechange %&gt;% \n  select(clean_name, starts_with(\"change_\")) %&gt;% \n  DT::datatable(rownames = FALSE)\n\n\n\n\n\n\n\nFigure 6. Composite property tax rates with and without homestead exemptions, tax year 2021\nFigure 6 will not be recreated but is just a bar chart of the change in tax rate in the table below\n\n\nTable 1. Change in composite property tax rates due to exemptions, tax year 2023.\n\n\nCode\nmuni_ratechange %&gt;% \n  select(clean_name,  current_rate_avg, rate_noExe, change_noExe, final_tax_to_dist \n         ) %&gt;% \n  DT::datatable(rownames = FALSE, colnames = c('Municipality' = 'clean_name','Current Comp. Rate' = 'current_rate_avg', 'Hypothetical Rate' = 'rate_noExe',  'Composite Tax Rate Change'='change_noExe', \n\n                       'Composite Levy' = 'final_tax_to_dist'),\n          caption = \"Table 1: Current and Hypothetical Composite Tax Rates if GHE $0\") %&gt;%\n  formatCurrency('Composite Levy', digits = 0)\n\n\n\n\n\n\n\n\n\n\nTable 4.2: Searchable table containing all municipalities and the hypothetical tax rate change if exempt EAV became taxable.\n\n\n\n\n\n\nCode\nmuni_ratechange %&gt;%\n  select(clean_name,  current_rate_avg, rate_noExe, change_noExe \n) %&gt;%\n  arrange(desc(change_noExe)) %&gt;%\n  slice(c(1:5, 69:73, 121:125)) %&gt;%\n    #slice(c(1:5, 58:62, 115:119)) %&gt;%\n\n  flextable() %&gt;% \n  border_remove() %&gt;%\n  hline_top() %&gt;%\n  hline(i = c(5,10)) %&gt;%\n\n  set_header_labels(\n    clean_name = \"Municipality\", \n    current_rate_avg = \"With Exemptions\",\n    rate_noExe = \"Without Exemptions\",\n    change_noExe = \"Percent Point Difference\"\n    \n    ) %&gt;%\n  align(j = 2, align = \"right\") %&gt;%\nalign(j=2, align = \"right\", part = \"header\") %&gt;%\nset_table_properties( layout = \"autofit\") %&gt;% bold(i = 8) \n\n\n\n\n\nMunicipalityWith ExemptionsWithout ExemptionsPercent Point DifferencePhoenix27.4813.8113.59Park Forest23.6118.335.22Riverdale25.3820.225.01Dolton20.1115.624.31Calumet City20.6916.944.04Riverside10.609.650.95Orland Hills9.047.950.93Palatine9.838.900.92Broadview10.439.510.90Merrionette Park9.758.850.90Winnetka7.697.510.18Rosemont8.978.760.08Hodgkins9.148.740.07Mc Cook10.8010.420.06Bedford Park11.3011.250.05\n\n\n\nTable 4.3: Includes all exemption types in calculation of rate change.\n\n\n\n\n\n\nFigure 7. Map of Spatial Patterns in Composite Tax Rate Change\nChange in composite tax rate if exempt EAV was added back to the the taxable tax base (i.e. if there were no exemptions).\n\n\nCode\nmuni_ratechange  %&gt;%\n  left_join(nicknames, by = \"clean_name\") %&gt;%\n     #mutate(burden_current = ifelse(burden_current&gt;1, 1, burden_current)) %&gt;%\n\n    # filter(major_class_code == 2) %&gt;%\n  mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name),\n         shpfile_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) %&gt;%\n  full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) %&gt;%\n\n  ggplot(aes(fill = change_noExe)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n   scale_fill_stepsn(colors = c( \"#F7FEF5\",\n                                # \"#e4f1e0\",\n                                \"#d4f6cc\",\n                                \"#47ba24\",\n                                \"#1F6805\",\n                                \"#133C04\"),\n                        show.limits=TRUE, \n                     limits = c(0, 15),\n                     breaks = c(0, 2.5, 5, 7.5, 10, 15),\n                     na.value = NA,\n                        name = \"Rate Change from \\nExemptions\"  \n                    )",
    "crumbs": [
      "Additional Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2023</span>"
    ]
  },
  {
    "objectID": "exemption_report_2023update.html#effect-on-tax-burdens",
    "href": "exemption_report_2023update.html#effect-on-tax-burdens",
    "title": "Exemptions in Cook County - Tax Year 2023",
    "section": "Effect on Tax Burdens",
    "text": "Effect on Tax Burdens\n\nFigure 8. Dolton example of Share of levy paid by property type\nCMAP used a donut chart, we will use a bar chart that represents 100% on the x a axis.\n\n\nCode\ntaxcodes_current &lt;- ptax_pins %&gt;% \n  group_by(tax_code) %&gt;%\n  summarize(\n    av = sum(av),\n    eav = sum(eav),\n    equalized_AV = sum(equalized_av),\n    pins_in_class = n(),\n    current_exemptions = sum(all_exemptions),\n    HO_exemps = sum(exe_homeowner),\n    tax_code_rate = first(tax_code_rate), \n    final_tax_to_dist = sum(final_tax_to_dist, na.rm = TRUE), # used as LEVY amount!! \n    final_tax_to_tif = sum(final_tax_to_tif, na.rm = TRUE),\n    tax_amt_exe = sum(tax_amt_exe, na.rm = TRUE), \n    tax_amt_pre_exe = sum(tax_amt_pre_exe, na.rm = TRUE), \n    tax_amt_post_exe = sum(tax_amt_post_exe, na.rm = TRUE),\n    rpm_tif_to_cps = sum(rpm_tif_to_cps, na.rm = TRUE), # not used\n    rpm_tif_to_rpm = sum(rpm_tif_to_rpm, na.rm=TRUE), # not used\n    rpm_tif_to_dist = sum(rpm_tif_to_dist, na.rm=TRUE), # not used\n    tif_share = mean(tif_share, na.rm=TRUE), # not used\n  ) %&gt;%\n  \n  mutate(total_bill_current = final_tax_to_dist + final_tax_to_tif) %&gt;%\n  mutate(cur_comp_TC_rate = tax_code_rate) %&gt;%\n  mutate(current_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100),\n         new_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100) + HO_exemps) %&gt;%\n  mutate(new_comp_TC_rate = (final_tax_to_dist / new_taxable_eav)*100) %&gt;%\n  mutate(new_comp_TC_rate = ifelse(is.nan(new_comp_TC_rate), cur_comp_TC_rate, new_comp_TC_rate)) %&gt;%\n  select(tax_code, cur_comp_TC_rate, new_comp_TC_rate, current_taxable_eav, new_taxable_eav, everything())\n\ntaxcode_taxrates &lt;- taxcodes_current %&gt;% \n  select(tax_code, cur_comp_TC_rate, new_comp_TC_rate, current_exemptions, HO_exemps)\n\n\nmc_burden &lt;- ptax_pins |&gt;\n  left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  group_by(clean_name, class_1dig) |&gt;\n  \n  ## calculate taxbase from each major class \n  ## and the amount of taxes currently collected from each\n  summarize(group_taxbase= sum(taxed_eav),\n            group_taxes_current = sum(taxed_eav * (tax_code_rate/100)),\n            hyp_group_taxbase = sum(taxed_eav + all_exemptions, na.rm = T),\n            hyp_group_taxes = sum( (taxed_eav + all_exemptions) * (new_comp_TC_rate/100), na.rm = T)\n     )  %&gt;%\n  mutate(across(c(group_taxbase:hyp_group_taxes), round, 0)) %&gt;%\n  group_by(clean_name) |&gt;\n  \n  mutate(\n    muni_taxbase = sum(group_taxbase, na.rm=T),\n    muni_levy = sum(group_taxes_current, na.rm = T)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n         pct_eav = group_taxbase / muni_taxbase,\n         pct_taxburden_current = group_taxes_current / muni_levy,\n         hyp_pct_taxburden = hyp_group_taxes / muni_levy) |&gt;\n  mutate(\n         burden_shift = (pct_taxburden_current - hyp_pct_taxburden)*100)\n\n\nburden_c2 &lt;- mc_burden %&gt;% \n  filter(class_1dig == 2) %&gt;% \n  select(clean_name, pct_eav, burden_shift,  pct_taxburden_current, hyp_pct_taxburden) %&gt;% \n  arrange(pct_eav)\n\nmc_burden %&gt;% \n  filter(clean_name == \"Dolton\") %&gt;% \n  select(class_1dig, pct_taxburden_current, hyp_pct_taxburden) %&gt;% \n  arrange(desc(pct_taxburden_current))\n\n\n\n\n\n\n  \n\n\n\n\nTable 4.4\n\n\n\n\n\n\nFigure 9. Change in Share of Tax Burden\n\n\nTable 2. Change in share of property tax burden\nTable 2: Change in the share of property tax burden due to exemptions for single-family, multi-family, and commercial and industrial properties, tax year 2023\n\n\nCode\nburden_shift &lt;- ptax_pins %&gt;%\n    mutate(Group = case_when(\n    class_1dig == 2 ~ \"Single-family\",\n    class_1dig %in% c(3, 9) ~ \"Multi-family\",\n     TRUE ~ \"Commercial & Industrial\"\n  )) %&gt;%\n    left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  group_by(clean_name, Group) |&gt;\n  \n  ## calculate taxbase from each major class \n  ## and the amount of taxes currently collected from each\n  summarize(group_taxbase= sum(taxed_eav, na.rm = T),\n            group_taxes_current = sum(taxed_eav * (tax_code_rate/100), na.rm = T),\n            hyp_group_taxbase = sum(taxed_eav + all_exemptions, na.rm = T),\n            hyp_group_taxes = sum( (taxed_eav + all_exemptions) * (new_comp_TC_rate/100), na.rm = T)\n     )  %&gt;%\n  mutate(across(c(group_taxbase:hyp_group_taxes), round, 0)) %&gt;%\n  ungroup() |&gt;\n  group_by(clean_name) |&gt;\n  mutate(\n    muni_taxbase = sum(group_taxbase, na.rm=T),\n    muni_levy = sum(group_taxes_current, na.rm = T)\n  ) %&gt;%  \n  ungroup() %&gt;%\n  mutate(\n         pct_eav_current = group_taxbase / muni_taxbase,\n         pct_taxburden_current = group_taxes_current / muni_levy,\n         hyp_pct_taxburden = hyp_group_taxes / muni_levy) |&gt; \n  mutate(\n         burden_shift = (pct_taxburden_current - hyp_pct_taxburden)*100) \n\n\n\n\nCode\nburden_shift &lt;- ptax_pins %&gt;%\n  filter(class_1dig != 0) |&gt;\n    mutate(Group = case_when(\n    class_1dig == 2 ~ \"Single-family\",\n    class_1dig == 3 | class_1dig == 9 ~ \"Multi-family\",\n     TRUE ~ \"Commercial & Industrial\"\n  )) %&gt;%\n    left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  group_by(clean_name) %&gt;% \n  mutate(muni_levy = sum(final_tax_to_dist, na.rm=TRUE)) %&gt;%\n  ungroup() %&gt;%\n  group_by(clean_name, Group, muni_levy) |&gt;\n  \n  ## calculate taxbase from each major class \n  ## and the amount of taxes currently collected from each\n  summarize(group_taxbase= sum(taxed_eav, na.rm = T),\n            group_taxes_current = sum(taxed_eav * (cur_comp_TC_rate/100), na.rm = T),\n            hyp_group_taxbase = sum(taxed_eav + all_exemptions, na.rm = T),\n            hyp_group_taxes = sum( (taxed_eav + all_exemptions) * (new_comp_TC_rate/100), na.rm = T))  %&gt;%\n  mutate(across(c(group_taxbase:hyp_group_taxes), round, 0)) %&gt;%\n  ungroup() |&gt;\n # group_by(clean_name) |&gt;\n # mutate(\n   # muni_taxbase = sum(group_taxbase, na.rm=T),\n   # muni_levy = sum(group_taxes_current, na.rm = T)\n # ) %&gt;%  \n # ungroup() %&gt;%\n  mutate(\n     #    pct_eav_current = group_taxbase / muni_taxbase,\n         pct_taxburden_current = group_taxes_current / muni_levy,\n         hyp_pct_taxburden = hyp_group_taxes / muni_levy)  |&gt; \n  mutate(\n         burden_shift = (pct_taxburden_current - hyp_pct_taxburden))\n\n\n\n\nCode\n## Current tax burden \nburden_shift %&gt;%  \n    select(clean_name, Group, pct_taxburden_current) %&gt;%\npivot_wider(id_cols = clean_name, names_from = Group, values_from = pct_taxburden_current) %&gt;%\n  arrange((`Single-family`))\n\n\n\n\n\n\n  \n\n\n\n\nTable 4.5: Current tax burden (levy paid by group / total levy billed by municipality)\n\n\n\n\n\nSomething is wrong with burden shift calculation\n\n\n\nCode\nburden_shift %&gt;%  \n    select(clean_name, Group, burden_shift) %&gt;%\npivot_wider(id_cols=clean_name, names_from = Group, values_from = burden_shift) %&gt;%\n  arrange((`Single-family`))\n\n\n\n\n\n\n  \n\n\n\n\nTable 4.6: Change in tax burden, measured in percentage point change.\n\n\n\n\n\n\nCode\ndatatable(burden_c2, rownames = FALSE,\n          colnames = c('Municipality' = 'clean_name', \n                       'Burden Shift, Pct Pt Change' = 'burden_shift', \n                       \"C2 EAV/Muni EAV\" = 'pct_eav', \n                       'Current Tax Burden\\nC2 Tax Collected / Muni Levy' = 'pct_taxburden_current', \n                       \"Hypothetical Tax Burden\\nHyp. C2 Tax Collected / Muni Levy\" = 'hyp_pct_taxburden'),\n          caption = \"Table 2: Current Share of Taxable EAV and Share of Levy Paid by Class 2 Properties\"\n           ) %&gt;%\n  formatPercentage(c(2,3,4,5), digits = 2) %&gt;%\n  formatRound(c(3), digits = 2)\n\n\n\nFigure 9 Follow up. Current Tax Burden Map\n\n\nCode\nburden_c2 %&gt;%\n  left_join(nicknames) %&gt;%\n  mutate(agency_name = ifelse(agency_name == \"TOWN CICERO\", \"CITY OF CICERO\", agency_name) ) %&gt;%\n  full_join(muni_shp, by = c(\"agency_name\" = \"AGENCY_DESC\")) %&gt;%\n\n  ggplot(aes(fill = pct_taxburden_current)) + \n  geom_sf(aes(geometry = geometry), color = \"black\") + \n  theme_void() + \n  theme(axis.ticks = element_blank(), axis.text = element_blank())+\n  # scale_fill_gradientn(\n   scale_fill_stepsn(colors = c(\"#ffffcc\",\"#a1dab4\" ,\"#41b6c4\",\"#2c7fb8\", \"#253494\"),\n                        show.limits=TRUE, \n                     limits = c(0,1),\n                     na.value = \"gray70\",\n                     n.breaks = 6,\n                        name = \"Burden with \\nExemptions\", \n                     labels = scales::percent\n                     \n                    )+\n  labs(title = \"Current share of property tax burden\", \n       subtitle = \"for Class = 2 Property Types\")\n\n\n\n\n\n\n\n\n\n\n\n\nTable 3.\nDifference in taxbills for those that do and do not claim homeowner exemption\n\n\n\nCode\nptax_pins &lt;- ptax_pins %&gt;% \n  left_join(taxcode_taxrates, by = \"tax_code\") |&gt;\n  mutate(\n    bill_current = (final_tax_to_dist + final_tax_to_tif),\n    bill_noGHE = new_comp_TC_rate/100*(equalized_av-all_exemptions+exe_homeowner),\n    bill_noexemps = new_comp_TC_rate/100*(equalized_av),\n    bill_change = bill_noGHE - bill_current)\n\n\n\n\nCode\nC2_munistats &lt;- ptax_pins %&gt;% \n  filter(class &gt; 199 & class &lt; 300) %&gt;%\n  group_by(clean_name)  %&gt;%\n  arrange(av) %&gt;%\n  summarize(\n    median_eav = round(median(eav)), \n    median_av = round(median(av)), \n    avg_av = round(mean(av)),\n    avg_eav = round(mean(eav)),\n    C2_pins_in_muni = n(),\n    C2_current_exemptions = sum(all_exemptions, na.rm = TRUE),\n    C2_HO_exemps = sum(exe_homeowner, na.rm = TRUE),\n  )\n\n## removes properties that have more than one exemption type\nC2_munistats_filtered &lt;- ptax_pins %&gt;% \n  filter(class &gt; 199 & class &lt; 300) %&gt;%\n    filter(exe_senior == 0 & \n           exe_freeze == 0 & \n           exe_longtime_homeowner == 0 & \n           exe_disabled == 0 & \n           exe_vet_returning == 0 & \n           exe_vet_dis_lt50 == 0 & \n           exe_vet_dis_50_69 == 0 & \n           exe_vet_dis_ge70 == 0 & \n           exe_abate == 0) %&gt;%\n  group_by(clean_name)  %&gt;%\n  arrange(av) %&gt;%\n  summarize(\n    median_eav = round(median(eav, na.rm=TRUE)), \n    median_av = round(median(av, na.rm=TRUE)), \n    avg_av = round(mean(av, na.rm=TRUE)),\n    avg_eav = round(mean(eav, na.rm=TRUE)),\n    C2_pins_in_muni = n(),\n    C2_current_exemptions = sum(all_exemptions, na.rm = TRUE),\n    C2_HO_exemps = sum(exe_homeowner, na.rm = TRUE),\n  )\n\nC2_munistats_filtered \n\n\n\n  \n\n\n\nCode\nC2_munistats\n\n\n\n  \n\n\n\n\n\nCode\n## Grouped by if they have a $0 tax bill and had the GHE per muni\n## Recalculating for Josh & Rachael\nmuni_median_summarytable &lt;- ptax_pins %&gt;% \n\n  filter(class &gt;199 & class &lt; 300) %&gt;% \n  \n  # merge in muni residential median AV\n  left_join(C2_munistats_filtered) %&gt;%\n  \n  # +/- 500 from municpalities median residential AV\n  filter(av &lt; median_av+200 & av &gt; median_av-200) %&gt;%\n  \n  # Removes properties that received other types of exemptions\n  filter(exe_senior == 0 & \n           exe_freeze == 0 & \n           exe_longtime_homeowner == 0 & \n           exe_disabled == 0 & \n           exe_vet_returning == 0 & \n           exe_vet_dis_lt50 == 0 & \n           exe_vet_dis_50_69 == 0 & \n           exe_vet_dis_ge70 == 0 & \n           exe_abate == 0) %&gt;%\n  \n  arrange(av) %&gt;%\n  \n  mutate(bill_current = (final_tax_to_dist + final_tax_to_tif),\n         bill_noexemps =  new_comp_TC_rate/100*(equalized_av-all_exemptions+exe_homeowner),\n         bill_change = bill_noexemps - bill_current) %&gt;%\n  \n  group_by(clean_name, # zero_bill, \n           has_HO_exemp) %&gt;% \n  \n  summarize(AV = median(median_av), # median_av was calculated earlier: C2 median AV for the muni \n            `Taxable EAV` = round(median(eav)),\n            bill_cur = round(median(bill_current)),\n            bill_new = round(median(bill_noexemps)),\n            bill_change = round(median(bill_change)),\n            pincount=n(),\n            perceived_savings = round(median(tax_amt_exe))) %&gt;% \n  \n  # merge in clean_names variable\n  left_join(nicknames) %&gt;%\n  \n  select(clean_name, has_HO_exemp, bill_cur, bill_new, bill_change, perceived_savings,  AV, `Taxable EAV`, everything()) %&gt;%\n  select(-c(agency_number, agency_name))\n\nmuni_median_summarytable\n\n\n\n  \n\n\n\nCode\nmuni_taxrates &lt;- ptax_pins %&gt;% \n  group_by(clean_name)  %&gt;%\n  arrange(av) %&gt;%\n  \n  summarize(\n    muni_median_av = round(median(av, na.rm=TRUE)),\n    muni_median_eav = round(median(eav, na.rm=TRUE)),\n    muni_mean_av = round(mean(av, na.rm=TRUE)),\n    muni_mean_eav = round(mean(eav, na.rm=TRUE)),\n    av = sum(av, na.rm = TRUE),\n    eav = sum(eav, na.rm = TRUE),\n    equalized_AV = sum(equalized_av, na.rm = TRUE),\n    pins_in_muni = n(),\n    current_exemptions = sum(all_exemptions, na.rm = TRUE),\n    HO_exemps = sum(exe_homeowner, na.rm = TRUE),\n    tax_code_rate = mean(tax_code_rate, na.rm = TRUE), # Changed from first() to mean() on Nov 1\n    final_tax_to_dist = sum(final_tax_to_dist, na.rm = TRUE), # used as LEVY amount!! \n    final_tax_to_tif = sum(final_tax_to_tif, na.rm = TRUE),\n    tax_amt_exe = sum(tax_amt_exe, na.rm = TRUE), \n    tax_amt_pre_exe = sum(tax_amt_pre_exe, na.rm = TRUE), \n    tax_amt_post_exe = sum(tax_amt_post_exe, na.rm = TRUE),\n    rpm_tif_to_cps = sum(rpm_tif_to_cps, na.rm = TRUE), # not used\n    rpm_tif_to_rpm = sum(rpm_tif_to_rpm, na.rm=TRUE), # not used\n    rpm_tif_to_dist = sum(rpm_tif_to_dist, na.rm=TRUE), # not used\n    tif_share = mean(tif_share, na.rm=TRUE), # not used\n  ) %&gt;%\n  \n  mutate(total_bill_current = final_tax_to_dist + final_tax_to_tif) %&gt;%\n  rename(cur_comp_TC_rate = tax_code_rate) %&gt;%\n  mutate(current_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100),\n         new_taxable_eav = final_tax_to_dist/(cur_comp_TC_rate/100) + HO_exemps) %&gt;%\n  mutate(new_comp_TC_rate = (final_tax_to_dist / new_taxable_eav)*100) %&gt;%\n  \n  mutate(new_comp_TC_rate = ifelse(is.nan(new_comp_TC_rate), cur_comp_TC_rate, new_comp_TC_rate)) %&gt;% \n  \n  left_join(C2_munistats) %&gt;%\n  left_join(nicknames) %&gt;%\n  mutate(rate_change = cur_comp_TC_rate - new_comp_TC_rate,\n    nobillchange_propertyEAV = round(10000 * ((cur_comp_TC_rate/100) / (rate_change/100))),\n    nochange_av = round(nobillchange_propertyEAV / eq_factor),\n    nochange_ratio = nochange_av / median_av) %&gt;%\n  select(clean_name, C2median_av = median_av, muni_median_av,  C2mean_av = avg_av, muni_mean_av, cur_comp_TC_rate, new_comp_TC_rate, current_taxable_eav, new_taxable_eav, everything())\n\nmuni_taxrates \n\n\n\n  \n\n\n\nCode\nmuni_taxrates %&gt;% left_join(nicknames) %&gt;% select(clean_name, muni_median_av, C2median_av, nochange_av )\n\n\n\n  \n\n\n\nCode\nmuni_median_summarytable %&gt;% \n  left_join(muni_taxrates) %&gt;% \n  ungroup() %&gt;%\n  select(clean_name, has_HO_exemp, bill_cur, bill_new, bill_change, perceived_savings,  AV, `Taxable EAV`, nochange_av, nochange_ratio) #%&gt;%\n\n\n\n  \n\n\n\n\n\nCode\nptax_pins |&gt; \n  filter(clean_name %in% c(\"Chicago\", \"Dolton\", \"Glencoe\")) |&gt;\n  filter(between(av, 14500, 15000)) %&gt;%\n  filter(class_1dig == 2) |&gt; \n  filter(exe_senior == 0 & exe_freeze == 0 ) |&gt;\n  group_by(clean_name, has_HO_exemp) %&gt;%\n  arrange(av) %&gt;%\n  \n  summarize(\n            median_bill = median(total_billed, na.rm=TRUE),\n            median_AV = median(av, na.rm= TRUE),\n            eav = median(eav, na.rm=TRUE),\n            # class = median(class),\n            type = \"Current Exemptions\",\n            N = n())\n\n\n\n  \n\n\n\n\n\nTable 4.\nMunicipalities with the largest and smallest reductions in tax base (as a share of residential EAV due to exemptions) and median property values\n\n\nFigure 10. Tax Burden Shift from Current GHE\nShare of municipal property tax levy paid by Class 2 properties with and without homestead exemptions, tax year 2021\n\n\n\nCode\n# as a dot graph ## \n\norder &lt;- mc_burden |&gt;\n  filter(class_1dig == 2) |&gt;\n    select(clean_name, pct_taxburden_current, burden_shift)\n\nslice &lt;-  mc_burden |&gt;\n  filter(class_1dig == 2) |&gt;\n    select(clean_name, pct_taxburden_current, burden_shift) %&gt;%\n  arrange(pct_taxburden_current) %&gt;%\n  slice(1:5, 63:67, 127:131)\n\n\n\nmedian_burden &lt;- median(order$pct_taxburden_current)\nmedian_shift &lt;- median(order$burden_shift)\n\n# median burden change is 5.9 percentage points\n# current median burden is 70.3% of the levy\n\nmc_burden %&gt;% \n  filter(clean_name %in% slice$clean_name) %&gt;%\n#filter(!clean_name %in% cross_county_lines$clean_name)%&gt;%\n  filter(class_1dig == 2) |&gt;\n#  filter(burden_current &gt; 0.938 |burden_current &lt; .17 |\n #          ( (burden_current &lt; median(burden_current) + 0.01 )& (burden_current &gt; median(burden_current) - 0.01)) )%&gt;% \n  ungroup() %&gt;% \n      select(clean_name, pct_taxburden_current, hyp_pct_taxburden, burden_shift) %&gt;%\n  arrange(burden_shift) %&gt;%\n # mutate(  burden_noexemps = ifelse(burden_noexemps &gt; 1, 1, burden_noexemps)) %&gt;%\n  pivot_longer(c(\"pct_taxburden_current\", \"hyp_pct_taxburden\"), \n               names_to = \"type\", values_to = \"pct_burden\") %&gt;% \n  inner_join(order) %&gt;%\n  ggplot(aes(x = pct_burden*100, \n             y= reorder(clean_name, -pct_taxburden_current)))+\n  # y= reorder(clean_name, burden_current)))+\n  geom_vline(xintercept = 70.2, linetype = 3)+\n  geom_line(aes(group = clean_name))+ \n  geom_hline(yintercept = 5.5, linetype = 2)+\n  geom_hline(yintercept = 10.5, linetype = 2)+\n  geom_point(aes(color=type), size=3 )+\n\n  theme_minimal() + \n  theme(#legend.position = \"none\", \n    legend.title = element_blank(),\n    plot.title.position = \"plot\",\n    #   panel.background = element_rect(fill='transparent'), #transparent panel bg\n    plot.background = element_rect(fill='transparent', color=NA) #transparent plot bg\n  )+\n  scale_color_brewer(palette=\"Paired\", labels = c(\"Current Burden\", \"Burden if \\nNo Exemptions\" ), direction = 1)+\n\n  \n  labs(title = \"Change in Class 2 Residential Tax Burden\", \n       subtitle = \"Ordered by Current Tax Burden\",\n  x = \"Share of Levy (%)\", y = \"\" , \n  caption = \"Dotted line represents median Class 2 burden (65.5% of the levy). Residential Tax Burden is the \n  share of the property tax collected that was paid for by property owners with Class 2 properties.\") +\n    geom_label(label = \"Class 2 pays small share of \\nlevy; very little residential\", x=32, y = 13, label.size = 1, size = 3)+\n    geom_label(label = \"Class 2 pays median share of \\nlevy (70.3%), mix of land use\", x=42, y = 7.5, label.size = 1, size = 3) +\n    geom_label(label = \"Class 2 pays nearly all of levy, \\nhighly residential\", x=70, y = 3, label.size = 1,size = 3)\n\n\n\n\n\n\n\n\nFigure 4.1\n\n\n\n\n\n\n\nFigure 11. Zero Dollar Bills\n\n\nCode\nmuni_mc_sums %&gt;%\n  filter(major_class_code == 2) %&gt;% \n  group_by(year) %&gt;%\n  summarize(zerodollar_count = sum(zero_bill)) %&gt;% \n  ggplot(aes(x=year, y = zerodollar_count)) + \n  geom_bar(position = \"stack\", stat = \"identity\") + theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nsmallbills &lt;- ptax_pins |&gt; \n  filter(class_1dig == 2 & eav &lt; 150 ) |&gt;\n  select(clean_name, class, eav, equalized_av, av, fmv, total_billed, \n         final_tax_to_dist, pin, everything()) |&gt;\n  arrange(total_billed) %&gt;% arrange(desc(total_billed)) %&gt;%\n  filter(total_billed &gt; 0)\n\nsmallbills\n\n\n\n  \n\n\n\nCode\nsmallbills |&gt;\n  summarize(n = n(), \n            exe_freeze = sum(exe_freeze, na.rm=T),\n            exe_senior = sum(exe_senior, na.rm=T),\n            exe_homeowner = sum(exe_homeowner, na.rm=T))\n\n\n\n  \n\n\n\nCode\nsmallbills |&gt;\n  group_by(clean_name) %&gt;%\n  summarize(n = n(), \n            exe_freeze = sum(exe_freeze, na.rm=T),\n            exe_senior = sum(exe_senior, na.rm=T),\n            exe_homeowner = sum(exe_homeowner, na.rm=T))\n\n\n\n  \n\n\n\nCode\nsmallbills |&gt; \n  select(clean_name, class, eav, equalized_av, av, fmv, \n         total_billed, final_tax_to_dist, pin)\n\n\n\n  \n\n\n\n\n\nCode\nzerobills &lt;- ptax_pins |&gt; \n  filter(class_1dig == 2 & eav &gt; 0 & total_billed == 0) |&gt;\n  select(clean_name, class, eav, equalized_av, av, fmv, total_billed, final_tax_to_dist, pin, exe_homeowner, exe_senior, exe_freeze, everything())  %&gt;%\n  arrange(desc(exe_freeze))\n\nzerobills\n\n\n\n  \n\n\n\nCode\noptions(scipen = 999)\n\nzerobills %&gt;% \n  reframe(n = n(), total_eav = sum(taxed_eav + exempt_eav, na.rm=TRUE),\n          exe_homeowner = sum(exe_homeowner), exe_senior = sum(exe_senior), \n          exe_freeze = sum(exe_freeze), taxed_eav = sum(taxed_eav, na.rm=TRUE), \n          .by = clean_name) |&gt; \n  arrange(desc(exe_freeze))\n\n\n\n  \n\n\n\nCode\nzerobills %&gt;% \n  summarize(n = n(), total_eav = sum(taxed_eav + exempt_eav, na.rm=TRUE),\n          exe_homeowner = sum(exe_homeowner), exe_senior = sum(exe_senior), \n          exe_freeze = sum(exe_freeze), taxed_eav = sum(taxed_eav, na.rm=TRUE)) |&gt; \n  arrange(desc(exe_freeze))\n\n\n\n  \n\n\n\nCode\nzerobills %&gt;% \n  group_by(Triad) %&gt;%\n  summarize(n = n(), total_eav = sum(taxed_eav + exempt_eav, na.rm=TRUE),\n          exe_homeowner = sum(exe_homeowner), exe_senior = sum(exe_senior), \n          exe_freeze = sum(exe_freeze), taxed_eav = sum(taxed_eav, na.rm=TRUE)) |&gt; \n  arrange(desc(exe_freeze))\n\n\n\n  \n\n\n\n\n\nCode\nptax_pins |&gt; \n  filter(class_1dig == 2 & eav &gt; 0 & total_billed == 0) |&gt;\n  select(clean_name, class, eav, equalized_av, av, fmv, total_billed, final_tax_to_dist, pin, exe_homeowner, exe_senior, exe_freeze)  %&gt;%\n  arrange(desc(exe_freeze)) %&gt;%\n  summarize(max = max(eav),\n            min = min(eav),\n            median = median(eav),\n            n = n())",
    "crumbs": [
      "Additional Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Exemptions in Cook County - Tax Year 2023</span>"
    ]
  }
]